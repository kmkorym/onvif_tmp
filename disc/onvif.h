// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* onvif.h
   Generated by wsdl2h 2.8.122 from http://www.onvif.org/onvif/ver10/device/wsdl/devicemgmt.wsdl http://www.onvif.org/onvif/ver10/network/wsdl/remotediscovery.wsdl and /home/sudo1/onvif/gsoap-2.8/gsoap/typemap.dat
   2022-08-08 13:35:12 GMT

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE.

gSOAP XML Web services tools
Copyright (C) 2000-2022, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/**

@page page_notes Notes

@note HINTS:
 - Run soapcpp2 on onvif.h to generate the SOAP/XML processing logic:
   Use soapcpp2 -I to specify paths for #import
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Edit 'typemap.dat' to control namespace bindings and type mappings:
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -c to generate pure C code.
 - Use wsdl2h -R to include the REST operations defined by the WSDLs.
 - Use wsdl2h -O3 or -O4 to optimize by removing unused schema components.
 - Use wsdl2h -d to enable DOM support for xsd:any and xsd:anyType.
 - Use wsdl2h -F to simulate struct-type derivation in C (also works in C++).
 - Use wsdl2h -f to generate flat C++ class hierarchy, removes type derivation.
 - Use wsdl2h -g to generate top-level root elements with readers and writers.
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Use wsdl2h -L to remove this @note and all other @note comments.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE GENERATED soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * $SIZE typemap variable:                                                    *
 *   int                                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "wsdd10.h"	// wsdd10 = <http://schemas.xmlsoap.org/ws/2005/04/discovery>
#import "xop.h"	// xop = <http://www.w3.org/2004/08/xop/include>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to 'typemap.dat' then rerun wsdl2h (use wsdl2h -t typemap.dat):

tds = "http://www.onvif.org/ver10/device/wsdl"
tt = "http://www.onvif.org/ver10/schema"
wsnt = "http://docs.oasis-open.org/wsn/b-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"
tdn = "http://www.onvif.org/ver10/network/wsdl"

*/

#define SOAP_NAMESPACE_OF_tds	"http://www.onvif.org/ver10/device/wsdl"
//gsoap tds   schema namespace:	http://www.onvif.org/ver10/device/wsdl
//gsoap tds   schema elementForm:	qualified
//gsoap tds   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tt	"http://www.onvif.org/ver10/schema"
//gsoap tt    schema namespace:	http://www.onvif.org/ver10/schema
//gsoap tt    schema elementForm:	qualified
//gsoap tt    schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tdn	"http://www.onvif.org/ver10/network/wsdl"
//gsoap tdn   schema namespace:	http://www.onvif.org/ver10/network/wsdl
//gsoap tdn   schema elementForm:	qualified
//gsoap tdn   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in type "SOAP-ENV:Envelope".
struct SOAP_ENV__Envelope { struct SOAP_ENV__Header *SOAP_ENV__Header; _XML SOAP_ENV__Body; };

/// Built-in type "xs:base64Binary".
struct xsd__base64Binary
{
    unsigned char *__ptr;
    int __size;
    char *id, *type, *options; // NOTE: non-NULL for DIME/MIME/MTOM XOP attachments only
};

/// Built-in type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };

/// Built-in type "xs:hexBinary".
struct xsd__hexBinary
{
    unsigned char *__ptr;
    int __size;
};

// Imported type ""http://www.w3.org/2005/08/addressing":EndpointReferenceType" defined by wsa5__EndpointReferenceType.

/// Primitive built-in type "xs:NCName".
typedef char* xsd__NCName;

/// Primitive built-in type "xs:anySimpleType".
typedef char* xsd__anySimpleType;

/// Primitive built-in type "xs:anyURI".
typedef char* xsd__anyURI;

/// Primitive built-in type "xs:duration".
typedef char* xsd__duration;

/// Primitive built-in type "xs:integer".
typedef char* xsd__integer;

/// Primitive built-in type "xs:nonNegativeInteger".
typedef char* xsd__nonNegativeInteger;

/// Primitive built-in type "xs:token".
typedef char* xsd__token;

// Imported element ""http://www.w3.org/2004/08/xop/include":Include" declared as _xop__Include.

/// Built-in attribute "xml:lang".
typedef char* _xml__lang;



/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":IntList is a simpleType containing a whitespace separated list of values of type xs:int.
///
typedef char* tt__IntList;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":FloatList is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":StringAttrList is a simpleType containing a whitespace separated list of values of type xs:string.
///
typedef char* tt__StringAttrList;

/// @brief "http://www.onvif.org/ver10/schema":StringList is a simpleType containing a whitespace separated list of values of type xs:string.
///
typedef char* tt__StringList;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReferenceTokenList is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://www.onvif.org/ver10/device/wsdl":AutoGeoModes is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/device/wsdl":StorageType is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Length of this content is 0 to 64.
typedef char* tt__Name : 64;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RotateMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":SceneOrientationMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":SceneOrientationOption is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ViewModes is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":VideoEncoding is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Mpeg4Profile is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":H264Profile is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":VideoEncodingMimeNames is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":VideoEncodingProfiles is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AudioEncoding is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AudioEncodingMimeNames is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":MetadataCompressionType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":StreamType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":TransportProtocol is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":ScopeDefinition is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ScopeDefinition__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ScopeDefinition
{
	tt__ScopeDefinition__Fixed,	///< xs:string value="Fixed"
	tt__ScopeDefinition__Configurable,	///< xs:string value="Configurable"
};

/// @brief "http://www.onvif.org/ver10/schema":DiscoveryMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__DiscoveryMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__DiscoveryMode
{
	tt__DiscoveryMode__Discoverable,	///< xs:string value="Discoverable"
	tt__DiscoveryMode__NonDiscoverable,	///< xs:string value="NonDiscoverable"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority is a simpleType restriction of type xs:integer.
///
/// Value range is 0 to 31.
typedef xsd__integer tt__NetworkInterfaceConfigPriority /* from 0 (inclusive) @warning: could not determine if this type is numeric */ /* to 31 (inclusive) @warning: could not determine if this type is numeric */;

/// @brief "http://www.onvif.org/ver10/schema":Duplex is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Duplex__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Duplex
{
	tt__Duplex__Full,	///< xs:string value="Full"
	tt__Duplex__Half,	///< xs:string value="Half"
};

/// @brief "http://www.onvif.org/ver10/schema":IANA-IfTypes is a simpleType restriction of type xs:int.
///
/// <PRE><BLOCKQUOTE>
///   For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
/// </BLOCKQUOTE></PRE>
///
typedef int tt__IANA_IfTypes;

/// @brief "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IPv6DHCPConfiguration__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPv6DHCPConfiguration
{
	tt__IPv6DHCPConfiguration__Auto,	///< xs:string value="Auto"
	tt__IPv6DHCPConfiguration__Stateful,	///< xs:string value="Stateful"
	tt__IPv6DHCPConfiguration__Stateless,	///< xs:string value="Stateless"
	tt__IPv6DHCPConfiguration__Off,	///< xs:string value="Off"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkProtocolType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__NetworkProtocolType
{
	tt__NetworkProtocolType__HTTP,	///< xs:string value="HTTP"
	tt__NetworkProtocolType__HTTPS,	///< xs:string value="HTTPS"
	tt__NetworkProtocolType__RTSP,	///< xs:string value="RTSP"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkHostType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__NetworkHostType
{
	tt__NetworkHostType__IPv4,	///< xs:string value="IPv4"
	tt__NetworkHostType__IPv6,	///< xs:string value="IPv6"
	tt__NetworkHostType__DNS,	///< xs:string value="DNS"
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__IPv4Address;

/// @brief "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__IPv6Address;

/// @brief "http://www.onvif.org/ver10/schema":HwAddress is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__HwAddress;

/// @brief "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IPType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPType
{
	tt__IPType__IPv4,	///< xs:string value="IPv4"
	tt__IPType__IPv6,	///< xs:string value="IPv6"
};

/// @brief "http://www.onvif.org/ver10/schema":DNSName is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__DNSName;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Domain is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IPAddressFilterType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPAddressFilterType
{
	tt__IPAddressFilterType__Allow,	///< xs:string value="Allow"
	tt__IPAddressFilterType__Deny,	///< xs:string value="Deny"
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__DynamicDNSType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__DynamicDNSType
{
	tt__DynamicDNSType__NoUpdate,	///< xs:string value="NoUpdate"
	tt__DynamicDNSType__ClientUpdates,	///< xs:string value="ClientUpdates"
	tt__DynamicDNSType__ServerUpdates,	///< xs:string value="ServerUpdates"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SSIDType is a simpleType restriction of type xs:hexBinary.
///
/// Length of this content is 1 to 32.
typedef struct xsd__hexBinary tt__Dot11SSIDType 1 : 32;

/// @brief "http://www.onvif.org/ver10/schema":Dot11StationMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11StationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11StationMode
{
	tt__Dot11StationMode__Ad_hoc,	///< xs:string value="Ad-hoc"
	tt__Dot11StationMode__Infrastructure,	///< xs:string value="Infrastructure"
	tt__Dot11StationMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SecurityMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11SecurityMode
{
	tt__Dot11SecurityMode__None,	///< xs:string value="None"
	tt__Dot11SecurityMode__WEP,	///< xs:string value="WEP"
	tt__Dot11SecurityMode__PSK,	///< xs:string value="PSK"
	tt__Dot11SecurityMode__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11SecurityMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Cipher is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11Cipher__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11Cipher
{
	tt__Dot11Cipher__CCMP,	///< xs:string value="CCMP"
	tt__Dot11Cipher__TKIP,	///< xs:string value="TKIP"
	tt__Dot11Cipher__Any,	///< xs:string value="Any"
	tt__Dot11Cipher__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSK is a simpleType restriction of type xs:hexBinary.
///
/// Length of this content is 32.
typedef struct xsd__hexBinary tt__Dot11PSK 32 : 32;

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase is a simpleType restriction of type xs:string.
///
/// Content pattern is "[ -~]{8,63}".
typedef char* tt__Dot11PSKPassphrase "[ -~]{8,63}";

/// @brief "http://www.onvif.org/ver10/schema":Dot11SignalStrength is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SignalStrength__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11SignalStrength
{
	tt__Dot11SignalStrength__None,	///< xs:string value="None"
	tt__Dot11SignalStrength__Very_x0020Bad,	///< xs:string value="Very Bad"
	tt__Dot11SignalStrength__Bad,	///< xs:string value="Bad"
	tt__Dot11SignalStrength__Good,	///< xs:string value="Good"
	tt__Dot11SignalStrength__Very_x0020Good,	///< xs:string value="Very Good"
	tt__Dot11SignalStrength__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AuthAndMangementSuite is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11AuthAndMangementSuite__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11AuthAndMangementSuite
{
	tt__Dot11AuthAndMangementSuite__None,	///< xs:string value="None"
	tt__Dot11AuthAndMangementSuite__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11AuthAndMangementSuite__PSK,	///< xs:string value="PSK"
	tt__Dot11AuthAndMangementSuite__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__CapabilityCategory__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__CapabilityCategory
{
	tt__CapabilityCategory__All,	///< xs:string value="All"
	tt__CapabilityCategory__Analytics,	///< xs:string value="Analytics"
	tt__CapabilityCategory__Device,	///< xs:string value="Device"
	tt__CapabilityCategory__Events,	///< xs:string value="Events"
	tt__CapabilityCategory__Imaging,	///< xs:string value="Imaging"
	tt__CapabilityCategory__Media,	///< xs:string value="Media"
	tt__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available system log modes.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__SystemLogType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SystemLogType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a system log is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__SystemLogType__System,	///< xs:string value="System"
/// <PRE><BLOCKQUOTE>
///   Indicates that a access log is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__SystemLogType__Access,	///< xs:string value="Access"
};

/// @brief "http://www.onvif.org/ver10/schema":FactoryDefaultType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available factory default modes.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__FactoryDefaultType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__FactoryDefaultType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a hard factory default is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__FactoryDefaultType__Hard,	///< xs:string value="Hard"
/// <PRE><BLOCKQUOTE>
///   Indicates that a soft factory default is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__FactoryDefaultType__Soft,	///< xs:string value="Soft"
};

/// @brief "http://www.onvif.org/ver10/schema":SetDateTimeType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__SetDateTimeType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SetDateTimeType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set manually.
/// </BLOCKQUOTE></PRE>
///
	tt__SetDateTimeType__Manual,	///< xs:string value="Manual"
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set through NTP
/// </BLOCKQUOTE></PRE>
///
	tt__SetDateTimeType__NTP,	///< xs:string value="NTP"
};

/// @brief "http://www.onvif.org/ver10/schema":UserLevel is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__UserLevel__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__UserLevel
{
	tt__UserLevel__Administrator,	///< xs:string value="Administrator"
	tt__UserLevel__Operator,	///< xs:string value="Operator"
	tt__UserLevel__User,	///< xs:string value="User"
	tt__UserLevel__Anonymous,	///< xs:string value="Anonymous"
	tt__UserLevel__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayLogicalState is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayLogicalState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayLogicalState
{
	tt__RelayLogicalState__active,	///< xs:string value="active"
	tt__RelayLogicalState__inactive,	///< xs:string value="inactive"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayIdleState is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayIdleState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayIdleState
{
	tt__RelayIdleState__closed,	///< xs:string value="closed"
	tt__RelayIdleState__open,	///< xs:string value="open"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayMode
{
	tt__RelayMode__Monostable,	///< xs:string value="Monostable"
	tt__RelayMode__Bistable,	///< xs:string value="Bistable"
};

// Optimization: simpleType "http://www.onvif.org/ver10/schema":DigitalIdleState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":EFlipMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReverseMode is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of type xs:string.
///
/// Length of this content is 0 to 128.
typedef char* tt__AuxiliaryData : 128;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":PTZPresetTourState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":PTZPresetTourDirection is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":PTZPresetTourOperation is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":MoveAndTrackMethod is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AutoFocusMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AFModes is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":WideDynamicMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":BacklightCompensationMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ExposurePriority is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ExposureMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Enabled is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":WhiteBalanceMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":IrCutFilterMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ImageStabilizationMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":IrCutFilterAutoBoundaryType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ToneCompensationMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":DefoggingMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ImageSendingType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":PropertyOperation is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Direction is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReceiverMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReceiverState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Description is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":XPathExpression is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":SearchState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingStatus is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":TrackType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingJobMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingJobState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ModeOfOperation is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AudioClassType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":OSDType is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for a physical or logical resource.
///   Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class.
///   Length up to 64 characters. Token may be extended by intermediate terminal with adding prefix to make it global unique.
///   The length should be within 36 characters for generating at local device. See "Remote Token" section in Resource Query specification.
/// </BLOCKQUOTE></PRE>
///
/// Length of this content is 0 to 64.
typedef char* tt__ReferenceToken : 64;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":MoveStatus is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Entity is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is not used and was removed

// Optimization: simpleType "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is not used and was removed

// Optimization: simpleType "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReceiverReference is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingReference is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":TrackReference is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":JobToken is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingJobReference is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":Service is a complexType.
///
/// @note struct tds__Service operations:
/// - tds__Service* soap_new_tds__Service(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__Service(struct soap*, tds__Service*) default initialize members
/// - int soap_read_tds__Service(struct soap*, tds__Service*) deserialize from a source
/// - int soap_write_tds__Service(struct soap*, tds__Service*) serialize to a sink
/// - tds__Service* soap_dup_tds__Service(struct soap*, tds__Service* dst, tds__Service *src) returns deep copy of tds__Service src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__Service(tds__Service*) deep deletes tds__Service data members, use only on dst after soap_dup_tds__Service(NULL, tds__Service *dst, tds__Service *src) (use soapcpp2 -Ed)
struct tds__Service
{
/// <PRE><BLOCKQUOTE>
///   Namespace of the service being described. This parameter allows to match the service capabilities to the service. Note that only one set of capabilities is supported per namespace.
/// </BLOCKQUOTE></PRE>
///
/// Element "Namespace" of type xs:anyURI.
    xsd__anyURI                          Namespace                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The transport addresses where the service can be reached. The scheme and IP part shall match the one used in the request (i.e. the GetServices request).
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @note struct _tds__Service_Capabilities operations:
/// - _tds__Service_Capabilities* soap_new__tds__Service_Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities*) default initialize members
/// - int soap_read__tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities*) deserialize from a source
/// - int soap_write__tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities*) serialize to a sink
/// - _tds__Service_Capabilities* soap_dup__tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities* dst, _tds__Service_Capabilities *src) returns deep copy of _tds__Service_Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__Service_Capabilities(_tds__Service_Capabilities*) deep deletes _tds__Service_Capabilities data members, use only on dst after soap_dup__tds__Service_Capabilities(NULL, _tds__Service_Capabilities *dst, _tds__Service_Capabilities *src) (use soapcpp2 -Ed)
    struct _tds__Service_Capabilities
    {
/// <any namespace="##any">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Capabilities                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The version of the service (not the ONVIF core spec version).
/// </BLOCKQUOTE></PRE>
///
/// Element "Version" of type "http://www.onvif.org/ver10/schema":OnvifVersion.
    struct tt__OnvifVersion*             Version                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities is a complexType.
///
/// @note struct tds__DeviceServiceCapabilities operations:
/// - tds__DeviceServiceCapabilities* soap_new_tds__DeviceServiceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities*) default initialize members
/// - int soap_read_tds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities*) deserialize from a source
/// - int soap_write_tds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities*) serialize to a sink
/// - tds__DeviceServiceCapabilities* soap_dup_tds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities* dst, tds__DeviceServiceCapabilities *src) returns deep copy of tds__DeviceServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__DeviceServiceCapabilities(tds__DeviceServiceCapabilities*) deep deletes tds__DeviceServiceCapabilities data members, use only on dst after soap_dup_tds__DeviceServiceCapabilities(NULL, tds__DeviceServiceCapabilities *dst, tds__DeviceServiceCapabilities *src) (use soapcpp2 -Ed)
struct tds__DeviceServiceCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Network" of type "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities.
    struct tds__NetworkCapabilities*     Network                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Security" of type "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities.
    struct tds__SecurityCapabilities*    Security                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "System" of type "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities.
    struct tds__SystemCapabilities*      System                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Capabilities that do not fit in any of the other categories.
/// </BLOCKQUOTE></PRE>
///
/// Element "Misc" of type "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities.
    struct tds__MiscCapabilities*        Misc                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities is a complexType.
///
/// @note struct tds__NetworkCapabilities operations:
/// - tds__NetworkCapabilities* soap_new_tds__NetworkCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities*) default initialize members
/// - int soap_read_tds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities*) deserialize from a source
/// - int soap_write_tds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities*) serialize to a sink
/// - tds__NetworkCapabilities* soap_dup_tds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities* dst, tds__NetworkCapabilities *src) returns deep copy of tds__NetworkCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__NetworkCapabilities(tds__NetworkCapabilities*) deep deletes tds__NetworkCapabilities data members, use only on dst after soap_dup_tds__NetworkCapabilities(NULL, tds__NetworkCapabilities *dst, tds__NetworkCapabilities *src) (use soapcpp2 -Ed)
struct tds__NetworkCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates support for IP filtering.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IPFilter" of type xs:boolean.
  @ enum xsd__boolean*                   IPFilter                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for zeroconf.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ZeroConfiguration" of type xs:boolean.
  @ enum xsd__boolean*                   ZeroConfiguration              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IPv6.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IPVersion6" of type xs:boolean.
  @ enum xsd__boolean*                   IPVersion6                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for dynamic DNS configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DynDNS" of type xs:boolean.
  @ enum xsd__boolean*                   DynDNS                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.11 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot11Configuration" of type xs:boolean.
  @ enum xsd__boolean*                   Dot11Configuration             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of Dot1X configurations supported by the device
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot1XConfigurations" of type xs:int.
  @ int*                                 Dot1XConfigurations            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of hostname from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HostnameFromDHCP" of type xs:boolean.
  @ enum xsd__boolean*                   HostnameFromDHCP               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of NTP servers supported by the devices SetNTP command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "NTP" of type xs:int.
  @ int*                                 NTP                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for Stateful IPv6 DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DHCPv6" of type xs:boolean.
  @ enum xsd__boolean*                   DHCPv6                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities is a complexType.
///
/// @note struct tds__SecurityCapabilities operations:
/// - tds__SecurityCapabilities* soap_new_tds__SecurityCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities*) default initialize members
/// - int soap_read_tds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities*) deserialize from a source
/// - int soap_write_tds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities*) serialize to a sink
/// - tds__SecurityCapabilities* soap_dup_tds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities* dst, tds__SecurityCapabilities *src) returns deep copy of tds__SecurityCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__SecurityCapabilities(tds__SecurityCapabilities*) deep deletes tds__SecurityCapabilities data members, use only on dst after soap_dup_tds__SecurityCapabilities(NULL, tds__SecurityCapabilities *dst, tds__SecurityCapabilities *src) (use soapcpp2 -Ed)
struct tds__SecurityCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.0.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.0" of type xs:boolean.
  @ enum xsd__boolean*                   TLS1_x002e0                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.1.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.1" of type xs:boolean.
  @ enum xsd__boolean*                   TLS1_x002e1                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.2.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.2" of type xs:boolean.
  @ enum xsd__boolean*                   TLS1_x002e2                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for onboard key generation.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "OnboardKeyGeneration" of type xs:boolean.
  @ enum xsd__boolean*                   OnboardKeyGeneration           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for access policy configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AccessPolicyConfig" of type xs:boolean.
  @ enum xsd__boolean*                   AccessPolicyConfig             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for the ONVIF default access policy.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DefaultAccessPolicy" of type xs:boolean.
  @ enum xsd__boolean*                   DefaultAccessPolicy            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.1X configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot1X" of type xs:boolean.
  @ enum xsd__boolean*                   Dot1X                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote user configuration. Used when accessing another device.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RemoteUserHandling" of type xs:boolean.
  @ enum xsd__boolean*                   RemoteUserHandling             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security X.509 token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "X.509Token" of type xs:boolean.
  @ enum xsd__boolean*                   X_x002e509Token                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security SAML token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SAMLToken" of type xs:boolean.
  @ enum xsd__boolean*                   SAMLToken                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Kerberos token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "KerberosToken" of type xs:boolean.
  @ enum xsd__boolean*                   KerberosToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Username token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "UsernameToken" of type xs:boolean.
  @ enum xsd__boolean*                   UsernameToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS over HTTP digest authenticated communication layer.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpDigest" of type xs:boolean.
  @ enum xsd__boolean*                   HttpDigest                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security REL token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RELToken" of type xs:boolean.
  @ enum xsd__boolean*                   RELToken                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SupportedEAPMethods" of type "http://www.onvif.org/ver10/schema":IntList.
  @ tt__IntList                          SupportedEAPMethods            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum number of users that the device supports.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxUsers" of type xs:int.
  @ int*                                 MaxUsers                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of characters supported for the username by CreateUsers.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxUserNameLength" of type xs:int.
  @ int*                                 MaxUserNameLength              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of characters supported for the password by CreateUsers and SetUser.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxPasswordLength" of type xs:int.
  @ int*                                 MaxPasswordLength              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates which security policies are supported. Options are: ModifyPassword, PasswordComplexity, AuthFailureWarnings
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SecurityPolicies" of type "http://www.onvif.org/ver10/schema":StringList.
  @ tt__StringList                       SecurityPolicies               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of passwords that the device can remember for each user
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxPasswordHistory" of type xs:int.
  @ int*                                 MaxPasswordHistory             0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities is a complexType.
///
/// @note struct tds__SystemCapabilities operations:
/// - tds__SystemCapabilities* soap_new_tds__SystemCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__SystemCapabilities(struct soap*, tds__SystemCapabilities*) default initialize members
/// - int soap_read_tds__SystemCapabilities(struct soap*, tds__SystemCapabilities*) deserialize from a source
/// - int soap_write_tds__SystemCapabilities(struct soap*, tds__SystemCapabilities*) serialize to a sink
/// - tds__SystemCapabilities* soap_dup_tds__SystemCapabilities(struct soap*, tds__SystemCapabilities* dst, tds__SystemCapabilities *src) returns deep copy of tds__SystemCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__SystemCapabilities(tds__SystemCapabilities*) deep deletes tds__SystemCapabilities data members, use only on dst after soap_dup_tds__SystemCapabilities(NULL, tds__SystemCapabilities *dst, tds__SystemCapabilities *src) (use soapcpp2 -Ed)
struct tds__SystemCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS Discovery resolve requests.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DiscoveryResolve" of type xs:boolean.
  @ enum xsd__boolean*                   DiscoveryResolve               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Discovery Bye.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DiscoveryBye" of type xs:boolean.
  @ enum xsd__boolean*                   DiscoveryBye                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote discovery.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RemoteDiscovery" of type xs:boolean.
  @ enum xsd__boolean*                   RemoteDiscovery                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SystemBackup" of type xs:boolean.
  @ enum xsd__boolean*                   SystemBackup                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SystemLogging" of type xs:boolean.
  @ enum xsd__boolean*                   SystemLogging                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FirmwareUpgrade" of type xs:boolean.
  @ enum xsd__boolean*                   FirmwareUpgrade                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpFirmwareUpgrade" of type xs:boolean.
  @ enum xsd__boolean*                   HttpFirmwareUpgrade            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSystemBackup" of type xs:boolean.
  @ enum xsd__boolean*                   HttpSystemBackup               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSystemLogging" of type xs:boolean.
  @ enum xsd__boolean*                   HttpSystemLogging              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieving support information through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSupportInformation" of type xs:boolean.
  @ enum xsd__boolean*                   HttpSupportInformation         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for storage configuration interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StorageConfiguration" of type xs:boolean.
  @ enum xsd__boolean*                   StorageConfiguration           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates maximum number of storage configurations supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxStorageConfigurations" of type xs:int.
  @ int*                                 MaxStorageConfigurations       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If present signals support for geo location. The value signals the supported number of entries.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoLocationEntries" of type xs:int.
  @ int*                                 GeoLocationEntries             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   List of supported automatic GeoLocation adjustment supported by the device. Valid items are defined by tds:AutoGeoMode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AutoGeo" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   AutoGeo                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Enumerates the supported StorageTypes, see tds:StorageType.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StorageTypesSupported" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   StorageTypesSupported          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates no support for network discovery.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DiscoveryNotSupported" of type xs:boolean.
  @ enum xsd__boolean*                   DiscoveryNotSupported          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates no support for network configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "NetworkConfigNotSupported" of type xs:boolean.
  @ enum xsd__boolean*                   NetworkConfigNotSupported      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates no support for user configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "UserConfigNotSupported" of type xs:boolean.
  @ enum xsd__boolean*                   UserConfigNotSupported         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   List of supported Addons by the device.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Addons" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   Addons                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities is a complexType.
///
/// @note struct tds__MiscCapabilities operations:
/// - tds__MiscCapabilities* soap_new_tds__MiscCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__MiscCapabilities(struct soap*, tds__MiscCapabilities*) default initialize members
/// - int soap_read_tds__MiscCapabilities(struct soap*, tds__MiscCapabilities*) deserialize from a source
/// - int soap_write_tds__MiscCapabilities(struct soap*, tds__MiscCapabilities*) serialize to a sink
/// - tds__MiscCapabilities* soap_dup_tds__MiscCapabilities(struct soap*, tds__MiscCapabilities* dst, tds__MiscCapabilities *src) returns deep copy of tds__MiscCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__MiscCapabilities(tds__MiscCapabilities*) deep deletes tds__MiscCapabilities data members, use only on dst after soap_dup_tds__MiscCapabilities(NULL, tds__MiscCapabilities *dst, tds__MiscCapabilities *src) (use soapcpp2 -Ed)
struct tds__MiscCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Lists of commands supported by SendAuxiliaryCommand.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AuxiliaryCommands" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   AuxiliaryCommands              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":UserCredential is a complexType.
///
/// @note struct tds__UserCredential operations:
/// - tds__UserCredential* soap_new_tds__UserCredential(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__UserCredential(struct soap*, tds__UserCredential*) default initialize members
/// - int soap_read_tds__UserCredential(struct soap*, tds__UserCredential*) deserialize from a source
/// - int soap_write_tds__UserCredential(struct soap*, tds__UserCredential*) serialize to a sink
/// - tds__UserCredential* soap_dup_tds__UserCredential(struct soap*, tds__UserCredential* dst, tds__UserCredential *src) returns deep copy of tds__UserCredential src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__UserCredential(tds__UserCredential*) deep deletes tds__UserCredential data members, use only on dst after soap_dup_tds__UserCredential(NULL, tds__UserCredential *dst, tds__UserCredential *src) (use soapcpp2 -Ed)
struct tds__UserCredential
{
/// <PRE><BLOCKQUOTE>
///   User name
/// </BLOCKQUOTE></PRE>
///
/// Element "UserName" of type xs:string.
    char*                                UserName                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   optional password
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// @note struct _tds__UserCredential_Extension operations:
/// - _tds__UserCredential_Extension* soap_new__tds__UserCredential_Extension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__UserCredential_Extension(struct soap*, _tds__UserCredential_Extension*) default initialize members
/// - int soap_read__tds__UserCredential_Extension(struct soap*, _tds__UserCredential_Extension*) deserialize from a source
/// - int soap_write__tds__UserCredential_Extension(struct soap*, _tds__UserCredential_Extension*) serialize to a sink
/// - _tds__UserCredential_Extension* soap_dup__tds__UserCredential_Extension(struct soap*, _tds__UserCredential_Extension* dst, _tds__UserCredential_Extension *src) returns deep copy of _tds__UserCredential_Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__UserCredential_Extension(_tds__UserCredential_Extension*) deep deletes _tds__UserCredential_Extension data members, use only on dst after soap_dup__tds__UserCredential_Extension(NULL, _tds__UserCredential_Extension *dst, _tds__UserCredential_Extension *src) (use soapcpp2 -Ed)
    struct _tds__UserCredential_Extension
    {
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData is a complexType.
///
/// @note struct tds__StorageConfigurationData operations:
/// - tds__StorageConfigurationData* soap_new_tds__StorageConfigurationData(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__StorageConfigurationData(struct soap*, tds__StorageConfigurationData*) default initialize members
/// - int soap_read_tds__StorageConfigurationData(struct soap*, tds__StorageConfigurationData*) deserialize from a source
/// - int soap_write_tds__StorageConfigurationData(struct soap*, tds__StorageConfigurationData*) serialize to a sink
/// - tds__StorageConfigurationData* soap_dup_tds__StorageConfigurationData(struct soap*, tds__StorageConfigurationData* dst, tds__StorageConfigurationData *src) returns deep copy of tds__StorageConfigurationData src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__StorageConfigurationData(tds__StorageConfigurationData*) deep deletes tds__StorageConfigurationData data members, use only on dst after soap_dup_tds__StorageConfigurationData(NULL, tds__StorageConfigurationData *dst, tds__StorageConfigurationData *src) (use soapcpp2 -Ed)
struct tds__StorageConfigurationData
{
/// <PRE><BLOCKQUOTE>
///   local path
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalPath" of type xs:anyURI.
    xsd__anyURI                          LocalPath                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Storage server address
/// </BLOCKQUOTE></PRE>
///
/// Element "StorageUri" of type xs:anyURI.
    xsd__anyURI                          StorageUri                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User credential for the storage server
/// </BLOCKQUOTE></PRE>
///
/// Element "User" of type "http://www.onvif.org/ver10/device/wsdl":UserCredential.
    struct tds__UserCredential*          User                           0;	///< Optional element.
/// @note struct _tds__StorageConfigurationData_Extension operations:
/// - _tds__StorageConfigurationData_Extension* soap_new__tds__StorageConfigurationData_Extension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__StorageConfigurationData_Extension(struct soap*, _tds__StorageConfigurationData_Extension*) default initialize members
/// - int soap_read__tds__StorageConfigurationData_Extension(struct soap*, _tds__StorageConfigurationData_Extension*) deserialize from a source
/// - int soap_write__tds__StorageConfigurationData_Extension(struct soap*, _tds__StorageConfigurationData_Extension*) serialize to a sink
/// - _tds__StorageConfigurationData_Extension* soap_dup__tds__StorageConfigurationData_Extension(struct soap*, _tds__StorageConfigurationData_Extension* dst, _tds__StorageConfigurationData_Extension *src) returns deep copy of _tds__StorageConfigurationData_Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__StorageConfigurationData_Extension(_tds__StorageConfigurationData_Extension*) deep deletes _tds__StorageConfigurationData_Extension data members, use only on dst after soap_dup__tds__StorageConfigurationData_Extension(NULL, _tds__StorageConfigurationData_Extension *dst, _tds__StorageConfigurationData_Extension *src) (use soapcpp2 -Ed)
    struct _tds__StorageConfigurationData_Extension
    {
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   StorageType lists the acceptable values for type attribute
/// </BLOCKQUOTE></PRE>
///
/// Attribute "type" of type xs:string.
  @ char*                                type                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServices
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServices is a complexType.
///
/// @note struct _tds__GetServices operations:
/// - _tds__GetServices* soap_new__tds__GetServices(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetServices(struct soap*, _tds__GetServices*) default initialize members
/// - int soap_read__tds__GetServices(struct soap*, _tds__GetServices*) deserialize from a source
/// - int soap_write__tds__GetServices(struct soap*, _tds__GetServices*) serialize to a sink
/// - _tds__GetServices* soap_dup__tds__GetServices(struct soap*, _tds__GetServices* dst, _tds__GetServices *src) returns deep copy of _tds__GetServices src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetServices(_tds__GetServices*) deep deletes _tds__GetServices data members, use only on dst after soap_dup__tds__GetServices(NULL, _tds__GetServices *dst, _tds__GetServices *src) (use soapcpp2 -Ed)
struct _tds__GetServices
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the service capabilities (untyped) should be included in the response.
/// </BLOCKQUOTE></PRE>
///
/// Element "IncludeCapability" of type xs:boolean.
    enum xsd__boolean                    IncludeCapability              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse is a complexType.
///
/// @note struct _tds__GetServicesResponse operations:
/// - _tds__GetServicesResponse* soap_new__tds__GetServicesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*) default initialize members
/// - int soap_read__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*) deserialize from a source
/// - int soap_write__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*) serialize to a sink
/// - _tds__GetServicesResponse* soap_dup__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse* dst, _tds__GetServicesResponse *src) returns deep copy of _tds__GetServicesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetServicesResponse(_tds__GetServicesResponse*) deep deletes _tds__GetServicesResponse data members, use only on dst after soap_dup__tds__GetServicesResponse(NULL, _tds__GetServicesResponse *dst, _tds__GetServicesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetServicesResponse
{
/// <PRE><BLOCKQUOTE>
///   Each Service element contains information about one service.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tds__Service* is 1..unbounded.
  $ int                                  __sizeService                  1;
/// Array struct tds__Service* of size 1..unbounded.
    struct tds__Service*                 Service                        1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities is a complexType.
///
/// @note struct _tds__GetServiceCapabilities operations:
/// - _tds__GetServiceCapabilities* soap_new__tds__GetServiceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*) default initialize members
/// - int soap_read__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*) deserialize from a source
/// - int soap_write__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*) serialize to a sink
/// - _tds__GetServiceCapabilities* soap_dup__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities* dst, _tds__GetServiceCapabilities *src) returns deep copy of _tds__GetServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetServiceCapabilities(_tds__GetServiceCapabilities*) deep deletes _tds__GetServiceCapabilities data members, use only on dst after soap_dup__tds__GetServiceCapabilities(NULL, _tds__GetServiceCapabilities *dst, _tds__GetServiceCapabilities *src) (use soapcpp2 -Ed)
struct _tds__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note struct _tds__GetServiceCapabilitiesResponse operations:
/// - _tds__GetServiceCapabilitiesResponse* soap_new__tds__GetServiceCapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*) default initialize members
/// - int soap_read__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*) deserialize from a source
/// - int soap_write__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*) serialize to a sink
/// - _tds__GetServiceCapabilitiesResponse* soap_dup__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse* dst, _tds__GetServiceCapabilitiesResponse *src) returns deep copy of _tds__GetServiceCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetServiceCapabilitiesResponse(_tds__GetServiceCapabilitiesResponse*) deep deletes _tds__GetServiceCapabilitiesResponse data members, use only on dst after soap_dup__tds__GetServiceCapabilitiesResponse(NULL, _tds__GetServiceCapabilitiesResponse *dst, _tds__GetServiceCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the device service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
    struct tds__DeviceServiceCapabilities*  Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation is a complexType.
///
/// @note struct _tds__GetDeviceInformation operations:
/// - _tds__GetDeviceInformation* soap_new__tds__GetDeviceInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*) default initialize members
/// - int soap_read__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*) deserialize from a source
/// - int soap_write__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*) serialize to a sink
/// - _tds__GetDeviceInformation* soap_dup__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation* dst, _tds__GetDeviceInformation *src) returns deep copy of _tds__GetDeviceInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDeviceInformation(_tds__GetDeviceInformation*) deep deletes _tds__GetDeviceInformation data members, use only on dst after soap_dup__tds__GetDeviceInformation(NULL, _tds__GetDeviceInformation *dst, _tds__GetDeviceInformation *src) (use soapcpp2 -Ed)
struct _tds__GetDeviceInformation
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse is a complexType.
///
/// @note struct _tds__GetDeviceInformationResponse operations:
/// - _tds__GetDeviceInformationResponse* soap_new__tds__GetDeviceInformationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*) default initialize members
/// - int soap_read__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*) deserialize from a source
/// - int soap_write__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*) serialize to a sink
/// - _tds__GetDeviceInformationResponse* soap_dup__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse* dst, _tds__GetDeviceInformationResponse *src) returns deep copy of _tds__GetDeviceInformationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDeviceInformationResponse(_tds__GetDeviceInformationResponse*) deep deletes _tds__GetDeviceInformationResponse data members, use only on dst after soap_dup__tds__GetDeviceInformationResponse(NULL, _tds__GetDeviceInformationResponse *dst, _tds__GetDeviceInformationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDeviceInformationResponse
{
/// <PRE><BLOCKQUOTE>
///   The manufactor of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Manufacturer" of type xs:string.
    char*                                Manufacturer                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The device model.
/// </BLOCKQUOTE></PRE>
///
/// Element "Model" of type xs:string.
    char*                                Model                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The firmware version in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "FirmwareVersion" of type xs:string.
    char*                                FirmwareVersion                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The serial number of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "SerialNumber" of type xs:string.
    char*                                SerialNumber                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The hardware ID of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "HardwareId" of type xs:string.
    char*                                HardwareId                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime is a complexType.
///
/// @note struct _tds__SetSystemDateAndTime operations:
/// - _tds__SetSystemDateAndTime* soap_new__tds__SetSystemDateAndTime(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*) default initialize members
/// - int soap_read__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*) deserialize from a source
/// - int soap_write__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*) serialize to a sink
/// - _tds__SetSystemDateAndTime* soap_dup__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime* dst, _tds__SetSystemDateAndTime *src) returns deep copy of _tds__SetSystemDateAndTime src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetSystemDateAndTime(_tds__SetSystemDateAndTime*) deep deletes _tds__SetSystemDateAndTime data members, use only on dst after soap_dup__tds__SetSystemDateAndTime(NULL, _tds__SetSystemDateAndTime *dst, _tds__SetSystemDateAndTime *src) (use soapcpp2 -Ed)
struct _tds__SetSystemDateAndTime
{
/// <PRE><BLOCKQUOTE>
///   Defines if the date and time is set via NTP or manually.
/// </BLOCKQUOTE></PRE>
///
/// Element "DateTimeType" of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Automatically adjust Daylight savings if defined in TimeZone.
/// </BLOCKQUOTE></PRE>
///
/// Element "DaylightSavings" of type xs:boolean.
    enum xsd__boolean                    DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time zone in POSIX 1003.1 format
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeZone" of type "http://www.onvif.org/ver10/schema":TimeZone.
    struct tt__TimeZone*                 TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in UTC. If time is obtained via NTP, UTCDateTime has no meaning
/// </BLOCKQUOTE></PRE>
///
/// Element "UTCDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    struct tt__DateTime*                 UTCDateTime                    0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse is a complexType.
///
/// @note struct _tds__SetSystemDateAndTimeResponse operations:
/// - _tds__SetSystemDateAndTimeResponse* soap_new__tds__SetSystemDateAndTimeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*) default initialize members
/// - int soap_read__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*) deserialize from a source
/// - int soap_write__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*) serialize to a sink
/// - _tds__SetSystemDateAndTimeResponse* soap_dup__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse* dst, _tds__SetSystemDateAndTimeResponse *src) returns deep copy of _tds__SetSystemDateAndTimeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetSystemDateAndTimeResponse(_tds__SetSystemDateAndTimeResponse*) deep deletes _tds__SetSystemDateAndTimeResponse data members, use only on dst after soap_dup__tds__SetSystemDateAndTimeResponse(NULL, _tds__SetSystemDateAndTimeResponse *dst, _tds__SetSystemDateAndTimeResponse *src) (use soapcpp2 -Ed)
struct _tds__SetSystemDateAndTimeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime is a complexType.
///
/// @note struct _tds__GetSystemDateAndTime operations:
/// - _tds__GetSystemDateAndTime* soap_new__tds__GetSystemDateAndTime(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*) default initialize members
/// - int soap_read__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*) deserialize from a source
/// - int soap_write__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*) serialize to a sink
/// - _tds__GetSystemDateAndTime* soap_dup__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime* dst, _tds__GetSystemDateAndTime *src) returns deep copy of _tds__GetSystemDateAndTime src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemDateAndTime(_tds__GetSystemDateAndTime*) deep deletes _tds__GetSystemDateAndTime data members, use only on dst after soap_dup__tds__GetSystemDateAndTime(NULL, _tds__GetSystemDateAndTime *dst, _tds__GetSystemDateAndTime *src) (use soapcpp2 -Ed)
struct _tds__GetSystemDateAndTime
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse is a complexType.
///
/// @note struct _tds__GetSystemDateAndTimeResponse operations:
/// - _tds__GetSystemDateAndTimeResponse* soap_new__tds__GetSystemDateAndTimeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*) default initialize members
/// - int soap_read__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*) deserialize from a source
/// - int soap_write__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*) serialize to a sink
/// - _tds__GetSystemDateAndTimeResponse* soap_dup__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse* dst, _tds__GetSystemDateAndTimeResponse *src) returns deep copy of _tds__GetSystemDateAndTimeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemDateAndTimeResponse(_tds__GetSystemDateAndTimeResponse*) deep deletes _tds__GetSystemDateAndTimeResponse data members, use only on dst after soap_dup__tds__GetSystemDateAndTimeResponse(NULL, _tds__GetSystemDateAndTimeResponse *dst, _tds__GetSystemDateAndTimeResponse *src) (use soapcpp2 -Ed)
struct _tds__GetSystemDateAndTimeResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains information whether system date and time are set manually or by NTP, daylight savings is on or off, time zone in POSIX 1003.1 format and system date and time in UTC and also local system date and time.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemDateAndTime" of type "http://www.onvif.org/ver10/schema":SystemDateTime.
    struct tt__SystemDateTime*           SystemDateAndTime              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault is a complexType.
///
/// @note struct _tds__SetSystemFactoryDefault operations:
/// - _tds__SetSystemFactoryDefault* soap_new__tds__SetSystemFactoryDefault(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*) default initialize members
/// - int soap_read__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*) deserialize from a source
/// - int soap_write__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*) serialize to a sink
/// - _tds__SetSystemFactoryDefault* soap_dup__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault* dst, _tds__SetSystemFactoryDefault *src) returns deep copy of _tds__SetSystemFactoryDefault src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetSystemFactoryDefault(_tds__SetSystemFactoryDefault*) deep deletes _tds__SetSystemFactoryDefault data members, use only on dst after soap_dup__tds__SetSystemFactoryDefault(NULL, _tds__SetSystemFactoryDefault *dst, _tds__SetSystemFactoryDefault *src) (use soapcpp2 -Ed)
struct _tds__SetSystemFactoryDefault
{
/// <PRE><BLOCKQUOTE>
///   Specifies the factory default action type.
/// </BLOCKQUOTE></PRE>
///
/// Element "FactoryDefault" of type "http://www.onvif.org/ver10/schema":FactoryDefaultType.
    enum tt__FactoryDefaultType          FactoryDefault                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse is a complexType.
///
/// @note struct _tds__SetSystemFactoryDefaultResponse operations:
/// - _tds__SetSystemFactoryDefaultResponse* soap_new__tds__SetSystemFactoryDefaultResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*) default initialize members
/// - int soap_read__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*) deserialize from a source
/// - int soap_write__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*) serialize to a sink
/// - _tds__SetSystemFactoryDefaultResponse* soap_dup__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse* dst, _tds__SetSystemFactoryDefaultResponse *src) returns deep copy of _tds__SetSystemFactoryDefaultResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetSystemFactoryDefaultResponse(_tds__SetSystemFactoryDefaultResponse*) deep deletes _tds__SetSystemFactoryDefaultResponse data members, use only on dst after soap_dup__tds__SetSystemFactoryDefaultResponse(NULL, _tds__SetSystemFactoryDefaultResponse *dst, _tds__SetSystemFactoryDefaultResponse *src) (use soapcpp2 -Ed)
struct _tds__SetSystemFactoryDefaultResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware is a complexType.
///
/// @note struct _tds__UpgradeSystemFirmware operations:
/// - _tds__UpgradeSystemFirmware* soap_new__tds__UpgradeSystemFirmware(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*) default initialize members
/// - int soap_read__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*) deserialize from a source
/// - int soap_write__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*) serialize to a sink
/// - _tds__UpgradeSystemFirmware* soap_dup__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware* dst, _tds__UpgradeSystemFirmware *src) returns deep copy of _tds__UpgradeSystemFirmware src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__UpgradeSystemFirmware(_tds__UpgradeSystemFirmware*) deep deletes _tds__UpgradeSystemFirmware data members, use only on dst after soap_dup__tds__UpgradeSystemFirmware(NULL, _tds__UpgradeSystemFirmware *dst, _tds__UpgradeSystemFirmware *src) (use soapcpp2 -Ed)
struct _tds__UpgradeSystemFirmware
{
/// Element "Firmware" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Firmware                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse is a complexType.
///
/// @note struct _tds__UpgradeSystemFirmwareResponse operations:
/// - _tds__UpgradeSystemFirmwareResponse* soap_new__tds__UpgradeSystemFirmwareResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*) default initialize members
/// - int soap_read__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*) deserialize from a source
/// - int soap_write__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*) serialize to a sink
/// - _tds__UpgradeSystemFirmwareResponse* soap_dup__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse* dst, _tds__UpgradeSystemFirmwareResponse *src) returns deep copy of _tds__UpgradeSystemFirmwareResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__UpgradeSystemFirmwareResponse(_tds__UpgradeSystemFirmwareResponse*) deep deletes _tds__UpgradeSystemFirmwareResponse data members, use only on dst after soap_dup__tds__UpgradeSystemFirmwareResponse(NULL, _tds__UpgradeSystemFirmwareResponse *dst, _tds__UpgradeSystemFirmwareResponse *src) (use soapcpp2 -Ed)
struct _tds__UpgradeSystemFirmwareResponse
{
/// Element "Message" of type xs:string.
    char*                                Message                        0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemReboot
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemReboot is a complexType.
///
/// @note struct _tds__SystemReboot operations:
/// - _tds__SystemReboot* soap_new__tds__SystemReboot(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SystemReboot(struct soap*, _tds__SystemReboot*) default initialize members
/// - int soap_read__tds__SystemReboot(struct soap*, _tds__SystemReboot*) deserialize from a source
/// - int soap_write__tds__SystemReboot(struct soap*, _tds__SystemReboot*) serialize to a sink
/// - _tds__SystemReboot* soap_dup__tds__SystemReboot(struct soap*, _tds__SystemReboot* dst, _tds__SystemReboot *src) returns deep copy of _tds__SystemReboot src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SystemReboot(_tds__SystemReboot*) deep deletes _tds__SystemReboot data members, use only on dst after soap_dup__tds__SystemReboot(NULL, _tds__SystemReboot *dst, _tds__SystemReboot *src) (use soapcpp2 -Ed)
struct _tds__SystemReboot
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse is a complexType.
///
/// @note struct _tds__SystemRebootResponse operations:
/// - _tds__SystemRebootResponse* soap_new__tds__SystemRebootResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*) default initialize members
/// - int soap_read__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*) deserialize from a source
/// - int soap_write__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*) serialize to a sink
/// - _tds__SystemRebootResponse* soap_dup__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse* dst, _tds__SystemRebootResponse *src) returns deep copy of _tds__SystemRebootResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SystemRebootResponse(_tds__SystemRebootResponse*) deep deletes _tds__SystemRebootResponse data members, use only on dst after soap_dup__tds__SystemRebootResponse(NULL, _tds__SystemRebootResponse *dst, _tds__SystemRebootResponse *src) (use soapcpp2 -Ed)
struct _tds__SystemRebootResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the reboot message sent by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Message" of type xs:string.
    char*                                Message                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystem
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystem is a complexType.
///
/// @note struct _tds__RestoreSystem operations:
/// - _tds__RestoreSystem* soap_new__tds__RestoreSystem(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*) default initialize members
/// - int soap_read__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*) deserialize from a source
/// - int soap_write__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*) serialize to a sink
/// - _tds__RestoreSystem* soap_dup__tds__RestoreSystem(struct soap*, _tds__RestoreSystem* dst, _tds__RestoreSystem *src) returns deep copy of _tds__RestoreSystem src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__RestoreSystem(_tds__RestoreSystem*) deep deletes _tds__RestoreSystem data members, use only on dst after soap_dup__tds__RestoreSystem(NULL, _tds__RestoreSystem *dst, _tds__RestoreSystem *src) (use soapcpp2 -Ed)
struct _tds__RestoreSystem
{
/// Size of array of struct tt__BackupFile* is 1..unbounded.
  $ int                                  __sizeBackupFiles              1;
/// Array struct tt__BackupFile* of size 1..unbounded.
    struct tt__BackupFile*               BackupFiles                    1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse is a complexType.
///
/// @note struct _tds__RestoreSystemResponse operations:
/// - _tds__RestoreSystemResponse* soap_new__tds__RestoreSystemResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*) default initialize members
/// - int soap_read__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*) deserialize from a source
/// - int soap_write__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*) serialize to a sink
/// - _tds__RestoreSystemResponse* soap_dup__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse* dst, _tds__RestoreSystemResponse *src) returns deep copy of _tds__RestoreSystemResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__RestoreSystemResponse(_tds__RestoreSystemResponse*) deep deletes _tds__RestoreSystemResponse data members, use only on dst after soap_dup__tds__RestoreSystemResponse(NULL, _tds__RestoreSystemResponse *dst, _tds__RestoreSystemResponse *src) (use soapcpp2 -Ed)
struct _tds__RestoreSystemResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup is a complexType.
///
/// @note struct _tds__GetSystemBackup operations:
/// - _tds__GetSystemBackup* soap_new__tds__GetSystemBackup(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*) default initialize members
/// - int soap_read__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*) deserialize from a source
/// - int soap_write__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*) serialize to a sink
/// - _tds__GetSystemBackup* soap_dup__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup* dst, _tds__GetSystemBackup *src) returns deep copy of _tds__GetSystemBackup src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemBackup(_tds__GetSystemBackup*) deep deletes _tds__GetSystemBackup data members, use only on dst after soap_dup__tds__GetSystemBackup(NULL, _tds__GetSystemBackup *dst, _tds__GetSystemBackup *src) (use soapcpp2 -Ed)
struct _tds__GetSystemBackup
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse is a complexType.
///
/// @note struct _tds__GetSystemBackupResponse operations:
/// - _tds__GetSystemBackupResponse* soap_new__tds__GetSystemBackupResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*) default initialize members
/// - int soap_read__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*) deserialize from a source
/// - int soap_write__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*) serialize to a sink
/// - _tds__GetSystemBackupResponse* soap_dup__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse* dst, _tds__GetSystemBackupResponse *src) returns deep copy of _tds__GetSystemBackupResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemBackupResponse(_tds__GetSystemBackupResponse*) deep deletes _tds__GetSystemBackupResponse data members, use only on dst after soap_dup__tds__GetSystemBackupResponse(NULL, _tds__GetSystemBackupResponse *dst, _tds__GetSystemBackupResponse *src) (use soapcpp2 -Ed)
struct _tds__GetSystemBackupResponse
{
/// Size of array of struct tt__BackupFile* is 1..unbounded.
  $ int                                  __sizeBackupFiles              1;
/// Array struct tt__BackupFile* of size 1..unbounded.
    struct tt__BackupFile*               BackupFiles                    1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation is a complexType.
///
/// @note struct _tds__GetSystemSupportInformation operations:
/// - _tds__GetSystemSupportInformation* soap_new__tds__GetSystemSupportInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*) default initialize members
/// - int soap_read__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*) deserialize from a source
/// - int soap_write__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*) serialize to a sink
/// - _tds__GetSystemSupportInformation* soap_dup__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation* dst, _tds__GetSystemSupportInformation *src) returns deep copy of _tds__GetSystemSupportInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemSupportInformation(_tds__GetSystemSupportInformation*) deep deletes _tds__GetSystemSupportInformation data members, use only on dst after soap_dup__tds__GetSystemSupportInformation(NULL, _tds__GetSystemSupportInformation *dst, _tds__GetSystemSupportInformation *src) (use soapcpp2 -Ed)
struct _tds__GetSystemSupportInformation
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse is a complexType.
///
/// @note struct _tds__GetSystemSupportInformationResponse operations:
/// - _tds__GetSystemSupportInformationResponse* soap_new__tds__GetSystemSupportInformationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*) default initialize members
/// - int soap_read__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*) deserialize from a source
/// - int soap_write__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*) serialize to a sink
/// - _tds__GetSystemSupportInformationResponse* soap_dup__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse* dst, _tds__GetSystemSupportInformationResponse *src) returns deep copy of _tds__GetSystemSupportInformationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemSupportInformationResponse(_tds__GetSystemSupportInformationResponse*) deep deletes _tds__GetSystemSupportInformationResponse data members, use only on dst after soap_dup__tds__GetSystemSupportInformationResponse(NULL, _tds__GetSystemSupportInformationResponse *dst, _tds__GetSystemSupportInformationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetSystemSupportInformationResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the arbitary device diagnostics information.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportInformation" of type "http://www.onvif.org/ver10/schema":SupportInformation.
    struct tt__SupportInformation*       SupportInformation             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLog
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLog is a complexType.
///
/// @note struct _tds__GetSystemLog operations:
/// - _tds__GetSystemLog* soap_new__tds__GetSystemLog(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*) default initialize members
/// - int soap_read__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*) deserialize from a source
/// - int soap_write__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*) serialize to a sink
/// - _tds__GetSystemLog* soap_dup__tds__GetSystemLog(struct soap*, _tds__GetSystemLog* dst, _tds__GetSystemLog *src) returns deep copy of _tds__GetSystemLog src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemLog(_tds__GetSystemLog*) deep deletes _tds__GetSystemLog data members, use only on dst after soap_dup__tds__GetSystemLog(NULL, _tds__GetSystemLog *dst, _tds__GetSystemLog *src) (use soapcpp2 -Ed)
struct _tds__GetSystemLog
{
/// <PRE><BLOCKQUOTE>
///   Specifies the type of system log to get.
/// </BLOCKQUOTE></PRE>
///
/// Element "LogType" of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               LogType                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse is a complexType.
///
/// @note struct _tds__GetSystemLogResponse operations:
/// - _tds__GetSystemLogResponse* soap_new__tds__GetSystemLogResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*) default initialize members
/// - int soap_read__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*) deserialize from a source
/// - int soap_write__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*) serialize to a sink
/// - _tds__GetSystemLogResponse* soap_dup__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse* dst, _tds__GetSystemLogResponse *src) returns deep copy of _tds__GetSystemLogResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemLogResponse(_tds__GetSystemLogResponse*) deep deletes _tds__GetSystemLogResponse data members, use only on dst after soap_dup__tds__GetSystemLogResponse(NULL, _tds__GetSystemLogResponse *dst, _tds__GetSystemLogResponse *src) (use soapcpp2 -Ed)
struct _tds__GetSystemLogResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the system log information.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemLog" of type "http://www.onvif.org/ver10/schema":SystemLog.
    struct tt__SystemLog*                SystemLog                      1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopes is a complexType.
///
/// @note struct _tds__GetScopes operations:
/// - _tds__GetScopes* soap_new__tds__GetScopes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetScopes(struct soap*, _tds__GetScopes*) default initialize members
/// - int soap_read__tds__GetScopes(struct soap*, _tds__GetScopes*) deserialize from a source
/// - int soap_write__tds__GetScopes(struct soap*, _tds__GetScopes*) serialize to a sink
/// - _tds__GetScopes* soap_dup__tds__GetScopes(struct soap*, _tds__GetScopes* dst, _tds__GetScopes *src) returns deep copy of _tds__GetScopes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetScopes(_tds__GetScopes*) deep deletes _tds__GetScopes data members, use only on dst after soap_dup__tds__GetScopes(NULL, _tds__GetScopes *dst, _tds__GetScopes *src) (use soapcpp2 -Ed)
struct _tds__GetScopes
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse is a complexType.
///
/// @note struct _tds__GetScopesResponse operations:
/// - _tds__GetScopesResponse* soap_new__tds__GetScopesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*) default initialize members
/// - int soap_read__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*) deserialize from a source
/// - int soap_write__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*) serialize to a sink
/// - _tds__GetScopesResponse* soap_dup__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse* dst, _tds__GetScopesResponse *src) returns deep copy of _tds__GetScopesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetScopesResponse(_tds__GetScopesResponse*) deep deletes _tds__GetScopesResponse data members, use only on dst after soap_dup__tds__GetScopesResponse(NULL, _tds__GetScopesResponse *dst, _tds__GetScopesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetScopesResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of URI definining the device scopes. Scope parameters can be of two types: fixed and configurable. Fixed parameters can not be altered.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Scope* is 1..unbounded.
  $ int                                  __sizeScopes                   1;
/// Array struct tt__Scope* of size 1..unbounded.
    struct tt__Scope*                    Scopes                         1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopes is a complexType.
///
/// @note struct _tds__SetScopes operations:
/// - _tds__SetScopes* soap_new__tds__SetScopes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetScopes(struct soap*, _tds__SetScopes*) default initialize members
/// - int soap_read__tds__SetScopes(struct soap*, _tds__SetScopes*) deserialize from a source
/// - int soap_write__tds__SetScopes(struct soap*, _tds__SetScopes*) serialize to a sink
/// - _tds__SetScopes* soap_dup__tds__SetScopes(struct soap*, _tds__SetScopes* dst, _tds__SetScopes *src) returns deep copy of _tds__SetScopes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetScopes(_tds__SetScopes*) deep deletes _tds__SetScopes data members, use only on dst after soap_dup__tds__SetScopes(NULL, _tds__SetScopes *dst, _tds__SetScopes *src) (use soapcpp2 -Ed)
struct _tds__SetScopes
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of scope parameters that will replace all existing configurable scope parameters.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeScopes                   1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         Scopes                         1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse is a complexType.
///
/// @note struct _tds__SetScopesResponse operations:
/// - _tds__SetScopesResponse* soap_new__tds__SetScopesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*) default initialize members
/// - int soap_read__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*) deserialize from a source
/// - int soap_write__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*) serialize to a sink
/// - _tds__SetScopesResponse* soap_dup__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse* dst, _tds__SetScopesResponse *src) returns deep copy of _tds__SetScopesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetScopesResponse(_tds__SetScopesResponse*) deep deletes _tds__SetScopesResponse data members, use only on dst after soap_dup__tds__SetScopesResponse(NULL, _tds__SetScopesResponse *dst, _tds__SetScopesResponse *src) (use soapcpp2 -Ed)
struct _tds__SetScopesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopes is a complexType.
///
/// @note struct _tds__AddScopes operations:
/// - _tds__AddScopes* soap_new__tds__AddScopes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__AddScopes(struct soap*, _tds__AddScopes*) default initialize members
/// - int soap_read__tds__AddScopes(struct soap*, _tds__AddScopes*) deserialize from a source
/// - int soap_write__tds__AddScopes(struct soap*, _tds__AddScopes*) serialize to a sink
/// - _tds__AddScopes* soap_dup__tds__AddScopes(struct soap*, _tds__AddScopes* dst, _tds__AddScopes *src) returns deep copy of _tds__AddScopes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__AddScopes(_tds__AddScopes*) deep deletes _tds__AddScopes data members, use only on dst after soap_dup__tds__AddScopes(NULL, _tds__AddScopes *dst, _tds__AddScopes *src) (use soapcpp2 -Ed)
struct _tds__AddScopes
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of new configurable scope parameters that will be added to the existing configurable scope.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeScopeItem                1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         ScopeItem                      1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse is a complexType.
///
/// @note struct _tds__AddScopesResponse operations:
/// - _tds__AddScopesResponse* soap_new__tds__AddScopesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*) default initialize members
/// - int soap_read__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*) deserialize from a source
/// - int soap_write__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*) serialize to a sink
/// - _tds__AddScopesResponse* soap_dup__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse* dst, _tds__AddScopesResponse *src) returns deep copy of _tds__AddScopesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__AddScopesResponse(_tds__AddScopesResponse*) deep deletes _tds__AddScopesResponse data members, use only on dst after soap_dup__tds__AddScopesResponse(NULL, _tds__AddScopesResponse *dst, _tds__AddScopesResponse *src) (use soapcpp2 -Ed)
struct _tds__AddScopesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopes is a complexType.
///
/// @note struct _tds__RemoveScopes operations:
/// - _tds__RemoveScopes* soap_new__tds__RemoveScopes(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*) default initialize members
/// - int soap_read__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*) deserialize from a source
/// - int soap_write__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*) serialize to a sink
/// - _tds__RemoveScopes* soap_dup__tds__RemoveScopes(struct soap*, _tds__RemoveScopes* dst, _tds__RemoveScopes *src) returns deep copy of _tds__RemoveScopes src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__RemoveScopes(_tds__RemoveScopes*) deep deletes _tds__RemoveScopes data members, use only on dst after soap_dup__tds__RemoveScopes(NULL, _tds__RemoveScopes *dst, _tds__RemoveScopes *src) (use soapcpp2 -Ed)
struct _tds__RemoveScopes
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that should be removed from the device scope.<br/>
///   Note that the response message always will match the request or an error will be returned. The use of the response is for that reason deprecated.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeScopeItem                1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         ScopeItem                      1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse is a complexType.
///
/// @note struct _tds__RemoveScopesResponse operations:
/// - _tds__RemoveScopesResponse* soap_new__tds__RemoveScopesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*) default initialize members
/// - int soap_read__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*) deserialize from a source
/// - int soap_write__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*) serialize to a sink
/// - _tds__RemoveScopesResponse* soap_dup__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse* dst, _tds__RemoveScopesResponse *src) returns deep copy of _tds__RemoveScopesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__RemoveScopesResponse(_tds__RemoveScopesResponse*) deep deletes _tds__RemoveScopesResponse data members, use only on dst after soap_dup__tds__RemoveScopesResponse(NULL, _tds__RemoveScopesResponse *dst, _tds__RemoveScopesResponse *src) (use soapcpp2 -Ed)
struct _tds__RemoveScopesResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that has been removed from the device scope
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 0..unbounded.
  $ int                                  __sizeScopeItem                0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         ScopeItem                      0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode is a complexType.
///
/// @note struct _tds__GetDiscoveryMode operations:
/// - _tds__GetDiscoveryMode* soap_new__tds__GetDiscoveryMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*) default initialize members
/// - int soap_read__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*) deserialize from a source
/// - int soap_write__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*) serialize to a sink
/// - _tds__GetDiscoveryMode* soap_dup__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode* dst, _tds__GetDiscoveryMode *src) returns deep copy of _tds__GetDiscoveryMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDiscoveryMode(_tds__GetDiscoveryMode*) deep deletes _tds__GetDiscoveryMode data members, use only on dst after soap_dup__tds__GetDiscoveryMode(NULL, _tds__GetDiscoveryMode *dst, _tds__GetDiscoveryMode *src) (use soapcpp2 -Ed)
struct _tds__GetDiscoveryMode
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse is a complexType.
///
/// @note struct _tds__GetDiscoveryModeResponse operations:
/// - _tds__GetDiscoveryModeResponse* soap_new__tds__GetDiscoveryModeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*) default initialize members
/// - int soap_read__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*) deserialize from a source
/// - int soap_write__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*) serialize to a sink
/// - _tds__GetDiscoveryModeResponse* soap_dup__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse* dst, _tds__GetDiscoveryModeResponse *src) returns deep copy of _tds__GetDiscoveryModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDiscoveryModeResponse(_tds__GetDiscoveryModeResponse*) deep deletes _tds__GetDiscoveryModeResponse data members, use only on dst after soap_dup__tds__GetDiscoveryModeResponse(NULL, _tds__GetDiscoveryModeResponse *dst, _tds__GetDiscoveryModeResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDiscoveryModeResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode is a complexType.
///
/// @note struct _tds__SetDiscoveryMode operations:
/// - _tds__SetDiscoveryMode* soap_new__tds__SetDiscoveryMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*) default initialize members
/// - int soap_read__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*) deserialize from a source
/// - int soap_write__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*) serialize to a sink
/// - _tds__SetDiscoveryMode* soap_dup__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode* dst, _tds__SetDiscoveryMode *src) returns deep copy of _tds__SetDiscoveryMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDiscoveryMode(_tds__SetDiscoveryMode*) deep deletes _tds__SetDiscoveryMode data members, use only on dst after soap_dup__tds__SetDiscoveryMode(NULL, _tds__SetDiscoveryMode *dst, _tds__SetDiscoveryMode *src) (use soapcpp2 -Ed)
struct _tds__SetDiscoveryMode
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse is a complexType.
///
/// @note struct _tds__SetDiscoveryModeResponse operations:
/// - _tds__SetDiscoveryModeResponse* soap_new__tds__SetDiscoveryModeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*) default initialize members
/// - int soap_read__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*) deserialize from a source
/// - int soap_write__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*) serialize to a sink
/// - _tds__SetDiscoveryModeResponse* soap_dup__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse* dst, _tds__SetDiscoveryModeResponse *src) returns deep copy of _tds__SetDiscoveryModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDiscoveryModeResponse(_tds__SetDiscoveryModeResponse*) deep deletes _tds__SetDiscoveryModeResponse data members, use only on dst after soap_dup__tds__SetDiscoveryModeResponse(NULL, _tds__SetDiscoveryModeResponse *dst, _tds__SetDiscoveryModeResponse *src) (use soapcpp2 -Ed)
struct _tds__SetDiscoveryModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode is a complexType.
///
/// @note struct _tds__GetRemoteDiscoveryMode operations:
/// - _tds__GetRemoteDiscoveryMode* soap_new__tds__GetRemoteDiscoveryMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*) default initialize members
/// - int soap_read__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*) deserialize from a source
/// - int soap_write__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*) serialize to a sink
/// - _tds__GetRemoteDiscoveryMode* soap_dup__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode* dst, _tds__GetRemoteDiscoveryMode *src) returns deep copy of _tds__GetRemoteDiscoveryMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetRemoteDiscoveryMode(_tds__GetRemoteDiscoveryMode*) deep deletes _tds__GetRemoteDiscoveryMode data members, use only on dst after soap_dup__tds__GetRemoteDiscoveryMode(NULL, _tds__GetRemoteDiscoveryMode *dst, _tds__GetRemoteDiscoveryMode *src) (use soapcpp2 -Ed)
struct _tds__GetRemoteDiscoveryMode
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse is a complexType.
///
/// @note struct _tds__GetRemoteDiscoveryModeResponse operations:
/// - _tds__GetRemoteDiscoveryModeResponse* soap_new__tds__GetRemoteDiscoveryModeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*) default initialize members
/// - int soap_read__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*) deserialize from a source
/// - int soap_write__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*) serialize to a sink
/// - _tds__GetRemoteDiscoveryModeResponse* soap_dup__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse* dst, _tds__GetRemoteDiscoveryModeResponse *src) returns deep copy of _tds__GetRemoteDiscoveryModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetRemoteDiscoveryModeResponse(_tds__GetRemoteDiscoveryModeResponse*) deep deletes _tds__GetRemoteDiscoveryModeResponse data members, use only on dst after soap_dup__tds__GetRemoteDiscoveryModeResponse(NULL, _tds__GetRemoteDiscoveryModeResponse *dst, _tds__GetRemoteDiscoveryModeResponse *src) (use soapcpp2 -Ed)
struct _tds__GetRemoteDiscoveryModeResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode is a complexType.
///
/// @note struct _tds__SetRemoteDiscoveryMode operations:
/// - _tds__SetRemoteDiscoveryMode* soap_new__tds__SetRemoteDiscoveryMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*) default initialize members
/// - int soap_read__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*) deserialize from a source
/// - int soap_write__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*) serialize to a sink
/// - _tds__SetRemoteDiscoveryMode* soap_dup__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode* dst, _tds__SetRemoteDiscoveryMode *src) returns deep copy of _tds__SetRemoteDiscoveryMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRemoteDiscoveryMode(_tds__SetRemoteDiscoveryMode*) deep deletes _tds__SetRemoteDiscoveryMode data members, use only on dst after soap_dup__tds__SetRemoteDiscoveryMode(NULL, _tds__SetRemoteDiscoveryMode *dst, _tds__SetRemoteDiscoveryMode *src) (use soapcpp2 -Ed)
struct _tds__SetRemoteDiscoveryMode
{
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse is a complexType.
///
/// @note struct _tds__SetRemoteDiscoveryModeResponse operations:
/// - _tds__SetRemoteDiscoveryModeResponse* soap_new__tds__SetRemoteDiscoveryModeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*) default initialize members
/// - int soap_read__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*) deserialize from a source
/// - int soap_write__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*) serialize to a sink
/// - _tds__SetRemoteDiscoveryModeResponse* soap_dup__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse* dst, _tds__SetRemoteDiscoveryModeResponse *src) returns deep copy of _tds__SetRemoteDiscoveryModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRemoteDiscoveryModeResponse(_tds__SetRemoteDiscoveryModeResponse*) deep deletes _tds__SetRemoteDiscoveryModeResponse data members, use only on dst after soap_dup__tds__SetRemoteDiscoveryModeResponse(NULL, _tds__SetRemoteDiscoveryModeResponse *dst, _tds__SetRemoteDiscoveryModeResponse *src) (use soapcpp2 -Ed)
struct _tds__SetRemoteDiscoveryModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses is a complexType.
///
/// @note struct _tds__GetDPAddresses operations:
/// - _tds__GetDPAddresses* soap_new__tds__GetDPAddresses(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*) default initialize members
/// - int soap_read__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*) deserialize from a source
/// - int soap_write__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*) serialize to a sink
/// - _tds__GetDPAddresses* soap_dup__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses* dst, _tds__GetDPAddresses *src) returns deep copy of _tds__GetDPAddresses src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDPAddresses(_tds__GetDPAddresses*) deep deletes _tds__GetDPAddresses data members, use only on dst after soap_dup__tds__GetDPAddresses(NULL, _tds__GetDPAddresses *dst, _tds__GetDPAddresses *src) (use soapcpp2 -Ed)
struct _tds__GetDPAddresses
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse is a complexType.
///
/// @note struct _tds__GetDPAddressesResponse operations:
/// - _tds__GetDPAddressesResponse* soap_new__tds__GetDPAddressesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*) default initialize members
/// - int soap_read__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*) deserialize from a source
/// - int soap_write__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*) serialize to a sink
/// - _tds__GetDPAddressesResponse* soap_dup__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse* dst, _tds__GetDPAddressesResponse *src) returns deep copy of _tds__GetDPAddressesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDPAddressesResponse(_tds__GetDPAddressesResponse*) deep deletes _tds__GetDPAddressesResponse data members, use only on dst after soap_dup__tds__GetDPAddressesResponse(NULL, _tds__GetDPAddressesResponse *dst, _tds__GetDPAddressesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDPAddressesResponse
{
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeDPAddress                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              DPAddress                      0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses is a complexType.
///
/// @note struct _tds__SetDPAddresses operations:
/// - _tds__SetDPAddresses* soap_new__tds__SetDPAddresses(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*) default initialize members
/// - int soap_read__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*) deserialize from a source
/// - int soap_write__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*) serialize to a sink
/// - _tds__SetDPAddresses* soap_dup__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses* dst, _tds__SetDPAddresses *src) returns deep copy of _tds__SetDPAddresses src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDPAddresses(_tds__SetDPAddresses*) deep deletes _tds__SetDPAddresses data members, use only on dst after soap_dup__tds__SetDPAddresses(NULL, _tds__SetDPAddresses *dst, _tds__SetDPAddresses *src) (use soapcpp2 -Ed)
struct _tds__SetDPAddresses
{
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeDPAddress                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              DPAddress                      0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse is a complexType.
///
/// @note struct _tds__SetDPAddressesResponse operations:
/// - _tds__SetDPAddressesResponse* soap_new__tds__SetDPAddressesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*) default initialize members
/// - int soap_read__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*) deserialize from a source
/// - int soap_write__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*) serialize to a sink
/// - _tds__SetDPAddressesResponse* soap_dup__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse* dst, _tds__SetDPAddressesResponse *src) returns deep copy of _tds__SetDPAddressesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDPAddressesResponse(_tds__SetDPAddressesResponse*) deep deletes _tds__SetDPAddressesResponse data members, use only on dst after soap_dup__tds__SetDPAddressesResponse(NULL, _tds__SetDPAddressesResponse *dst, _tds__SetDPAddressesResponse *src) (use soapcpp2 -Ed)
struct _tds__SetDPAddressesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference is a complexType.
///
/// @note struct _tds__GetEndpointReference operations:
/// - _tds__GetEndpointReference* soap_new__tds__GetEndpointReference(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*) default initialize members
/// - int soap_read__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*) deserialize from a source
/// - int soap_write__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*) serialize to a sink
/// - _tds__GetEndpointReference* soap_dup__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference* dst, _tds__GetEndpointReference *src) returns deep copy of _tds__GetEndpointReference src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetEndpointReference(_tds__GetEndpointReference*) deep deletes _tds__GetEndpointReference data members, use only on dst after soap_dup__tds__GetEndpointReference(NULL, _tds__GetEndpointReference *dst, _tds__GetEndpointReference *src) (use soapcpp2 -Ed)
struct _tds__GetEndpointReference
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse is a complexType.
///
/// @note struct _tds__GetEndpointReferenceResponse operations:
/// - _tds__GetEndpointReferenceResponse* soap_new__tds__GetEndpointReferenceResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*) default initialize members
/// - int soap_read__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*) deserialize from a source
/// - int soap_write__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*) serialize to a sink
/// - _tds__GetEndpointReferenceResponse* soap_dup__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse* dst, _tds__GetEndpointReferenceResponse *src) returns deep copy of _tds__GetEndpointReferenceResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetEndpointReferenceResponse(_tds__GetEndpointReferenceResponse*) deep deletes _tds__GetEndpointReferenceResponse data members, use only on dst after soap_dup__tds__GetEndpointReferenceResponse(NULL, _tds__GetEndpointReferenceResponse *dst, _tds__GetEndpointReferenceResponse *src) (use soapcpp2 -Ed)
struct _tds__GetEndpointReferenceResponse
{
/// Element "GUID" of type xs:string.
    char*                                GUID                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser is a complexType.
///
/// @note struct _tds__GetRemoteUser operations:
/// - _tds__GetRemoteUser* soap_new__tds__GetRemoteUser(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*) default initialize members
/// - int soap_read__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*) deserialize from a source
/// - int soap_write__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*) serialize to a sink
/// - _tds__GetRemoteUser* soap_dup__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser* dst, _tds__GetRemoteUser *src) returns deep copy of _tds__GetRemoteUser src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetRemoteUser(_tds__GetRemoteUser*) deep deletes _tds__GetRemoteUser data members, use only on dst after soap_dup__tds__GetRemoteUser(NULL, _tds__GetRemoteUser *dst, _tds__GetRemoteUser *src) (use soapcpp2 -Ed)
struct _tds__GetRemoteUser
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse is a complexType.
///
/// @note struct _tds__GetRemoteUserResponse operations:
/// - _tds__GetRemoteUserResponse* soap_new__tds__GetRemoteUserResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*) default initialize members
/// - int soap_read__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*) deserialize from a source
/// - int soap_write__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*) serialize to a sink
/// - _tds__GetRemoteUserResponse* soap_dup__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse* dst, _tds__GetRemoteUserResponse *src) returns deep copy of _tds__GetRemoteUserResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetRemoteUserResponse(_tds__GetRemoteUserResponse*) deep deletes _tds__GetRemoteUserResponse data members, use only on dst after soap_dup__tds__GetRemoteUserResponse(NULL, _tds__GetRemoteUserResponse *dst, _tds__GetRemoteUserResponse *src) (use soapcpp2 -Ed)
struct _tds__GetRemoteUserResponse
{
/// Element "RemoteUser" of type "http://www.onvif.org/ver10/schema":RemoteUser.
    struct tt__RemoteUser*               RemoteUser                     0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser is a complexType.
///
/// @note struct _tds__SetRemoteUser operations:
/// - _tds__SetRemoteUser* soap_new__tds__SetRemoteUser(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*) default initialize members
/// - int soap_read__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*) deserialize from a source
/// - int soap_write__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*) serialize to a sink
/// - _tds__SetRemoteUser* soap_dup__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser* dst, _tds__SetRemoteUser *src) returns deep copy of _tds__SetRemoteUser src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRemoteUser(_tds__SetRemoteUser*) deep deletes _tds__SetRemoteUser data members, use only on dst after soap_dup__tds__SetRemoteUser(NULL, _tds__SetRemoteUser *dst, _tds__SetRemoteUser *src) (use soapcpp2 -Ed)
struct _tds__SetRemoteUser
{
/// Element "RemoteUser" of type "http://www.onvif.org/ver10/schema":RemoteUser.
    struct tt__RemoteUser*               RemoteUser                     0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse is a complexType.
///
/// @note struct _tds__SetRemoteUserResponse operations:
/// - _tds__SetRemoteUserResponse* soap_new__tds__SetRemoteUserResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*) default initialize members
/// - int soap_read__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*) deserialize from a source
/// - int soap_write__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*) serialize to a sink
/// - _tds__SetRemoteUserResponse* soap_dup__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse* dst, _tds__SetRemoteUserResponse *src) returns deep copy of _tds__SetRemoteUserResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRemoteUserResponse(_tds__SetRemoteUserResponse*) deep deletes _tds__SetRemoteUserResponse data members, use only on dst after soap_dup__tds__SetRemoteUserResponse(NULL, _tds__SetRemoteUserResponse *dst, _tds__SetRemoteUserResponse *src) (use soapcpp2 -Ed)
struct _tds__SetRemoteUserResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsers is a complexType.
///
/// @note struct _tds__GetUsers operations:
/// - _tds__GetUsers* soap_new__tds__GetUsers(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetUsers(struct soap*, _tds__GetUsers*) default initialize members
/// - int soap_read__tds__GetUsers(struct soap*, _tds__GetUsers*) deserialize from a source
/// - int soap_write__tds__GetUsers(struct soap*, _tds__GetUsers*) serialize to a sink
/// - _tds__GetUsers* soap_dup__tds__GetUsers(struct soap*, _tds__GetUsers* dst, _tds__GetUsers *src) returns deep copy of _tds__GetUsers src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetUsers(_tds__GetUsers*) deep deletes _tds__GetUsers data members, use only on dst after soap_dup__tds__GetUsers(NULL, _tds__GetUsers *dst, _tds__GetUsers *src) (use soapcpp2 -Ed)
struct _tds__GetUsers
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse is a complexType.
///
/// @note struct _tds__GetUsersResponse operations:
/// - _tds__GetUsersResponse* soap_new__tds__GetUsersResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*) default initialize members
/// - int soap_read__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*) deserialize from a source
/// - int soap_write__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*) serialize to a sink
/// - _tds__GetUsersResponse* soap_dup__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse* dst, _tds__GetUsersResponse *src) returns deep copy of _tds__GetUsersResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetUsersResponse(_tds__GetUsersResponse*) deep deletes _tds__GetUsersResponse data members, use only on dst after soap_dup__tds__GetUsersResponse(NULL, _tds__GetUsersResponse *dst, _tds__GetUsersResponse *src) (use soapcpp2 -Ed)
struct _tds__GetUsersResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains a list of the onvif users and following information is included in each entry: username and user level.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__User* is 0..unbounded.
  $ int                                  __sizeUser                     0;
/// Array struct tt__User* of size 0..unbounded.
    struct tt__User*                     User                           0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsers is a complexType.
///
/// @note struct _tds__CreateUsers operations:
/// - _tds__CreateUsers* soap_new__tds__CreateUsers(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateUsers(struct soap*, _tds__CreateUsers*) default initialize members
/// - int soap_read__tds__CreateUsers(struct soap*, _tds__CreateUsers*) deserialize from a source
/// - int soap_write__tds__CreateUsers(struct soap*, _tds__CreateUsers*) serialize to a sink
/// - _tds__CreateUsers* soap_dup__tds__CreateUsers(struct soap*, _tds__CreateUsers* dst, _tds__CreateUsers *src) returns deep copy of _tds__CreateUsers src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateUsers(_tds__CreateUsers*) deep deletes _tds__CreateUsers data members, use only on dst after soap_dup__tds__CreateUsers(NULL, _tds__CreateUsers *dst, _tds__CreateUsers *src) (use soapcpp2 -Ed)
struct _tds__CreateUsers
{
/// <PRE><BLOCKQUOTE>
///   Creates new device users and corresponding credentials. Each user entry includes: username, password and user level. Either all users are created successfully or a fault message MUST be returned without creating any user. If trying to create several users with exactly the same username the request is rejected and no users are created. If password is missing, then fault message Too weak password is returned.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__User* is 1..unbounded.
  $ int                                  __sizeUser                     1;
/// Array struct tt__User* of size 1..unbounded.
    struct tt__User*                     User                           1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse is a complexType.
///
/// @note struct _tds__CreateUsersResponse operations:
/// - _tds__CreateUsersResponse* soap_new__tds__CreateUsersResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*) default initialize members
/// - int soap_read__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*) deserialize from a source
/// - int soap_write__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*) serialize to a sink
/// - _tds__CreateUsersResponse* soap_dup__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse* dst, _tds__CreateUsersResponse *src) returns deep copy of _tds__CreateUsersResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateUsersResponse(_tds__CreateUsersResponse*) deep deletes _tds__CreateUsersResponse data members, use only on dst after soap_dup__tds__CreateUsersResponse(NULL, _tds__CreateUsersResponse *dst, _tds__CreateUsersResponse *src) (use soapcpp2 -Ed)
struct _tds__CreateUsersResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsers is a complexType.
///
/// @note struct _tds__DeleteUsers operations:
/// - _tds__DeleteUsers* soap_new__tds__DeleteUsers(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*) default initialize members
/// - int soap_read__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*) deserialize from a source
/// - int soap_write__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*) serialize to a sink
/// - _tds__DeleteUsers* soap_dup__tds__DeleteUsers(struct soap*, _tds__DeleteUsers* dst, _tds__DeleteUsers *src) returns deep copy of _tds__DeleteUsers src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteUsers(_tds__DeleteUsers*) deep deletes _tds__DeleteUsers data members, use only on dst after soap_dup__tds__DeleteUsers(NULL, _tds__DeleteUsers *dst, _tds__DeleteUsers *src) (use soapcpp2 -Ed)
struct _tds__DeleteUsers
{
/// <PRE><BLOCKQUOTE>
///   Deletes users on an device and there may exist users that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a fault message MUST be returned and no users be deleted. If a username exists multiple times in the request, then a fault message is returned.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char** is 1..unbounded.
  $ int                                  __sizeUsername                 1;
/// Array char** of size 1..unbounded.
    char**                               Username                       1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse is a complexType.
///
/// @note struct _tds__DeleteUsersResponse operations:
/// - _tds__DeleteUsersResponse* soap_new__tds__DeleteUsersResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*) default initialize members
/// - int soap_read__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*) deserialize from a source
/// - int soap_write__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*) serialize to a sink
/// - _tds__DeleteUsersResponse* soap_dup__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse* dst, _tds__DeleteUsersResponse *src) returns deep copy of _tds__DeleteUsersResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteUsersResponse(_tds__DeleteUsersResponse*) deep deletes _tds__DeleteUsersResponse data members, use only on dst after soap_dup__tds__DeleteUsersResponse(NULL, _tds__DeleteUsersResponse *dst, _tds__DeleteUsersResponse *src) (use soapcpp2 -Ed)
struct _tds__DeleteUsersResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUser is a complexType.
///
/// @note struct _tds__SetUser operations:
/// - _tds__SetUser* soap_new__tds__SetUser(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetUser(struct soap*, _tds__SetUser*) default initialize members
/// - int soap_read__tds__SetUser(struct soap*, _tds__SetUser*) deserialize from a source
/// - int soap_write__tds__SetUser(struct soap*, _tds__SetUser*) serialize to a sink
/// - _tds__SetUser* soap_dup__tds__SetUser(struct soap*, _tds__SetUser* dst, _tds__SetUser *src) returns deep copy of _tds__SetUser src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetUser(_tds__SetUser*) deep deletes _tds__SetUser data members, use only on dst after soap_dup__tds__SetUser(NULL, _tds__SetUser *dst, _tds__SetUser *src) (use soapcpp2 -Ed)
struct _tds__SetUser
{
/// <PRE><BLOCKQUOTE>
///   Updates the credentials for one or several users on an device. Either all change requests are processed successfully or a fault message MUST be returned. If the request contains the same username multiple times, a fault message is returned.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__User* is 1..unbounded.
  $ int                                  __sizeUser                     1;
/// Array struct tt__User* of size 1..unbounded.
    struct tt__User*                     User                           1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUserResponse is a complexType.
///
/// @note struct _tds__SetUserResponse operations:
/// - _tds__SetUserResponse* soap_new__tds__SetUserResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*) default initialize members
/// - int soap_read__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*) deserialize from a source
/// - int soap_write__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*) serialize to a sink
/// - _tds__SetUserResponse* soap_dup__tds__SetUserResponse(struct soap*, _tds__SetUserResponse* dst, _tds__SetUserResponse *src) returns deep copy of _tds__SetUserResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetUserResponse(_tds__SetUserResponse*) deep deletes _tds__SetUserResponse data members, use only on dst after soap_dup__tds__SetUserResponse(NULL, _tds__SetUserResponse *dst, _tds__SetUserResponse *src) (use soapcpp2 -Ed)
struct _tds__SetUserResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl is a complexType.
///
/// @note struct _tds__GetWsdlUrl operations:
/// - _tds__GetWsdlUrl* soap_new__tds__GetWsdlUrl(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*) default initialize members
/// - int soap_read__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*) deserialize from a source
/// - int soap_write__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*) serialize to a sink
/// - _tds__GetWsdlUrl* soap_dup__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl* dst, _tds__GetWsdlUrl *src) returns deep copy of _tds__GetWsdlUrl src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetWsdlUrl(_tds__GetWsdlUrl*) deep deletes _tds__GetWsdlUrl data members, use only on dst after soap_dup__tds__GetWsdlUrl(NULL, _tds__GetWsdlUrl *dst, _tds__GetWsdlUrl *src) (use soapcpp2 -Ed)
struct _tds__GetWsdlUrl
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse is a complexType.
///
/// @note struct _tds__GetWsdlUrlResponse operations:
/// - _tds__GetWsdlUrlResponse* soap_new__tds__GetWsdlUrlResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*) default initialize members
/// - int soap_read__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*) deserialize from a source
/// - int soap_write__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*) serialize to a sink
/// - _tds__GetWsdlUrlResponse* soap_dup__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse* dst, _tds__GetWsdlUrlResponse *src) returns deep copy of _tds__GetWsdlUrlResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetWsdlUrlResponse(_tds__GetWsdlUrlResponse*) deep deletes _tds__GetWsdlUrlResponse data members, use only on dst after soap_dup__tds__GetWsdlUrlResponse(NULL, _tds__GetWsdlUrlResponse *dst, _tds__GetWsdlUrlResponse *src) (use soapcpp2 -Ed)
struct _tds__GetWsdlUrlResponse
{
/// Element "WsdlUrl" of type xs:anyURI.
    xsd__anyURI                          WsdlUrl                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityOptions
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityOptions is a complexType.
///
/// @note struct _tds__GetPasswordComplexityOptions operations:
/// - _tds__GetPasswordComplexityOptions* soap_new__tds__GetPasswordComplexityOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetPasswordComplexityOptions(struct soap*, _tds__GetPasswordComplexityOptions*) default initialize members
/// - int soap_read__tds__GetPasswordComplexityOptions(struct soap*, _tds__GetPasswordComplexityOptions*) deserialize from a source
/// - int soap_write__tds__GetPasswordComplexityOptions(struct soap*, _tds__GetPasswordComplexityOptions*) serialize to a sink
/// - _tds__GetPasswordComplexityOptions* soap_dup__tds__GetPasswordComplexityOptions(struct soap*, _tds__GetPasswordComplexityOptions* dst, _tds__GetPasswordComplexityOptions *src) returns deep copy of _tds__GetPasswordComplexityOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetPasswordComplexityOptions(_tds__GetPasswordComplexityOptions*) deep deletes _tds__GetPasswordComplexityOptions data members, use only on dst after soap_dup__tds__GetPasswordComplexityOptions(NULL, _tds__GetPasswordComplexityOptions *dst, _tds__GetPasswordComplexityOptions *src) (use soapcpp2 -Ed)
struct _tds__GetPasswordComplexityOptions
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityOptionsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityOptionsResponse is a complexType.
///
/// @note struct _tds__GetPasswordComplexityOptionsResponse operations:
/// - _tds__GetPasswordComplexityOptionsResponse* soap_new__tds__GetPasswordComplexityOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetPasswordComplexityOptionsResponse(struct soap*, _tds__GetPasswordComplexityOptionsResponse*) default initialize members
/// - int soap_read__tds__GetPasswordComplexityOptionsResponse(struct soap*, _tds__GetPasswordComplexityOptionsResponse*) deserialize from a source
/// - int soap_write__tds__GetPasswordComplexityOptionsResponse(struct soap*, _tds__GetPasswordComplexityOptionsResponse*) serialize to a sink
/// - _tds__GetPasswordComplexityOptionsResponse* soap_dup__tds__GetPasswordComplexityOptionsResponse(struct soap*, _tds__GetPasswordComplexityOptionsResponse* dst, _tds__GetPasswordComplexityOptionsResponse *src) returns deep copy of _tds__GetPasswordComplexityOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetPasswordComplexityOptionsResponse(_tds__GetPasswordComplexityOptionsResponse*) deep deletes _tds__GetPasswordComplexityOptionsResponse data members, use only on dst after soap_dup__tds__GetPasswordComplexityOptionsResponse(NULL, _tds__GetPasswordComplexityOptionsResponse *dst, _tds__GetPasswordComplexityOptionsResponse *src) (use soapcpp2 -Ed)
struct _tds__GetPasswordComplexityOptionsResponse
{
/// Element "MinLenRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 MinLenRange                    0;	///< Optional element.
/// Element "UppercaseRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 UppercaseRange                 0;	///< Optional element.
/// Element "NumberRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 NumberRange                    0;	///< Optional element.
/// Element "SpecialCharsRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 SpecialCharsRange              0;	///< Optional element.
/// Element "BlockUsernameOccurrenceSupported" of type xs:boolean.
    enum xsd__boolean*                   BlockUsernameOccurrenceSupported 0;	///< Optional element.
/// Element "PolicyConfigurationLockSupported" of type xs:boolean.
    enum xsd__boolean*                   PolicyConfigurationLockSupported 0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityConfiguration is a complexType.
///
/// @note struct _tds__GetPasswordComplexityConfiguration operations:
/// - _tds__GetPasswordComplexityConfiguration* soap_new__tds__GetPasswordComplexityConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetPasswordComplexityConfiguration(struct soap*, _tds__GetPasswordComplexityConfiguration*) default initialize members
/// - int soap_read__tds__GetPasswordComplexityConfiguration(struct soap*, _tds__GetPasswordComplexityConfiguration*) deserialize from a source
/// - int soap_write__tds__GetPasswordComplexityConfiguration(struct soap*, _tds__GetPasswordComplexityConfiguration*) serialize to a sink
/// - _tds__GetPasswordComplexityConfiguration* soap_dup__tds__GetPasswordComplexityConfiguration(struct soap*, _tds__GetPasswordComplexityConfiguration* dst, _tds__GetPasswordComplexityConfiguration *src) returns deep copy of _tds__GetPasswordComplexityConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetPasswordComplexityConfiguration(_tds__GetPasswordComplexityConfiguration*) deep deletes _tds__GetPasswordComplexityConfiguration data members, use only on dst after soap_dup__tds__GetPasswordComplexityConfiguration(NULL, _tds__GetPasswordComplexityConfiguration *dst, _tds__GetPasswordComplexityConfiguration *src) (use soapcpp2 -Ed)
struct _tds__GetPasswordComplexityConfiguration
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityConfigurationResponse is a complexType.
///
/// @note struct _tds__GetPasswordComplexityConfigurationResponse operations:
/// - _tds__GetPasswordComplexityConfigurationResponse* soap_new__tds__GetPasswordComplexityConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetPasswordComplexityConfigurationResponse(struct soap*, _tds__GetPasswordComplexityConfigurationResponse*) default initialize members
/// - int soap_read__tds__GetPasswordComplexityConfigurationResponse(struct soap*, _tds__GetPasswordComplexityConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__GetPasswordComplexityConfigurationResponse(struct soap*, _tds__GetPasswordComplexityConfigurationResponse*) serialize to a sink
/// - _tds__GetPasswordComplexityConfigurationResponse* soap_dup__tds__GetPasswordComplexityConfigurationResponse(struct soap*, _tds__GetPasswordComplexityConfigurationResponse* dst, _tds__GetPasswordComplexityConfigurationResponse *src) returns deep copy of _tds__GetPasswordComplexityConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetPasswordComplexityConfigurationResponse(_tds__GetPasswordComplexityConfigurationResponse*) deep deletes _tds__GetPasswordComplexityConfigurationResponse data members, use only on dst after soap_dup__tds__GetPasswordComplexityConfigurationResponse(NULL, _tds__GetPasswordComplexityConfigurationResponse *dst, _tds__GetPasswordComplexityConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetPasswordComplexityConfigurationResponse
{
/// Element "MinLen" of type xs:int.
    int*                                 MinLen                         0;	///< Optional element.
/// Element "Uppercase" of type xs:int.
    int*                                 Uppercase                      0;	///< Optional element.
/// Element "Number" of type xs:int.
    int*                                 Number                         0;	///< Optional element.
/// Element "SpecialChars" of type xs:int.
    int*                                 SpecialChars                   0;	///< Optional element.
/// Element "BlockUsernameOccurrence" of type xs:boolean.
    enum xsd__boolean*                   BlockUsernameOccurrence        0;	///< Optional element.
/// Element "PolicyConfigurationLocked" of type xs:boolean.
    enum xsd__boolean*                   PolicyConfigurationLocked      0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetPasswordComplexityConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetPasswordComplexityConfiguration is a complexType.
///
/// @note struct _tds__SetPasswordComplexityConfiguration operations:
/// - _tds__SetPasswordComplexityConfiguration* soap_new__tds__SetPasswordComplexityConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetPasswordComplexityConfiguration(struct soap*, _tds__SetPasswordComplexityConfiguration*) default initialize members
/// - int soap_read__tds__SetPasswordComplexityConfiguration(struct soap*, _tds__SetPasswordComplexityConfiguration*) deserialize from a source
/// - int soap_write__tds__SetPasswordComplexityConfiguration(struct soap*, _tds__SetPasswordComplexityConfiguration*) serialize to a sink
/// - _tds__SetPasswordComplexityConfiguration* soap_dup__tds__SetPasswordComplexityConfiguration(struct soap*, _tds__SetPasswordComplexityConfiguration* dst, _tds__SetPasswordComplexityConfiguration *src) returns deep copy of _tds__SetPasswordComplexityConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetPasswordComplexityConfiguration(_tds__SetPasswordComplexityConfiguration*) deep deletes _tds__SetPasswordComplexityConfiguration data members, use only on dst after soap_dup__tds__SetPasswordComplexityConfiguration(NULL, _tds__SetPasswordComplexityConfiguration *dst, _tds__SetPasswordComplexityConfiguration *src) (use soapcpp2 -Ed)
struct _tds__SetPasswordComplexityConfiguration
{
/// Element "MinLen" of type xs:int.
    int*                                 MinLen                         0;	///< Optional element.
/// Element "Uppercase" of type xs:int.
    int*                                 Uppercase                      0;	///< Optional element.
/// Element "Number" of type xs:int.
    int*                                 Number                         0;	///< Optional element.
/// Element "SpecialChars" of type xs:int.
    int*                                 SpecialChars                   0;	///< Optional element.
/// Element "BlockUsernameOccurrence" of type xs:boolean.
    enum xsd__boolean*                   BlockUsernameOccurrence        0;	///< Optional element.
/// Element "PolicyConfigurationLocked" of type xs:boolean.
    enum xsd__boolean*                   PolicyConfigurationLocked      0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetPasswordComplexityConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetPasswordComplexityConfigurationResponse is a complexType.
///
/// @note struct _tds__SetPasswordComplexityConfigurationResponse operations:
/// - _tds__SetPasswordComplexityConfigurationResponse* soap_new__tds__SetPasswordComplexityConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetPasswordComplexityConfigurationResponse(struct soap*, _tds__SetPasswordComplexityConfigurationResponse*) default initialize members
/// - int soap_read__tds__SetPasswordComplexityConfigurationResponse(struct soap*, _tds__SetPasswordComplexityConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__SetPasswordComplexityConfigurationResponse(struct soap*, _tds__SetPasswordComplexityConfigurationResponse*) serialize to a sink
/// - _tds__SetPasswordComplexityConfigurationResponse* soap_dup__tds__SetPasswordComplexityConfigurationResponse(struct soap*, _tds__SetPasswordComplexityConfigurationResponse* dst, _tds__SetPasswordComplexityConfigurationResponse *src) returns deep copy of _tds__SetPasswordComplexityConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetPasswordComplexityConfigurationResponse(_tds__SetPasswordComplexityConfigurationResponse*) deep deletes _tds__SetPasswordComplexityConfigurationResponse data members, use only on dst after soap_dup__tds__SetPasswordComplexityConfigurationResponse(NULL, _tds__SetPasswordComplexityConfigurationResponse *dst, _tds__SetPasswordComplexityConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__SetPasswordComplexityConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPasswordHistoryConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPasswordHistoryConfiguration is a complexType.
///
/// @note struct _tds__GetPasswordHistoryConfiguration operations:
/// - _tds__GetPasswordHistoryConfiguration* soap_new__tds__GetPasswordHistoryConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetPasswordHistoryConfiguration(struct soap*, _tds__GetPasswordHistoryConfiguration*) default initialize members
/// - int soap_read__tds__GetPasswordHistoryConfiguration(struct soap*, _tds__GetPasswordHistoryConfiguration*) deserialize from a source
/// - int soap_write__tds__GetPasswordHistoryConfiguration(struct soap*, _tds__GetPasswordHistoryConfiguration*) serialize to a sink
/// - _tds__GetPasswordHistoryConfiguration* soap_dup__tds__GetPasswordHistoryConfiguration(struct soap*, _tds__GetPasswordHistoryConfiguration* dst, _tds__GetPasswordHistoryConfiguration *src) returns deep copy of _tds__GetPasswordHistoryConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetPasswordHistoryConfiguration(_tds__GetPasswordHistoryConfiguration*) deep deletes _tds__GetPasswordHistoryConfiguration data members, use only on dst after soap_dup__tds__GetPasswordHistoryConfiguration(NULL, _tds__GetPasswordHistoryConfiguration *dst, _tds__GetPasswordHistoryConfiguration *src) (use soapcpp2 -Ed)
struct _tds__GetPasswordHistoryConfiguration
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPasswordHistoryConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPasswordHistoryConfigurationResponse is a complexType.
///
/// @note struct _tds__GetPasswordHistoryConfigurationResponse operations:
/// - _tds__GetPasswordHistoryConfigurationResponse* soap_new__tds__GetPasswordHistoryConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetPasswordHistoryConfigurationResponse(struct soap*, _tds__GetPasswordHistoryConfigurationResponse*) default initialize members
/// - int soap_read__tds__GetPasswordHistoryConfigurationResponse(struct soap*, _tds__GetPasswordHistoryConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__GetPasswordHistoryConfigurationResponse(struct soap*, _tds__GetPasswordHistoryConfigurationResponse*) serialize to a sink
/// - _tds__GetPasswordHistoryConfigurationResponse* soap_dup__tds__GetPasswordHistoryConfigurationResponse(struct soap*, _tds__GetPasswordHistoryConfigurationResponse* dst, _tds__GetPasswordHistoryConfigurationResponse *src) returns deep copy of _tds__GetPasswordHistoryConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetPasswordHistoryConfigurationResponse(_tds__GetPasswordHistoryConfigurationResponse*) deep deletes _tds__GetPasswordHistoryConfigurationResponse data members, use only on dst after soap_dup__tds__GetPasswordHistoryConfigurationResponse(NULL, _tds__GetPasswordHistoryConfigurationResponse *dst, _tds__GetPasswordHistoryConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetPasswordHistoryConfigurationResponse
{
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// Element "Length" of type xs:int.
    int                                  Length                         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetPasswordHistoryConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetPasswordHistoryConfiguration is a complexType.
///
/// @note struct _tds__SetPasswordHistoryConfiguration operations:
/// - _tds__SetPasswordHistoryConfiguration* soap_new__tds__SetPasswordHistoryConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetPasswordHistoryConfiguration(struct soap*, _tds__SetPasswordHistoryConfiguration*) default initialize members
/// - int soap_read__tds__SetPasswordHistoryConfiguration(struct soap*, _tds__SetPasswordHistoryConfiguration*) deserialize from a source
/// - int soap_write__tds__SetPasswordHistoryConfiguration(struct soap*, _tds__SetPasswordHistoryConfiguration*) serialize to a sink
/// - _tds__SetPasswordHistoryConfiguration* soap_dup__tds__SetPasswordHistoryConfiguration(struct soap*, _tds__SetPasswordHistoryConfiguration* dst, _tds__SetPasswordHistoryConfiguration *src) returns deep copy of _tds__SetPasswordHistoryConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetPasswordHistoryConfiguration(_tds__SetPasswordHistoryConfiguration*) deep deletes _tds__SetPasswordHistoryConfiguration data members, use only on dst after soap_dup__tds__SetPasswordHistoryConfiguration(NULL, _tds__SetPasswordHistoryConfiguration *dst, _tds__SetPasswordHistoryConfiguration *src) (use soapcpp2 -Ed)
struct _tds__SetPasswordHistoryConfiguration
{
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// Element "Length" of type xs:int.
    int                                  Length                         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetPasswordHistoryConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetPasswordHistoryConfigurationResponse is a complexType.
///
/// @note struct _tds__SetPasswordHistoryConfigurationResponse operations:
/// - _tds__SetPasswordHistoryConfigurationResponse* soap_new__tds__SetPasswordHistoryConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetPasswordHistoryConfigurationResponse(struct soap*, _tds__SetPasswordHistoryConfigurationResponse*) default initialize members
/// - int soap_read__tds__SetPasswordHistoryConfigurationResponse(struct soap*, _tds__SetPasswordHistoryConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__SetPasswordHistoryConfigurationResponse(struct soap*, _tds__SetPasswordHistoryConfigurationResponse*) serialize to a sink
/// - _tds__SetPasswordHistoryConfigurationResponse* soap_dup__tds__SetPasswordHistoryConfigurationResponse(struct soap*, _tds__SetPasswordHistoryConfigurationResponse* dst, _tds__SetPasswordHistoryConfigurationResponse *src) returns deep copy of _tds__SetPasswordHistoryConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetPasswordHistoryConfigurationResponse(_tds__SetPasswordHistoryConfigurationResponse*) deep deletes _tds__SetPasswordHistoryConfigurationResponse data members, use only on dst after soap_dup__tds__SetPasswordHistoryConfigurationResponse(NULL, _tds__SetPasswordHistoryConfigurationResponse *dst, _tds__SetPasswordHistoryConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__SetPasswordHistoryConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningOptions
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningOptions is a complexType.
///
/// @note struct _tds__GetAuthFailureWarningOptions operations:
/// - _tds__GetAuthFailureWarningOptions* soap_new__tds__GetAuthFailureWarningOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetAuthFailureWarningOptions(struct soap*, _tds__GetAuthFailureWarningOptions*) default initialize members
/// - int soap_read__tds__GetAuthFailureWarningOptions(struct soap*, _tds__GetAuthFailureWarningOptions*) deserialize from a source
/// - int soap_write__tds__GetAuthFailureWarningOptions(struct soap*, _tds__GetAuthFailureWarningOptions*) serialize to a sink
/// - _tds__GetAuthFailureWarningOptions* soap_dup__tds__GetAuthFailureWarningOptions(struct soap*, _tds__GetAuthFailureWarningOptions* dst, _tds__GetAuthFailureWarningOptions *src) returns deep copy of _tds__GetAuthFailureWarningOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetAuthFailureWarningOptions(_tds__GetAuthFailureWarningOptions*) deep deletes _tds__GetAuthFailureWarningOptions data members, use only on dst after soap_dup__tds__GetAuthFailureWarningOptions(NULL, _tds__GetAuthFailureWarningOptions *dst, _tds__GetAuthFailureWarningOptions *src) (use soapcpp2 -Ed)
struct _tds__GetAuthFailureWarningOptions
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningOptionsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningOptionsResponse is a complexType.
///
/// @note struct _tds__GetAuthFailureWarningOptionsResponse operations:
/// - _tds__GetAuthFailureWarningOptionsResponse* soap_new__tds__GetAuthFailureWarningOptionsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetAuthFailureWarningOptionsResponse(struct soap*, _tds__GetAuthFailureWarningOptionsResponse*) default initialize members
/// - int soap_read__tds__GetAuthFailureWarningOptionsResponse(struct soap*, _tds__GetAuthFailureWarningOptionsResponse*) deserialize from a source
/// - int soap_write__tds__GetAuthFailureWarningOptionsResponse(struct soap*, _tds__GetAuthFailureWarningOptionsResponse*) serialize to a sink
/// - _tds__GetAuthFailureWarningOptionsResponse* soap_dup__tds__GetAuthFailureWarningOptionsResponse(struct soap*, _tds__GetAuthFailureWarningOptionsResponse* dst, _tds__GetAuthFailureWarningOptionsResponse *src) returns deep copy of _tds__GetAuthFailureWarningOptionsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetAuthFailureWarningOptionsResponse(_tds__GetAuthFailureWarningOptionsResponse*) deep deletes _tds__GetAuthFailureWarningOptionsResponse data members, use only on dst after soap_dup__tds__GetAuthFailureWarningOptionsResponse(NULL, _tds__GetAuthFailureWarningOptionsResponse *dst, _tds__GetAuthFailureWarningOptionsResponse *src) (use soapcpp2 -Ed)
struct _tds__GetAuthFailureWarningOptionsResponse
{
/// Element "MonitorPeriodRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 MonitorPeriodRange             1;	///< Required element.
/// Element "AuthFailureRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 AuthFailureRange               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningConfiguration is a complexType.
///
/// @note struct _tds__GetAuthFailureWarningConfiguration operations:
/// - _tds__GetAuthFailureWarningConfiguration* soap_new__tds__GetAuthFailureWarningConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetAuthFailureWarningConfiguration(struct soap*, _tds__GetAuthFailureWarningConfiguration*) default initialize members
/// - int soap_read__tds__GetAuthFailureWarningConfiguration(struct soap*, _tds__GetAuthFailureWarningConfiguration*) deserialize from a source
/// - int soap_write__tds__GetAuthFailureWarningConfiguration(struct soap*, _tds__GetAuthFailureWarningConfiguration*) serialize to a sink
/// - _tds__GetAuthFailureWarningConfiguration* soap_dup__tds__GetAuthFailureWarningConfiguration(struct soap*, _tds__GetAuthFailureWarningConfiguration* dst, _tds__GetAuthFailureWarningConfiguration *src) returns deep copy of _tds__GetAuthFailureWarningConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetAuthFailureWarningConfiguration(_tds__GetAuthFailureWarningConfiguration*) deep deletes _tds__GetAuthFailureWarningConfiguration data members, use only on dst after soap_dup__tds__GetAuthFailureWarningConfiguration(NULL, _tds__GetAuthFailureWarningConfiguration *dst, _tds__GetAuthFailureWarningConfiguration *src) (use soapcpp2 -Ed)
struct _tds__GetAuthFailureWarningConfiguration
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningConfigurationResponse is a complexType.
///
/// @note struct _tds__GetAuthFailureWarningConfigurationResponse operations:
/// - _tds__GetAuthFailureWarningConfigurationResponse* soap_new__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, _tds__GetAuthFailureWarningConfigurationResponse*) default initialize members
/// - int soap_read__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, _tds__GetAuthFailureWarningConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, _tds__GetAuthFailureWarningConfigurationResponse*) serialize to a sink
/// - _tds__GetAuthFailureWarningConfigurationResponse* soap_dup__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, _tds__GetAuthFailureWarningConfigurationResponse* dst, _tds__GetAuthFailureWarningConfigurationResponse *src) returns deep copy of _tds__GetAuthFailureWarningConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetAuthFailureWarningConfigurationResponse(_tds__GetAuthFailureWarningConfigurationResponse*) deep deletes _tds__GetAuthFailureWarningConfigurationResponse data members, use only on dst after soap_dup__tds__GetAuthFailureWarningConfigurationResponse(NULL, _tds__GetAuthFailureWarningConfigurationResponse *dst, _tds__GetAuthFailureWarningConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetAuthFailureWarningConfigurationResponse
{
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// Element "MonitorPeriod" of type xs:int.
    int                                  MonitorPeriod                  1;	///< Required element.
/// Element "MaxAuthFailures" of type xs:int.
    int                                  MaxAuthFailures                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAuthFailureWarningConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAuthFailureWarningConfiguration is a complexType.
///
/// @note struct _tds__SetAuthFailureWarningConfiguration operations:
/// - _tds__SetAuthFailureWarningConfiguration* soap_new__tds__SetAuthFailureWarningConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetAuthFailureWarningConfiguration(struct soap*, _tds__SetAuthFailureWarningConfiguration*) default initialize members
/// - int soap_read__tds__SetAuthFailureWarningConfiguration(struct soap*, _tds__SetAuthFailureWarningConfiguration*) deserialize from a source
/// - int soap_write__tds__SetAuthFailureWarningConfiguration(struct soap*, _tds__SetAuthFailureWarningConfiguration*) serialize to a sink
/// - _tds__SetAuthFailureWarningConfiguration* soap_dup__tds__SetAuthFailureWarningConfiguration(struct soap*, _tds__SetAuthFailureWarningConfiguration* dst, _tds__SetAuthFailureWarningConfiguration *src) returns deep copy of _tds__SetAuthFailureWarningConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetAuthFailureWarningConfiguration(_tds__SetAuthFailureWarningConfiguration*) deep deletes _tds__SetAuthFailureWarningConfiguration data members, use only on dst after soap_dup__tds__SetAuthFailureWarningConfiguration(NULL, _tds__SetAuthFailureWarningConfiguration *dst, _tds__SetAuthFailureWarningConfiguration *src) (use soapcpp2 -Ed)
struct _tds__SetAuthFailureWarningConfiguration
{
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// Element "MonitorPeriod" of type xs:int.
    int                                  MonitorPeriod                  1;	///< Required element.
/// Element "MaxAuthFailures" of type xs:int.
    int                                  MaxAuthFailures                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAuthFailureWarningConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAuthFailureWarningConfigurationResponse is a complexType.
///
/// @note struct _tds__SetAuthFailureWarningConfigurationResponse operations:
/// - _tds__SetAuthFailureWarningConfigurationResponse* soap_new__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, _tds__SetAuthFailureWarningConfigurationResponse*) default initialize members
/// - int soap_read__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, _tds__SetAuthFailureWarningConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, _tds__SetAuthFailureWarningConfigurationResponse*) serialize to a sink
/// - _tds__SetAuthFailureWarningConfigurationResponse* soap_dup__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, _tds__SetAuthFailureWarningConfigurationResponse* dst, _tds__SetAuthFailureWarningConfigurationResponse *src) returns deep copy of _tds__SetAuthFailureWarningConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetAuthFailureWarningConfigurationResponse(_tds__SetAuthFailureWarningConfigurationResponse*) deep deletes _tds__SetAuthFailureWarningConfigurationResponse data members, use only on dst after soap_dup__tds__SetAuthFailureWarningConfigurationResponse(NULL, _tds__SetAuthFailureWarningConfigurationResponse *dst, _tds__SetAuthFailureWarningConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__SetAuthFailureWarningConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilities is a complexType.
///
/// @note struct _tds__GetCapabilities operations:
/// - _tds__GetCapabilities* soap_new__tds__GetCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*) default initialize members
/// - int soap_read__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*) deserialize from a source
/// - int soap_write__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*) serialize to a sink
/// - _tds__GetCapabilities* soap_dup__tds__GetCapabilities(struct soap*, _tds__GetCapabilities* dst, _tds__GetCapabilities *src) returns deep copy of _tds__GetCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCapabilities(_tds__GetCapabilities*) deep deletes _tds__GetCapabilities data members, use only on dst after soap_dup__tds__GetCapabilities(NULL, _tds__GetCapabilities *dst, _tds__GetCapabilities *src) (use soapcpp2 -Ed)
struct _tds__GetCapabilities
{
/// <PRE><BLOCKQUOTE>
///   List of categories to retrieve capability information on.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__CapabilityCategory* is 0..unbounded.
  $ int                                  __sizeCategory                 0;
/// Array enum tt__CapabilityCategory* of size 0..unbounded.
    enum tt__CapabilityCategory*         Category                       0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse is a complexType.
///
/// @note struct _tds__GetCapabilitiesResponse operations:
/// - _tds__GetCapabilitiesResponse* soap_new__tds__GetCapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*) default initialize members
/// - int soap_read__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*) deserialize from a source
/// - int soap_write__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*) serialize to a sink
/// - _tds__GetCapabilitiesResponse* soap_dup__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse* dst, _tds__GetCapabilitiesResponse *src) returns deep copy of _tds__GetCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCapabilitiesResponse(_tds__GetCapabilitiesResponse*) deep deletes _tds__GetCapabilitiesResponse data members, use only on dst after soap_dup__tds__GetCapabilitiesResponse(NULL, _tds__GetCapabilitiesResponse *dst, _tds__GetCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   Capability information.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/schema":Capabilities.
    struct tt__Capabilities*             Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostname is a complexType.
///
/// @note struct _tds__GetHostname operations:
/// - _tds__GetHostname* soap_new__tds__GetHostname(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetHostname(struct soap*, _tds__GetHostname*) default initialize members
/// - int soap_read__tds__GetHostname(struct soap*, _tds__GetHostname*) deserialize from a source
/// - int soap_write__tds__GetHostname(struct soap*, _tds__GetHostname*) serialize to a sink
/// - _tds__GetHostname* soap_dup__tds__GetHostname(struct soap*, _tds__GetHostname* dst, _tds__GetHostname *src) returns deep copy of _tds__GetHostname src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetHostname(_tds__GetHostname*) deep deletes _tds__GetHostname data members, use only on dst after soap_dup__tds__GetHostname(NULL, _tds__GetHostname *dst, _tds__GetHostname *src) (use soapcpp2 -Ed)
struct _tds__GetHostname
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse is a complexType.
///
/// @note struct _tds__GetHostnameResponse operations:
/// - _tds__GetHostnameResponse* soap_new__tds__GetHostnameResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*) default initialize members
/// - int soap_read__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*) deserialize from a source
/// - int soap_write__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*) serialize to a sink
/// - _tds__GetHostnameResponse* soap_dup__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse* dst, _tds__GetHostnameResponse *src) returns deep copy of _tds__GetHostnameResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetHostnameResponse(_tds__GetHostnameResponse*) deep deletes _tds__GetHostnameResponse data members, use only on dst after soap_dup__tds__GetHostnameResponse(NULL, _tds__GetHostnameResponse *dst, _tds__GetHostnameResponse *src) (use soapcpp2 -Ed)
struct _tds__GetHostnameResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the hostname information.
/// </BLOCKQUOTE></PRE>
///
/// Element "HostnameInformation" of type "http://www.onvif.org/ver10/schema":HostnameInformation.
    struct tt__HostnameInformation*      HostnameInformation            1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostname is a complexType.
///
/// @note struct _tds__SetHostname operations:
/// - _tds__SetHostname* soap_new__tds__SetHostname(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetHostname(struct soap*, _tds__SetHostname*) default initialize members
/// - int soap_read__tds__SetHostname(struct soap*, _tds__SetHostname*) deserialize from a source
/// - int soap_write__tds__SetHostname(struct soap*, _tds__SetHostname*) serialize to a sink
/// - _tds__SetHostname* soap_dup__tds__SetHostname(struct soap*, _tds__SetHostname* dst, _tds__SetHostname *src) returns deep copy of _tds__SetHostname src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetHostname(_tds__SetHostname*) deep deletes _tds__SetHostname data members, use only on dst after soap_dup__tds__SetHostname(NULL, _tds__SetHostname *dst, _tds__SetHostname *src) (use soapcpp2 -Ed)
struct _tds__SetHostname
{
/// <PRE><BLOCKQUOTE>
///   The hostname to set.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:token.
    xsd__token                           Name                           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse is a complexType.
///
/// @note struct _tds__SetHostnameResponse operations:
/// - _tds__SetHostnameResponse* soap_new__tds__SetHostnameResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*) default initialize members
/// - int soap_read__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*) deserialize from a source
/// - int soap_write__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*) serialize to a sink
/// - _tds__SetHostnameResponse* soap_dup__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse* dst, _tds__SetHostnameResponse *src) returns deep copy of _tds__SetHostnameResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetHostnameResponse(_tds__SetHostnameResponse*) deep deletes _tds__SetHostnameResponse data members, use only on dst after soap_dup__tds__SetHostnameResponse(NULL, _tds__SetHostnameResponse *dst, _tds__SetHostnameResponse *src) (use soapcpp2 -Ed)
struct _tds__SetHostnameResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP is a complexType.
///
/// @note struct _tds__SetHostnameFromDHCP operations:
/// - _tds__SetHostnameFromDHCP* soap_new__tds__SetHostnameFromDHCP(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*) default initialize members
/// - int soap_read__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*) deserialize from a source
/// - int soap_write__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*) serialize to a sink
/// - _tds__SetHostnameFromDHCP* soap_dup__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP* dst, _tds__SetHostnameFromDHCP *src) returns deep copy of _tds__SetHostnameFromDHCP src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetHostnameFromDHCP(_tds__SetHostnameFromDHCP*) deep deletes _tds__SetHostnameFromDHCP data members, use only on dst after soap_dup__tds__SetHostnameFromDHCP(NULL, _tds__SetHostnameFromDHCP *dst, _tds__SetHostnameFromDHCP *src) (use soapcpp2 -Ed)
struct _tds__SetHostnameFromDHCP
{
/// <PRE><BLOCKQUOTE>
///   True if the hostname shall be obtained via DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse is a complexType.
///
/// @note struct _tds__SetHostnameFromDHCPResponse operations:
/// - _tds__SetHostnameFromDHCPResponse* soap_new__tds__SetHostnameFromDHCPResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*) default initialize members
/// - int soap_read__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*) deserialize from a source
/// - int soap_write__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*) serialize to a sink
/// - _tds__SetHostnameFromDHCPResponse* soap_dup__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse* dst, _tds__SetHostnameFromDHCPResponse *src) returns deep copy of _tds__SetHostnameFromDHCPResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetHostnameFromDHCPResponse(_tds__SetHostnameFromDHCPResponse*) deep deletes _tds__SetHostnameFromDHCPResponse data members, use only on dst after soap_dup__tds__SetHostnameFromDHCPResponse(NULL, _tds__SetHostnameFromDHCPResponse *dst, _tds__SetHostnameFromDHCPResponse *src) (use soapcpp2 -Ed)
struct _tds__SetHostnameFromDHCPResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
/// </BLOCKQUOTE></PRE>
///
/// Element "RebootNeeded" of type xs:boolean.
    enum xsd__boolean                    RebootNeeded                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNS is a complexType.
///
/// @note struct _tds__GetDNS operations:
/// - _tds__GetDNS* soap_new__tds__GetDNS(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDNS(struct soap*, _tds__GetDNS*) default initialize members
/// - int soap_read__tds__GetDNS(struct soap*, _tds__GetDNS*) deserialize from a source
/// - int soap_write__tds__GetDNS(struct soap*, _tds__GetDNS*) serialize to a sink
/// - _tds__GetDNS* soap_dup__tds__GetDNS(struct soap*, _tds__GetDNS* dst, _tds__GetDNS *src) returns deep copy of _tds__GetDNS src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDNS(_tds__GetDNS*) deep deletes _tds__GetDNS data members, use only on dst after soap_dup__tds__GetDNS(NULL, _tds__GetDNS *dst, _tds__GetDNS *src) (use soapcpp2 -Ed)
struct _tds__GetDNS
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse is a complexType.
///
/// @note struct _tds__GetDNSResponse operations:
/// - _tds__GetDNSResponse* soap_new__tds__GetDNSResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*) default initialize members
/// - int soap_read__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*) deserialize from a source
/// - int soap_write__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*) serialize to a sink
/// - _tds__GetDNSResponse* soap_dup__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse* dst, _tds__GetDNSResponse *src) returns deep copy of _tds__GetDNSResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDNSResponse(_tds__GetDNSResponse*) deep deletes _tds__GetDNSResponse data members, use only on dst after soap_dup__tds__GetDNSResponse(NULL, _tds__GetDNSResponse *dst, _tds__GetDNSResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDNSResponse
{
/// <PRE><BLOCKQUOTE>
///   DNS information.
/// </BLOCKQUOTE></PRE>
///
/// Element "DNSInformation" of type "http://www.onvif.org/ver10/schema":DNSInformation.
    struct tt__DNSInformation*           DNSInformation                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNS is a complexType.
///
/// @note struct _tds__SetDNS operations:
/// - _tds__SetDNS* soap_new__tds__SetDNS(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDNS(struct soap*, _tds__SetDNS*) default initialize members
/// - int soap_read__tds__SetDNS(struct soap*, _tds__SetDNS*) deserialize from a source
/// - int soap_write__tds__SetDNS(struct soap*, _tds__SetDNS*) serialize to a sink
/// - _tds__SetDNS* soap_dup__tds__SetDNS(struct soap*, _tds__SetDNS* dst, _tds__SetDNS *src) returns deep copy of _tds__SetDNS src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDNS(_tds__SetDNS*) deep deletes _tds__SetDNS data members, use only on dst after soap_dup__tds__SetDNS(NULL, _tds__SetDNS *dst, _tds__SetDNS *src) (use soapcpp2 -Ed)
struct _tds__SetDNS
{
/// <PRE><BLOCKQUOTE>
///   Indicate if the DNS address is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS search domain.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__token* is 0..unbounded.
  $ int                                  __sizeSearchDomain             0;
/// Array xsd__token* of size 0..unbounded.
    xsd__token*                          SearchDomain                   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   DNS address(es) set manually.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__IPAddress* is 0..unbounded.
  $ int                                  __sizeDNSManual                0;
/// Array struct tt__IPAddress* of size 0..unbounded.
    struct tt__IPAddress*                DNSManual                      0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse is a complexType.
///
/// @note struct _tds__SetDNSResponse operations:
/// - _tds__SetDNSResponse* soap_new__tds__SetDNSResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*) default initialize members
/// - int soap_read__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*) deserialize from a source
/// - int soap_write__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*) serialize to a sink
/// - _tds__SetDNSResponse* soap_dup__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse* dst, _tds__SetDNSResponse *src) returns deep copy of _tds__SetDNSResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDNSResponse(_tds__SetDNSResponse*) deep deletes _tds__SetDNSResponse data members, use only on dst after soap_dup__tds__SetDNSResponse(NULL, _tds__SetDNSResponse *dst, _tds__SetDNSResponse *src) (use soapcpp2 -Ed)
struct _tds__SetDNSResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTP is a complexType.
///
/// @note struct _tds__GetNTP operations:
/// - _tds__GetNTP* soap_new__tds__GetNTP(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNTP(struct soap*, _tds__GetNTP*) default initialize members
/// - int soap_read__tds__GetNTP(struct soap*, _tds__GetNTP*) deserialize from a source
/// - int soap_write__tds__GetNTP(struct soap*, _tds__GetNTP*) serialize to a sink
/// - _tds__GetNTP* soap_dup__tds__GetNTP(struct soap*, _tds__GetNTP* dst, _tds__GetNTP *src) returns deep copy of _tds__GetNTP src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNTP(_tds__GetNTP*) deep deletes _tds__GetNTP data members, use only on dst after soap_dup__tds__GetNTP(NULL, _tds__GetNTP *dst, _tds__GetNTP *src) (use soapcpp2 -Ed)
struct _tds__GetNTP
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse is a complexType.
///
/// @note struct _tds__GetNTPResponse operations:
/// - _tds__GetNTPResponse* soap_new__tds__GetNTPResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*) default initialize members
/// - int soap_read__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*) deserialize from a source
/// - int soap_write__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*) serialize to a sink
/// - _tds__GetNTPResponse* soap_dup__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse* dst, _tds__GetNTPResponse *src) returns deep copy of _tds__GetNTPResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNTPResponse(_tds__GetNTPResponse*) deep deletes _tds__GetNTPResponse data members, use only on dst after soap_dup__tds__GetNTPResponse(NULL, _tds__GetNTPResponse *dst, _tds__GetNTPResponse *src) (use soapcpp2 -Ed)
struct _tds__GetNTPResponse
{
/// <PRE><BLOCKQUOTE>
///   NTP information.
/// </BLOCKQUOTE></PRE>
///
/// Element "NTPInformation" of type "http://www.onvif.org/ver10/schema":NTPInformation.
    struct tt__NTPInformation*           NTPInformation                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTP is a complexType.
///
/// @note struct _tds__SetNTP operations:
/// - _tds__SetNTP* soap_new__tds__SetNTP(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNTP(struct soap*, _tds__SetNTP*) default initialize members
/// - int soap_read__tds__SetNTP(struct soap*, _tds__SetNTP*) deserialize from a source
/// - int soap_write__tds__SetNTP(struct soap*, _tds__SetNTP*) serialize to a sink
/// - _tds__SetNTP* soap_dup__tds__SetNTP(struct soap*, _tds__SetNTP* dst, _tds__SetNTP *src) returns deep copy of _tds__SetNTP src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNTP(_tds__SetNTP*) deep deletes _tds__SetNTP data members, use only on dst after soap_dup__tds__SetNTP(NULL, _tds__SetNTP *dst, _tds__SetNTP *src) (use soapcpp2 -Ed)
struct _tds__SetNTP
{
/// <PRE><BLOCKQUOTE>
///   Indicate if NTP address information is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Manual NTP settings.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeNTPManual                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              NTPManual                      0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse is a complexType.
///
/// @note struct _tds__SetNTPResponse operations:
/// - _tds__SetNTPResponse* soap_new__tds__SetNTPResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*) default initialize members
/// - int soap_read__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*) deserialize from a source
/// - int soap_write__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*) serialize to a sink
/// - _tds__SetNTPResponse* soap_dup__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse* dst, _tds__SetNTPResponse *src) returns deep copy of _tds__SetNTPResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNTPResponse(_tds__SetNTPResponse*) deep deletes _tds__SetNTPResponse data members, use only on dst after soap_dup__tds__SetNTPResponse(NULL, _tds__SetNTPResponse *dst, _tds__SetNTPResponse *src) (use soapcpp2 -Ed)
struct _tds__SetNTPResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS is a complexType.
///
/// @note struct _tds__GetDynamicDNS operations:
/// - _tds__GetDynamicDNS* soap_new__tds__GetDynamicDNS(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*) default initialize members
/// - int soap_read__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*) deserialize from a source
/// - int soap_write__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*) serialize to a sink
/// - _tds__GetDynamicDNS* soap_dup__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS* dst, _tds__GetDynamicDNS *src) returns deep copy of _tds__GetDynamicDNS src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDynamicDNS(_tds__GetDynamicDNS*) deep deletes _tds__GetDynamicDNS data members, use only on dst after soap_dup__tds__GetDynamicDNS(NULL, _tds__GetDynamicDNS *dst, _tds__GetDynamicDNS *src) (use soapcpp2 -Ed)
struct _tds__GetDynamicDNS
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse is a complexType.
///
/// @note struct _tds__GetDynamicDNSResponse operations:
/// - _tds__GetDynamicDNSResponse* soap_new__tds__GetDynamicDNSResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*) default initialize members
/// - int soap_read__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*) deserialize from a source
/// - int soap_write__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*) serialize to a sink
/// - _tds__GetDynamicDNSResponse* soap_dup__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse* dst, _tds__GetDynamicDNSResponse *src) returns deep copy of _tds__GetDynamicDNSResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDynamicDNSResponse(_tds__GetDynamicDNSResponse*) deep deletes _tds__GetDynamicDNSResponse data members, use only on dst after soap_dup__tds__GetDynamicDNSResponse(NULL, _tds__GetDynamicDNSResponse *dst, _tds__GetDynamicDNSResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDynamicDNSResponse
{
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS information.
/// </BLOCKQUOTE></PRE>
///
/// Element "DynamicDNSInformation" of type "http://www.onvif.org/ver10/schema":DynamicDNSInformation.
    struct tt__DynamicDNSInformation*    DynamicDNSInformation          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS is a complexType.
///
/// @note struct _tds__SetDynamicDNS operations:
/// - _tds__SetDynamicDNS* soap_new__tds__SetDynamicDNS(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*) default initialize members
/// - int soap_read__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*) deserialize from a source
/// - int soap_write__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*) serialize to a sink
/// - _tds__SetDynamicDNS* soap_dup__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS* dst, _tds__SetDynamicDNS *src) returns deep copy of _tds__SetDynamicDNS src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDynamicDNS(_tds__SetDynamicDNS*) deep deletes _tds__SetDynamicDNS data members, use only on dst after soap_dup__tds__SetDynamicDNS(NULL, _tds__SetDynamicDNS *dst, _tds__SetDynamicDNS *src) (use soapcpp2 -Ed)
struct _tds__SetDynamicDNS
{
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS record time to live.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:duration.
    xsd__duration                        TTL                            0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse is a complexType.
///
/// @note struct _tds__SetDynamicDNSResponse operations:
/// - _tds__SetDynamicDNSResponse* soap_new__tds__SetDynamicDNSResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*) default initialize members
/// - int soap_read__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*) deserialize from a source
/// - int soap_write__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*) serialize to a sink
/// - _tds__SetDynamicDNSResponse* soap_dup__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse* dst, _tds__SetDynamicDNSResponse *src) returns deep copy of _tds__SetDynamicDNSResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDynamicDNSResponse(_tds__SetDynamicDNSResponse*) deep deletes _tds__SetDynamicDNSResponse data members, use only on dst after soap_dup__tds__SetDynamicDNSResponse(NULL, _tds__SetDynamicDNSResponse *dst, _tds__SetDynamicDNSResponse *src) (use soapcpp2 -Ed)
struct _tds__SetDynamicDNSResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces is a complexType.
///
/// @note struct _tds__GetNetworkInterfaces operations:
/// - _tds__GetNetworkInterfaces* soap_new__tds__GetNetworkInterfaces(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*) default initialize members
/// - int soap_read__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*) deserialize from a source
/// - int soap_write__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*) serialize to a sink
/// - _tds__GetNetworkInterfaces* soap_dup__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces* dst, _tds__GetNetworkInterfaces *src) returns deep copy of _tds__GetNetworkInterfaces src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNetworkInterfaces(_tds__GetNetworkInterfaces*) deep deletes _tds__GetNetworkInterfaces data members, use only on dst after soap_dup__tds__GetNetworkInterfaces(NULL, _tds__GetNetworkInterfaces *dst, _tds__GetNetworkInterfaces *src) (use soapcpp2 -Ed)
struct _tds__GetNetworkInterfaces
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse is a complexType.
///
/// @note struct _tds__GetNetworkInterfacesResponse operations:
/// - _tds__GetNetworkInterfacesResponse* soap_new__tds__GetNetworkInterfacesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*) default initialize members
/// - int soap_read__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*) deserialize from a source
/// - int soap_write__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*) serialize to a sink
/// - _tds__GetNetworkInterfacesResponse* soap_dup__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse* dst, _tds__GetNetworkInterfacesResponse *src) returns deep copy of _tds__GetNetworkInterfacesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNetworkInterfacesResponse(_tds__GetNetworkInterfacesResponse*) deep deletes _tds__GetNetworkInterfacesResponse data members, use only on dst after soap_dup__tds__GetNetworkInterfacesResponse(NULL, _tds__GetNetworkInterfacesResponse *dst, _tds__GetNetworkInterfacesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetNetworkInterfacesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of network interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__NetworkInterface* is 1..unbounded.
  $ int                                  __sizeNetworkInterfaces        1;
/// Array struct tt__NetworkInterface* of size 1..unbounded.
    struct tt__NetworkInterface*         NetworkInterfaces              1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces is a complexType.
///
/// @note struct _tds__SetNetworkInterfaces operations:
/// - _tds__SetNetworkInterfaces* soap_new__tds__SetNetworkInterfaces(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*) default initialize members
/// - int soap_read__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*) deserialize from a source
/// - int soap_write__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*) serialize to a sink
/// - _tds__SetNetworkInterfaces* soap_dup__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces* dst, _tds__SetNetworkInterfaces *src) returns deep copy of _tds__SetNetworkInterfaces src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNetworkInterfaces(_tds__SetNetworkInterfaces*) deep deletes _tds__SetNetworkInterfaces data members, use only on dst after soap_dup__tds__SetNetworkInterfaces(NULL, _tds__SetNetworkInterfaces *dst, _tds__SetNetworkInterfaces *src) (use soapcpp2 -Ed)
struct _tds__SetNetworkInterfaces
{
/// <PRE><BLOCKQUOTE>
///   Symbolic network interface name.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface name.
/// </BLOCKQUOTE></PRE>
///
/// Element "NetworkInterface" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration.
    struct tt__NetworkInterfaceSetConfiguration*  NetworkInterface               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse is a complexType.
///
/// @note struct _tds__SetNetworkInterfacesResponse operations:
/// - _tds__SetNetworkInterfacesResponse* soap_new__tds__SetNetworkInterfacesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*) default initialize members
/// - int soap_read__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*) deserialize from a source
/// - int soap_write__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*) serialize to a sink
/// - _tds__SetNetworkInterfacesResponse* soap_dup__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse* dst, _tds__SetNetworkInterfacesResponse *src) returns deep copy of _tds__SetNetworkInterfacesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNetworkInterfacesResponse(_tds__SetNetworkInterfacesResponse*) deep deletes _tds__SetNetworkInterfacesResponse data members, use only on dst after soap_dup__tds__SetNetworkInterfacesResponse(NULL, _tds__SetNetworkInterfacesResponse *dst, _tds__SetNetworkInterfacesResponse *src) (use soapcpp2 -Ed)
struct _tds__SetNetworkInterfacesResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
///   If a device responds with RebootNeeded set to false, the device can be reached
///   via the new IP address without further action. A client should be aware that a device
///   may not be responsive for a short period of time until it signals availability at
///   the new address via the discovery Hello messages.
///   If a device responds with RebootNeeded set to true, it will be further available under
///   its previous IP address. The settings will only be activated when the device is
///   rebooted via the SystemReboot command.
/// </BLOCKQUOTE></PRE>
///
/// Element "RebootNeeded" of type xs:boolean.
    enum xsd__boolean                    RebootNeeded                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols is a complexType.
///
/// @note struct _tds__GetNetworkProtocols operations:
/// - _tds__GetNetworkProtocols* soap_new__tds__GetNetworkProtocols(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*) default initialize members
/// - int soap_read__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*) deserialize from a source
/// - int soap_write__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*) serialize to a sink
/// - _tds__GetNetworkProtocols* soap_dup__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols* dst, _tds__GetNetworkProtocols *src) returns deep copy of _tds__GetNetworkProtocols src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNetworkProtocols(_tds__GetNetworkProtocols*) deep deletes _tds__GetNetworkProtocols data members, use only on dst after soap_dup__tds__GetNetworkProtocols(NULL, _tds__GetNetworkProtocols *dst, _tds__GetNetworkProtocols *src) (use soapcpp2 -Ed)
struct _tds__GetNetworkProtocols
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse is a complexType.
///
/// @note struct _tds__GetNetworkProtocolsResponse operations:
/// - _tds__GetNetworkProtocolsResponse* soap_new__tds__GetNetworkProtocolsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*) default initialize members
/// - int soap_read__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*) deserialize from a source
/// - int soap_write__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*) serialize to a sink
/// - _tds__GetNetworkProtocolsResponse* soap_dup__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse* dst, _tds__GetNetworkProtocolsResponse *src) returns deep copy of _tds__GetNetworkProtocolsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNetworkProtocolsResponse(_tds__GetNetworkProtocolsResponse*) deep deletes _tds__GetNetworkProtocolsResponse data members, use only on dst after soap_dup__tds__GetNetworkProtocolsResponse(NULL, _tds__GetNetworkProtocolsResponse *dst, _tds__GetNetworkProtocolsResponse *src) (use soapcpp2 -Ed)
struct _tds__GetNetworkProtocolsResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains an array of defined protocols supported by the device. There are three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be retrieved for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__NetworkProtocol* is 0..unbounded.
  $ int                                  __sizeNetworkProtocols         0;
/// Array struct tt__NetworkProtocol* of size 0..unbounded.
    struct tt__NetworkProtocol*          NetworkProtocols               0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols is a complexType.
///
/// @note struct _tds__SetNetworkProtocols operations:
/// - _tds__SetNetworkProtocols* soap_new__tds__SetNetworkProtocols(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*) default initialize members
/// - int soap_read__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*) deserialize from a source
/// - int soap_write__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*) serialize to a sink
/// - _tds__SetNetworkProtocols* soap_dup__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols* dst, _tds__SetNetworkProtocols *src) returns deep copy of _tds__SetNetworkProtocols src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNetworkProtocols(_tds__SetNetworkProtocols*) deep deletes _tds__SetNetworkProtocols data members, use only on dst after soap_dup__tds__SetNetworkProtocols(NULL, _tds__SetNetworkProtocols *dst, _tds__SetNetworkProtocols *src) (use soapcpp2 -Ed)
struct _tds__SetNetworkProtocols
{
/// <PRE><BLOCKQUOTE>
///   Configures one or more defined network protocols supported by the device. There are currently three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be set for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__NetworkProtocol* is 1..unbounded.
  $ int                                  __sizeNetworkProtocols         1;
/// Array struct tt__NetworkProtocol* of size 1..unbounded.
    struct tt__NetworkProtocol*          NetworkProtocols               1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse is a complexType.
///
/// @note struct _tds__SetNetworkProtocolsResponse operations:
/// - _tds__SetNetworkProtocolsResponse* soap_new__tds__SetNetworkProtocolsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*) default initialize members
/// - int soap_read__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*) deserialize from a source
/// - int soap_write__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*) serialize to a sink
/// - _tds__SetNetworkProtocolsResponse* soap_dup__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse* dst, _tds__SetNetworkProtocolsResponse *src) returns deep copy of _tds__SetNetworkProtocolsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNetworkProtocolsResponse(_tds__SetNetworkProtocolsResponse*) deep deletes _tds__SetNetworkProtocolsResponse data members, use only on dst after soap_dup__tds__SetNetworkProtocolsResponse(NULL, _tds__SetNetworkProtocolsResponse *dst, _tds__SetNetworkProtocolsResponse *src) (use soapcpp2 -Ed)
struct _tds__SetNetworkProtocolsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway is a complexType.
///
/// @note struct _tds__GetNetworkDefaultGateway operations:
/// - _tds__GetNetworkDefaultGateway* soap_new__tds__GetNetworkDefaultGateway(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*) default initialize members
/// - int soap_read__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*) deserialize from a source
/// - int soap_write__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*) serialize to a sink
/// - _tds__GetNetworkDefaultGateway* soap_dup__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway* dst, _tds__GetNetworkDefaultGateway *src) returns deep copy of _tds__GetNetworkDefaultGateway src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNetworkDefaultGateway(_tds__GetNetworkDefaultGateway*) deep deletes _tds__GetNetworkDefaultGateway data members, use only on dst after soap_dup__tds__GetNetworkDefaultGateway(NULL, _tds__GetNetworkDefaultGateway *dst, _tds__GetNetworkDefaultGateway *src) (use soapcpp2 -Ed)
struct _tds__GetNetworkDefaultGateway
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse is a complexType.
///
/// @note struct _tds__GetNetworkDefaultGatewayResponse operations:
/// - _tds__GetNetworkDefaultGatewayResponse* soap_new__tds__GetNetworkDefaultGatewayResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*) default initialize members
/// - int soap_read__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*) deserialize from a source
/// - int soap_write__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*) serialize to a sink
/// - _tds__GetNetworkDefaultGatewayResponse* soap_dup__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse* dst, _tds__GetNetworkDefaultGatewayResponse *src) returns deep copy of _tds__GetNetworkDefaultGatewayResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetNetworkDefaultGatewayResponse(_tds__GetNetworkDefaultGatewayResponse*) deep deletes _tds__GetNetworkDefaultGatewayResponse data members, use only on dst after soap_dup__tds__GetNetworkDefaultGatewayResponse(NULL, _tds__GetNetworkDefaultGatewayResponse *dst, _tds__GetNetworkDefaultGatewayResponse *src) (use soapcpp2 -Ed)
struct _tds__GetNetworkDefaultGatewayResponse
{
/// <PRE><BLOCKQUOTE>
///   Gets the default IPv4 and IPv6 gateway settings from the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "NetworkGateway" of type "http://www.onvif.org/ver10/schema":NetworkGateway.
    struct tt__NetworkGateway*           NetworkGateway                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway is a complexType.
///
/// @note struct _tds__SetNetworkDefaultGateway operations:
/// - _tds__SetNetworkDefaultGateway* soap_new__tds__SetNetworkDefaultGateway(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*) default initialize members
/// - int soap_read__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*) deserialize from a source
/// - int soap_write__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*) serialize to a sink
/// - _tds__SetNetworkDefaultGateway* soap_dup__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway* dst, _tds__SetNetworkDefaultGateway *src) returns deep copy of _tds__SetNetworkDefaultGateway src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNetworkDefaultGateway(_tds__SetNetworkDefaultGateway*) deep deletes _tds__SetNetworkDefaultGateway data members, use only on dst after soap_dup__tds__SetNetworkDefaultGateway(NULL, _tds__SetNetworkDefaultGateway *dst, _tds__SetNetworkDefaultGateway *src) (use soapcpp2 -Ed)
struct _tds__SetNetworkDefaultGateway
{
/// <PRE><BLOCKQUOTE>
///   Sets IPv4 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv4Address* is 0..unbounded.
  $ int                                  __sizeIPv4Address              0;
/// Array tt__IPv4Address* of size 0..unbounded.
    tt__IPv4Address*                     IPv4Address                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Sets IPv6 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv6Address* is 0..unbounded.
  $ int                                  __sizeIPv6Address              0;
/// Array tt__IPv6Address* of size 0..unbounded.
    tt__IPv6Address*                     IPv6Address                    0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse is a complexType.
///
/// @note struct _tds__SetNetworkDefaultGatewayResponse operations:
/// - _tds__SetNetworkDefaultGatewayResponse* soap_new__tds__SetNetworkDefaultGatewayResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*) default initialize members
/// - int soap_read__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*) deserialize from a source
/// - int soap_write__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*) serialize to a sink
/// - _tds__SetNetworkDefaultGatewayResponse* soap_dup__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse* dst, _tds__SetNetworkDefaultGatewayResponse *src) returns deep copy of _tds__SetNetworkDefaultGatewayResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetNetworkDefaultGatewayResponse(_tds__SetNetworkDefaultGatewayResponse*) deep deletes _tds__SetNetworkDefaultGatewayResponse data members, use only on dst after soap_dup__tds__SetNetworkDefaultGatewayResponse(NULL, _tds__SetNetworkDefaultGatewayResponse *dst, _tds__SetNetworkDefaultGatewayResponse *src) (use soapcpp2 -Ed)
struct _tds__SetNetworkDefaultGatewayResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration is a complexType.
///
/// @note struct _tds__GetZeroConfiguration operations:
/// - _tds__GetZeroConfiguration* soap_new__tds__GetZeroConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*) default initialize members
/// - int soap_read__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*) deserialize from a source
/// - int soap_write__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*) serialize to a sink
/// - _tds__GetZeroConfiguration* soap_dup__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration* dst, _tds__GetZeroConfiguration *src) returns deep copy of _tds__GetZeroConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetZeroConfiguration(_tds__GetZeroConfiguration*) deep deletes _tds__GetZeroConfiguration data members, use only on dst after soap_dup__tds__GetZeroConfiguration(NULL, _tds__GetZeroConfiguration *dst, _tds__GetZeroConfiguration *src) (use soapcpp2 -Ed)
struct _tds__GetZeroConfiguration
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse is a complexType.
///
/// @note struct _tds__GetZeroConfigurationResponse operations:
/// - _tds__GetZeroConfigurationResponse* soap_new__tds__GetZeroConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*) default initialize members
/// - int soap_read__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*) serialize to a sink
/// - _tds__GetZeroConfigurationResponse* soap_dup__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse* dst, _tds__GetZeroConfigurationResponse *src) returns deep copy of _tds__GetZeroConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetZeroConfigurationResponse(_tds__GetZeroConfigurationResponse*) deep deletes _tds__GetZeroConfigurationResponse data members, use only on dst after soap_dup__tds__GetZeroConfigurationResponse(NULL, _tds__GetZeroConfigurationResponse *dst, _tds__GetZeroConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetZeroConfigurationResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the zero-configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZeroConfiguration" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration.
    struct tt__NetworkZeroConfiguration*  ZeroConfiguration              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration is a complexType.
///
/// @note struct _tds__SetZeroConfiguration operations:
/// - _tds__SetZeroConfiguration* soap_new__tds__SetZeroConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*) default initialize members
/// - int soap_read__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*) deserialize from a source
/// - int soap_write__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*) serialize to a sink
/// - _tds__SetZeroConfiguration* soap_dup__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration* dst, _tds__SetZeroConfiguration *src) returns deep copy of _tds__SetZeroConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetZeroConfiguration(_tds__SetZeroConfiguration*) deep deletes _tds__SetZeroConfiguration data members, use only on dst after soap_dup__tds__SetZeroConfiguration(NULL, _tds__SetZeroConfiguration *dst, _tds__SetZeroConfiguration *src) (use soapcpp2 -Ed)
struct _tds__SetZeroConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical interface.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Specifies if the zero-configuration should be enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse is a complexType.
///
/// @note struct _tds__SetZeroConfigurationResponse operations:
/// - _tds__SetZeroConfigurationResponse* soap_new__tds__SetZeroConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*) default initialize members
/// - int soap_read__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*) serialize to a sink
/// - _tds__SetZeroConfigurationResponse* soap_dup__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse* dst, _tds__SetZeroConfigurationResponse *src) returns deep copy of _tds__SetZeroConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetZeroConfigurationResponse(_tds__SetZeroConfigurationResponse*) deep deletes _tds__SetZeroConfigurationResponse data members, use only on dst after soap_dup__tds__SetZeroConfigurationResponse(NULL, _tds__SetZeroConfigurationResponse *dst, _tds__SetZeroConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__SetZeroConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter is a complexType.
///
/// @note struct _tds__GetIPAddressFilter operations:
/// - _tds__GetIPAddressFilter* soap_new__tds__GetIPAddressFilter(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*) default initialize members
/// - int soap_read__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*) deserialize from a source
/// - int soap_write__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*) serialize to a sink
/// - _tds__GetIPAddressFilter* soap_dup__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter* dst, _tds__GetIPAddressFilter *src) returns deep copy of _tds__GetIPAddressFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetIPAddressFilter(_tds__GetIPAddressFilter*) deep deletes _tds__GetIPAddressFilter data members, use only on dst after soap_dup__tds__GetIPAddressFilter(NULL, _tds__GetIPAddressFilter *dst, _tds__GetIPAddressFilter *src) (use soapcpp2 -Ed)
struct _tds__GetIPAddressFilter
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse is a complexType.
///
/// @note struct _tds__GetIPAddressFilterResponse operations:
/// - _tds__GetIPAddressFilterResponse* soap_new__tds__GetIPAddressFilterResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*) default initialize members
/// - int soap_read__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*) deserialize from a source
/// - int soap_write__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*) serialize to a sink
/// - _tds__GetIPAddressFilterResponse* soap_dup__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse* dst, _tds__GetIPAddressFilterResponse *src) returns deep copy of _tds__GetIPAddressFilterResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetIPAddressFilterResponse(_tds__GetIPAddressFilterResponse*) deep deletes _tds__GetIPAddressFilterResponse data members, use only on dst after soap_dup__tds__GetIPAddressFilterResponse(NULL, _tds__GetIPAddressFilterResponse *dst, _tds__GetIPAddressFilterResponse *src) (use soapcpp2 -Ed)
struct _tds__GetIPAddressFilterResponse
{
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter is a complexType.
///
/// @note struct _tds__SetIPAddressFilter operations:
/// - _tds__SetIPAddressFilter* soap_new__tds__SetIPAddressFilter(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*) default initialize members
/// - int soap_read__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*) deserialize from a source
/// - int soap_write__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*) serialize to a sink
/// - _tds__SetIPAddressFilter* soap_dup__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter* dst, _tds__SetIPAddressFilter *src) returns deep copy of _tds__SetIPAddressFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetIPAddressFilter(_tds__SetIPAddressFilter*) deep deletes _tds__SetIPAddressFilter data members, use only on dst after soap_dup__tds__SetIPAddressFilter(NULL, _tds__SetIPAddressFilter *dst, _tds__SetIPAddressFilter *src) (use soapcpp2 -Ed)
struct _tds__SetIPAddressFilter
{
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse is a complexType.
///
/// @note struct _tds__SetIPAddressFilterResponse operations:
/// - _tds__SetIPAddressFilterResponse* soap_new__tds__SetIPAddressFilterResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*) default initialize members
/// - int soap_read__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*) deserialize from a source
/// - int soap_write__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*) serialize to a sink
/// - _tds__SetIPAddressFilterResponse* soap_dup__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse* dst, _tds__SetIPAddressFilterResponse *src) returns deep copy of _tds__SetIPAddressFilterResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetIPAddressFilterResponse(_tds__SetIPAddressFilterResponse*) deep deletes _tds__SetIPAddressFilterResponse data members, use only on dst after soap_dup__tds__SetIPAddressFilterResponse(NULL, _tds__SetIPAddressFilterResponse *dst, _tds__SetIPAddressFilterResponse *src) (use soapcpp2 -Ed)
struct _tds__SetIPAddressFilterResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter is a complexType.
///
/// @note struct _tds__AddIPAddressFilter operations:
/// - _tds__AddIPAddressFilter* soap_new__tds__AddIPAddressFilter(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*) default initialize members
/// - int soap_read__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*) deserialize from a source
/// - int soap_write__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*) serialize to a sink
/// - _tds__AddIPAddressFilter* soap_dup__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter* dst, _tds__AddIPAddressFilter *src) returns deep copy of _tds__AddIPAddressFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__AddIPAddressFilter(_tds__AddIPAddressFilter*) deep deletes _tds__AddIPAddressFilter data members, use only on dst after soap_dup__tds__AddIPAddressFilter(NULL, _tds__AddIPAddressFilter *dst, _tds__AddIPAddressFilter *src) (use soapcpp2 -Ed)
struct _tds__AddIPAddressFilter
{
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse is a complexType.
///
/// @note struct _tds__AddIPAddressFilterResponse operations:
/// - _tds__AddIPAddressFilterResponse* soap_new__tds__AddIPAddressFilterResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*) default initialize members
/// - int soap_read__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*) deserialize from a source
/// - int soap_write__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*) serialize to a sink
/// - _tds__AddIPAddressFilterResponse* soap_dup__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse* dst, _tds__AddIPAddressFilterResponse *src) returns deep copy of _tds__AddIPAddressFilterResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__AddIPAddressFilterResponse(_tds__AddIPAddressFilterResponse*) deep deletes _tds__AddIPAddressFilterResponse data members, use only on dst after soap_dup__tds__AddIPAddressFilterResponse(NULL, _tds__AddIPAddressFilterResponse *dst, _tds__AddIPAddressFilterResponse *src) (use soapcpp2 -Ed)
struct _tds__AddIPAddressFilterResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter is a complexType.
///
/// @note struct _tds__RemoveIPAddressFilter operations:
/// - _tds__RemoveIPAddressFilter* soap_new__tds__RemoveIPAddressFilter(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*) default initialize members
/// - int soap_read__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*) deserialize from a source
/// - int soap_write__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*) serialize to a sink
/// - _tds__RemoveIPAddressFilter* soap_dup__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter* dst, _tds__RemoveIPAddressFilter *src) returns deep copy of _tds__RemoveIPAddressFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__RemoveIPAddressFilter(_tds__RemoveIPAddressFilter*) deep deletes _tds__RemoveIPAddressFilter data members, use only on dst after soap_dup__tds__RemoveIPAddressFilter(NULL, _tds__RemoveIPAddressFilter *dst, _tds__RemoveIPAddressFilter *src) (use soapcpp2 -Ed)
struct _tds__RemoveIPAddressFilter
{
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    struct tt__IPAddressFilter*          IPAddressFilter                1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse is a complexType.
///
/// @note struct _tds__RemoveIPAddressFilterResponse operations:
/// - _tds__RemoveIPAddressFilterResponse* soap_new__tds__RemoveIPAddressFilterResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*) default initialize members
/// - int soap_read__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*) deserialize from a source
/// - int soap_write__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*) serialize to a sink
/// - _tds__RemoveIPAddressFilterResponse* soap_dup__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse* dst, _tds__RemoveIPAddressFilterResponse *src) returns deep copy of _tds__RemoveIPAddressFilterResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__RemoveIPAddressFilterResponse(_tds__RemoveIPAddressFilterResponse*) deep deletes _tds__RemoveIPAddressFilterResponse data members, use only on dst after soap_dup__tds__RemoveIPAddressFilterResponse(NULL, _tds__RemoveIPAddressFilterResponse *dst, _tds__RemoveIPAddressFilterResponse *src) (use soapcpp2 -Ed)
struct _tds__RemoveIPAddressFilterResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy is a complexType.
///
/// @note struct _tds__GetAccessPolicy operations:
/// - _tds__GetAccessPolicy* soap_new__tds__GetAccessPolicy(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*) default initialize members
/// - int soap_read__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*) deserialize from a source
/// - int soap_write__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*) serialize to a sink
/// - _tds__GetAccessPolicy* soap_dup__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy* dst, _tds__GetAccessPolicy *src) returns deep copy of _tds__GetAccessPolicy src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetAccessPolicy(_tds__GetAccessPolicy*) deep deletes _tds__GetAccessPolicy data members, use only on dst after soap_dup__tds__GetAccessPolicy(NULL, _tds__GetAccessPolicy *dst, _tds__GetAccessPolicy *src) (use soapcpp2 -Ed)
struct _tds__GetAccessPolicy
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse is a complexType.
///
/// @note struct _tds__GetAccessPolicyResponse operations:
/// - _tds__GetAccessPolicyResponse* soap_new__tds__GetAccessPolicyResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*) default initialize members
/// - int soap_read__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*) deserialize from a source
/// - int soap_write__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*) serialize to a sink
/// - _tds__GetAccessPolicyResponse* soap_dup__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse* dst, _tds__GetAccessPolicyResponse *src) returns deep copy of _tds__GetAccessPolicyResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetAccessPolicyResponse(_tds__GetAccessPolicyResponse*) deep deletes _tds__GetAccessPolicyResponse data members, use only on dst after soap_dup__tds__GetAccessPolicyResponse(NULL, _tds__GetAccessPolicyResponse *dst, _tds__GetAccessPolicyResponse *src) (use soapcpp2 -Ed)
struct _tds__GetAccessPolicyResponse
{
/// Element "PolicyFile" of type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               PolicyFile                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy is a complexType.
///
/// @note struct _tds__SetAccessPolicy operations:
/// - _tds__SetAccessPolicy* soap_new__tds__SetAccessPolicy(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*) default initialize members
/// - int soap_read__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*) deserialize from a source
/// - int soap_write__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*) serialize to a sink
/// - _tds__SetAccessPolicy* soap_dup__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy* dst, _tds__SetAccessPolicy *src) returns deep copy of _tds__SetAccessPolicy src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetAccessPolicy(_tds__SetAccessPolicy*) deep deletes _tds__SetAccessPolicy data members, use only on dst after soap_dup__tds__SetAccessPolicy(NULL, _tds__SetAccessPolicy *dst, _tds__SetAccessPolicy *src) (use soapcpp2 -Ed)
struct _tds__SetAccessPolicy
{
/// Element "PolicyFile" of type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               PolicyFile                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse is a complexType.
///
/// @note struct _tds__SetAccessPolicyResponse operations:
/// - _tds__SetAccessPolicyResponse* soap_new__tds__SetAccessPolicyResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*) default initialize members
/// - int soap_read__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*) deserialize from a source
/// - int soap_write__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*) serialize to a sink
/// - _tds__SetAccessPolicyResponse* soap_dup__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse* dst, _tds__SetAccessPolicyResponse *src) returns deep copy of _tds__SetAccessPolicyResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetAccessPolicyResponse(_tds__SetAccessPolicyResponse*) deep deletes _tds__SetAccessPolicyResponse data members, use only on dst after soap_dup__tds__SetAccessPolicyResponse(NULL, _tds__SetAccessPolicyResponse *dst, _tds__SetAccessPolicyResponse *src) (use soapcpp2 -Ed)
struct _tds__SetAccessPolicyResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificate
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificate is a complexType.
///
/// @note struct _tds__CreateCertificate operations:
/// - _tds__CreateCertificate* soap_new__tds__CreateCertificate(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*) default initialize members
/// - int soap_read__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*) deserialize from a source
/// - int soap_write__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*) serialize to a sink
/// - _tds__CreateCertificate* soap_dup__tds__CreateCertificate(struct soap*, _tds__CreateCertificate* dst, _tds__CreateCertificate *src) returns deep copy of _tds__CreateCertificate src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateCertificate(_tds__CreateCertificate*) deep deletes _tds__CreateCertificate data members, use only on dst after soap_dup__tds__CreateCertificate(NULL, _tds__CreateCertificate *dst, _tds__CreateCertificate *src) (use soapcpp2 -Ed)
struct _tds__CreateCertificate
{
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Identification of the entity associated with the public-key.
/// </BLOCKQUOTE></PRE>
///
/// Element "Subject" of type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate validity start date.
/// </BLOCKQUOTE></PRE>
///
/// Element "ValidNotBefore" of type xs:dateTime.
    time_t*                              ValidNotBefore                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate expiry start date.
/// </BLOCKQUOTE></PRE>
///
/// Element "ValidNotAfter" of type xs:dateTime.
    time_t*                              ValidNotAfter                  0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse is a complexType.
///
/// @note struct _tds__CreateCertificateResponse operations:
/// - _tds__CreateCertificateResponse* soap_new__tds__CreateCertificateResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*) default initialize members
/// - int soap_read__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*) deserialize from a source
/// - int soap_write__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*) serialize to a sink
/// - _tds__CreateCertificateResponse* soap_dup__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse* dst, _tds__CreateCertificateResponse *src) returns deep copy of _tds__CreateCertificateResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateCertificateResponse(_tds__CreateCertificateResponse*) deep deletes _tds__CreateCertificateResponse data members, use only on dst after soap_dup__tds__CreateCertificateResponse(NULL, _tds__CreateCertificateResponse *dst, _tds__CreateCertificateResponse *src) (use soapcpp2 -Ed)
struct _tds__CreateCertificateResponse
{
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "NvtCertificate" of type "http://www.onvif.org/ver10/schema":Certificate.
    struct tt__Certificate*              NvtCertificate                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificates is a complexType.
///
/// @note struct _tds__GetCertificates operations:
/// - _tds__GetCertificates* soap_new__tds__GetCertificates(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCertificates(struct soap*, _tds__GetCertificates*) default initialize members
/// - int soap_read__tds__GetCertificates(struct soap*, _tds__GetCertificates*) deserialize from a source
/// - int soap_write__tds__GetCertificates(struct soap*, _tds__GetCertificates*) serialize to a sink
/// - _tds__GetCertificates* soap_dup__tds__GetCertificates(struct soap*, _tds__GetCertificates* dst, _tds__GetCertificates *src) returns deep copy of _tds__GetCertificates src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCertificates(_tds__GetCertificates*) deep deletes _tds__GetCertificates data members, use only on dst after soap_dup__tds__GetCertificates(NULL, _tds__GetCertificates *dst, _tds__GetCertificates *src) (use soapcpp2 -Ed)
struct _tds__GetCertificates
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse is a complexType.
///
/// @note struct _tds__GetCertificatesResponse operations:
/// - _tds__GetCertificatesResponse* soap_new__tds__GetCertificatesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*) default initialize members
/// - int soap_read__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*) deserialize from a source
/// - int soap_write__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*) serialize to a sink
/// - _tds__GetCertificatesResponse* soap_dup__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse* dst, _tds__GetCertificatesResponse *src) returns deep copy of _tds__GetCertificatesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCertificatesResponse(_tds__GetCertificatesResponse*) deep deletes _tds__GetCertificatesResponse data members, use only on dst after soap_dup__tds__GetCertificatesResponse(NULL, _tds__GetCertificatesResponse *dst, _tds__GetCertificatesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetCertificatesResponse
{
/// <PRE><BLOCKQUOTE>
///   Id and base64 encoded DER representation of all available certificates.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Certificate* is 0..unbounded.
  $ int                                  __sizeNvtCertificate           0;
/// Array struct tt__Certificate* of size 0..unbounded.
    struct tt__Certificate*              NvtCertificate                 0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus is a complexType.
///
/// @note struct _tds__GetCertificatesStatus operations:
/// - _tds__GetCertificatesStatus* soap_new__tds__GetCertificatesStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*) default initialize members
/// - int soap_read__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*) deserialize from a source
/// - int soap_write__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*) serialize to a sink
/// - _tds__GetCertificatesStatus* soap_dup__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus* dst, _tds__GetCertificatesStatus *src) returns deep copy of _tds__GetCertificatesStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCertificatesStatus(_tds__GetCertificatesStatus*) deep deletes _tds__GetCertificatesStatus data members, use only on dst after soap_dup__tds__GetCertificatesStatus(NULL, _tds__GetCertificatesStatus *dst, _tds__GetCertificatesStatus *src) (use soapcpp2 -Ed)
struct _tds__GetCertificatesStatus
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse is a complexType.
///
/// @note struct _tds__GetCertificatesStatusResponse operations:
/// - _tds__GetCertificatesStatusResponse* soap_new__tds__GetCertificatesStatusResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*) default initialize members
/// - int soap_read__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*) deserialize from a source
/// - int soap_write__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*) serialize to a sink
/// - _tds__GetCertificatesStatusResponse* soap_dup__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse* dst, _tds__GetCertificatesStatusResponse *src) returns deep copy of _tds__GetCertificatesStatusResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCertificatesStatusResponse(_tds__GetCertificatesStatusResponse*) deep deletes _tds__GetCertificatesStatusResponse data members, use only on dst after soap_dup__tds__GetCertificatesStatusResponse(NULL, _tds__GetCertificatesStatusResponse *dst, _tds__GetCertificatesStatusResponse *src) (use soapcpp2 -Ed)
struct _tds__GetCertificatesStatusResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__CertificateStatus* is 0..unbounded.
  $ int                                  __sizeCertificateStatus        0;
/// Array struct tt__CertificateStatus* of size 0..unbounded.
    struct tt__CertificateStatus*        CertificateStatus              0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus is a complexType.
///
/// @note struct _tds__SetCertificatesStatus operations:
/// - _tds__SetCertificatesStatus* soap_new__tds__SetCertificatesStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*) default initialize members
/// - int soap_read__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*) deserialize from a source
/// - int soap_write__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*) serialize to a sink
/// - _tds__SetCertificatesStatus* soap_dup__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus* dst, _tds__SetCertificatesStatus *src) returns deep copy of _tds__SetCertificatesStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetCertificatesStatus(_tds__SetCertificatesStatus*) deep deletes _tds__SetCertificatesStatus data members, use only on dst after soap_dup__tds__SetCertificatesStatus(NULL, _tds__SetCertificatesStatus *dst, _tds__SetCertificatesStatus *src) (use soapcpp2 -Ed)
struct _tds__SetCertificatesStatus
{
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is to be used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__CertificateStatus* is 0..unbounded.
  $ int                                  __sizeCertificateStatus        0;
/// Array struct tt__CertificateStatus* of size 0..unbounded.
    struct tt__CertificateStatus*        CertificateStatus              0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse is a complexType.
///
/// @note struct _tds__SetCertificatesStatusResponse operations:
/// - _tds__SetCertificatesStatusResponse* soap_new__tds__SetCertificatesStatusResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*) default initialize members
/// - int soap_read__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*) deserialize from a source
/// - int soap_write__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*) serialize to a sink
/// - _tds__SetCertificatesStatusResponse* soap_dup__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse* dst, _tds__SetCertificatesStatusResponse *src) returns deep copy of _tds__SetCertificatesStatusResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetCertificatesStatusResponse(_tds__SetCertificatesStatusResponse*) deep deletes _tds__SetCertificatesStatusResponse data members, use only on dst after soap_dup__tds__SetCertificatesStatusResponse(NULL, _tds__SetCertificatesStatusResponse *dst, _tds__SetCertificatesStatusResponse *src) (use soapcpp2 -Ed)
struct _tds__SetCertificatesStatusResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates is a complexType.
///
/// @note struct _tds__DeleteCertificates operations:
/// - _tds__DeleteCertificates* soap_new__tds__DeleteCertificates(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*) default initialize members
/// - int soap_read__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*) deserialize from a source
/// - int soap_write__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*) serialize to a sink
/// - _tds__DeleteCertificates* soap_dup__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates* dst, _tds__DeleteCertificates *src) returns deep copy of _tds__DeleteCertificates src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteCertificates(_tds__DeleteCertificates*) deep deletes _tds__DeleteCertificates data members, use only on dst after soap_dup__tds__DeleteCertificates(NULL, _tds__DeleteCertificates *dst, _tds__DeleteCertificates *src) (use soapcpp2 -Ed)
struct _tds__DeleteCertificates
{
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__token* is 1..unbounded.
  $ int                                  __sizeCertificateID            1;
/// Array xsd__token* of size 1..unbounded.
    xsd__token*                          CertificateID                  1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse is a complexType.
///
/// @note struct _tds__DeleteCertificatesResponse operations:
/// - _tds__DeleteCertificatesResponse* soap_new__tds__DeleteCertificatesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*) default initialize members
/// - int soap_read__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*) deserialize from a source
/// - int soap_write__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*) serialize to a sink
/// - _tds__DeleteCertificatesResponse* soap_dup__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse* dst, _tds__DeleteCertificatesResponse *src) returns deep copy of _tds__DeleteCertificatesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteCertificatesResponse(_tds__DeleteCertificatesResponse*) deep deletes _tds__DeleteCertificatesResponse data members, use only on dst after soap_dup__tds__DeleteCertificatesResponse(NULL, _tds__DeleteCertificatesResponse *dst, _tds__DeleteCertificatesResponse *src) (use soapcpp2 -Ed)
struct _tds__DeleteCertificatesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request is a complexType.
///
/// @note struct _tds__GetPkcs10Request operations:
/// - _tds__GetPkcs10Request* soap_new__tds__GetPkcs10Request(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*) default initialize members
/// - int soap_read__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*) deserialize from a source
/// - int soap_write__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*) serialize to a sink
/// - _tds__GetPkcs10Request* soap_dup__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request* dst, _tds__GetPkcs10Request *src) returns deep copy of _tds__GetPkcs10Request src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetPkcs10Request(_tds__GetPkcs10Request*) deep deletes _tds__GetPkcs10Request data members, use only on dst after soap_dup__tds__GetPkcs10Request(NULL, _tds__GetPkcs10Request *dst, _tds__GetPkcs10Request *src) (use soapcpp2 -Ed)
struct _tds__GetPkcs10Request
{
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative Dinstinguished Name(RDN) CommonName(CN).
/// </BLOCKQUOTE></PRE>
///
/// Element "Subject" of type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional base64 encoded DER attributes.
/// </BLOCKQUOTE></PRE>
///
/// Element "Attributes" of type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Attributes                     0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse is a complexType.
///
/// @note struct _tds__GetPkcs10RequestResponse operations:
/// - _tds__GetPkcs10RequestResponse* soap_new__tds__GetPkcs10RequestResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*) default initialize members
/// - int soap_read__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*) deserialize from a source
/// - int soap_write__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*) serialize to a sink
/// - _tds__GetPkcs10RequestResponse* soap_dup__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse* dst, _tds__GetPkcs10RequestResponse *src) returns deep copy of _tds__GetPkcs10RequestResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetPkcs10RequestResponse(_tds__GetPkcs10RequestResponse*) deep deletes _tds__GetPkcs10RequestResponse data members, use only on dst after soap_dup__tds__GetPkcs10RequestResponse(NULL, _tds__GetPkcs10RequestResponse *dst, _tds__GetPkcs10RequestResponse *src) (use soapcpp2 -Ed)
struct _tds__GetPkcs10RequestResponse
{
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "Pkcs10Request" of type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Pkcs10Request                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificates is a complexType.
///
/// @note struct _tds__LoadCertificates operations:
/// - _tds__LoadCertificates* soap_new__tds__LoadCertificates(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*) default initialize members
/// - int soap_read__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*) deserialize from a source
/// - int soap_write__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*) serialize to a sink
/// - _tds__LoadCertificates* soap_dup__tds__LoadCertificates(struct soap*, _tds__LoadCertificates* dst, _tds__LoadCertificates *src) returns deep copy of _tds__LoadCertificates src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__LoadCertificates(_tds__LoadCertificates*) deep deletes _tds__LoadCertificates data members, use only on dst after soap_dup__tds__LoadCertificates(NULL, _tds__LoadCertificates *dst, _tds__LoadCertificates *src) (use soapcpp2 -Ed)
struct _tds__LoadCertificates
{
/// <PRE><BLOCKQUOTE>
///   Optional id and base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Certificate* is 1..unbounded.
  $ int                                  __sizeNVTCertificate           1;
/// Array struct tt__Certificate* of size 1..unbounded.
    struct tt__Certificate*              NVTCertificate                 1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse is a complexType.
///
/// @note struct _tds__LoadCertificatesResponse operations:
/// - _tds__LoadCertificatesResponse* soap_new__tds__LoadCertificatesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*) default initialize members
/// - int soap_read__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*) deserialize from a source
/// - int soap_write__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*) serialize to a sink
/// - _tds__LoadCertificatesResponse* soap_dup__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse* dst, _tds__LoadCertificatesResponse *src) returns deep copy of _tds__LoadCertificatesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__LoadCertificatesResponse(_tds__LoadCertificatesResponse*) deep deletes _tds__LoadCertificatesResponse data members, use only on dst after soap_dup__tds__LoadCertificatesResponse(NULL, _tds__LoadCertificatesResponse *dst, _tds__LoadCertificatesResponse *src) (use soapcpp2 -Ed)
struct _tds__LoadCertificatesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode is a complexType.
///
/// @note struct _tds__GetClientCertificateMode operations:
/// - _tds__GetClientCertificateMode* soap_new__tds__GetClientCertificateMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*) default initialize members
/// - int soap_read__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*) deserialize from a source
/// - int soap_write__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*) serialize to a sink
/// - _tds__GetClientCertificateMode* soap_dup__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode* dst, _tds__GetClientCertificateMode *src) returns deep copy of _tds__GetClientCertificateMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetClientCertificateMode(_tds__GetClientCertificateMode*) deep deletes _tds__GetClientCertificateMode data members, use only on dst after soap_dup__tds__GetClientCertificateMode(NULL, _tds__GetClientCertificateMode *dst, _tds__GetClientCertificateMode *src) (use soapcpp2 -Ed)
struct _tds__GetClientCertificateMode
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse is a complexType.
///
/// @note struct _tds__GetClientCertificateModeResponse operations:
/// - _tds__GetClientCertificateModeResponse* soap_new__tds__GetClientCertificateModeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*) default initialize members
/// - int soap_read__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*) deserialize from a source
/// - int soap_write__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*) serialize to a sink
/// - _tds__GetClientCertificateModeResponse* soap_dup__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse* dst, _tds__GetClientCertificateModeResponse *src) returns deep copy of _tds__GetClientCertificateModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetClientCertificateModeResponse(_tds__GetClientCertificateModeResponse*) deep deletes _tds__GetClientCertificateModeResponse data members, use only on dst after soap_dup__tds__GetClientCertificateModeResponse(NULL, _tds__GetClientCertificateModeResponse *dst, _tds__GetClientCertificateModeResponse *src) (use soapcpp2 -Ed)
struct _tds__GetClientCertificateModeResponse
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode is a complexType.
///
/// @note struct _tds__SetClientCertificateMode operations:
/// - _tds__SetClientCertificateMode* soap_new__tds__SetClientCertificateMode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*) default initialize members
/// - int soap_read__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*) deserialize from a source
/// - int soap_write__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*) serialize to a sink
/// - _tds__SetClientCertificateMode* soap_dup__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode* dst, _tds__SetClientCertificateMode *src) returns deep copy of _tds__SetClientCertificateMode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetClientCertificateMode(_tds__SetClientCertificateMode*) deep deletes _tds__SetClientCertificateMode data members, use only on dst after soap_dup__tds__SetClientCertificateMode(NULL, _tds__SetClientCertificateMode *dst, _tds__SetClientCertificateMode *src) (use soapcpp2 -Ed)
struct _tds__SetClientCertificateMode
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse is a complexType.
///
/// @note struct _tds__SetClientCertificateModeResponse operations:
/// - _tds__SetClientCertificateModeResponse* soap_new__tds__SetClientCertificateModeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*) default initialize members
/// - int soap_read__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*) deserialize from a source
/// - int soap_write__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*) serialize to a sink
/// - _tds__SetClientCertificateModeResponse* soap_dup__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse* dst, _tds__SetClientCertificateModeResponse *src) returns deep copy of _tds__SetClientCertificateModeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetClientCertificateModeResponse(_tds__SetClientCertificateModeResponse*) deep deletes _tds__SetClientCertificateModeResponse data members, use only on dst after soap_dup__tds__SetClientCertificateModeResponse(NULL, _tds__SetClientCertificateModeResponse *dst, _tds__SetClientCertificateModeResponse *src) (use soapcpp2 -Ed)
struct _tds__SetClientCertificateModeResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificates is a complexType.
///
/// @note struct _tds__GetCACertificates operations:
/// - _tds__GetCACertificates* soap_new__tds__GetCACertificates(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*) default initialize members
/// - int soap_read__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*) deserialize from a source
/// - int soap_write__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*) serialize to a sink
/// - _tds__GetCACertificates* soap_dup__tds__GetCACertificates(struct soap*, _tds__GetCACertificates* dst, _tds__GetCACertificates *src) returns deep copy of _tds__GetCACertificates src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCACertificates(_tds__GetCACertificates*) deep deletes _tds__GetCACertificates data members, use only on dst after soap_dup__tds__GetCACertificates(NULL, _tds__GetCACertificates *dst, _tds__GetCACertificates *src) (use soapcpp2 -Ed)
struct _tds__GetCACertificates
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse is a complexType.
///
/// @note struct _tds__GetCACertificatesResponse operations:
/// - _tds__GetCACertificatesResponse* soap_new__tds__GetCACertificatesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*) default initialize members
/// - int soap_read__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*) deserialize from a source
/// - int soap_write__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*) serialize to a sink
/// - _tds__GetCACertificatesResponse* soap_dup__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse* dst, _tds__GetCACertificatesResponse *src) returns deep copy of _tds__GetCACertificatesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCACertificatesResponse(_tds__GetCACertificatesResponse*) deep deletes _tds__GetCACertificatesResponse data members, use only on dst after soap_dup__tds__GetCACertificatesResponse(NULL, _tds__GetCACertificatesResponse *dst, _tds__GetCACertificatesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetCACertificatesResponse
{
/// Size of array of struct tt__Certificate* is 0..unbounded.
  $ int                                  __sizeCACertificate            0;
/// Array struct tt__Certificate* of size 0..unbounded.
    struct tt__Certificate*              CACertificate                  0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey is a complexType.
///
/// @note struct _tds__LoadCertificateWithPrivateKey operations:
/// - _tds__LoadCertificateWithPrivateKey* soap_new__tds__LoadCertificateWithPrivateKey(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*) default initialize members
/// - int soap_read__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*) deserialize from a source
/// - int soap_write__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*) serialize to a sink
/// - _tds__LoadCertificateWithPrivateKey* soap_dup__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey* dst, _tds__LoadCertificateWithPrivateKey *src) returns deep copy of _tds__LoadCertificateWithPrivateKey src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__LoadCertificateWithPrivateKey(_tds__LoadCertificateWithPrivateKey*) deep deletes _tds__LoadCertificateWithPrivateKey data members, use only on dst after soap_dup__tds__LoadCertificateWithPrivateKey(NULL, _tds__LoadCertificateWithPrivateKey *dst, _tds__LoadCertificateWithPrivateKey *src) (use soapcpp2 -Ed)
struct _tds__LoadCertificateWithPrivateKey
{
/// Size of array of struct tt__CertificateWithPrivateKey* is 1..unbounded.
  $ int                                  __sizeCertificateWithPrivateKey 1;
/// Array struct tt__CertificateWithPrivateKey* of size 1..unbounded.
    struct tt__CertificateWithPrivateKey*  CertificateWithPrivateKey      1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse is a complexType.
///
/// @note struct _tds__LoadCertificateWithPrivateKeyResponse operations:
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_new__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*) default initialize members
/// - int soap_read__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*) deserialize from a source
/// - int soap_write__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*) serialize to a sink
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_dup__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse* dst, _tds__LoadCertificateWithPrivateKeyResponse *src) returns deep copy of _tds__LoadCertificateWithPrivateKeyResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__LoadCertificateWithPrivateKeyResponse(_tds__LoadCertificateWithPrivateKeyResponse*) deep deletes _tds__LoadCertificateWithPrivateKeyResponse data members, use only on dst after soap_dup__tds__LoadCertificateWithPrivateKeyResponse(NULL, _tds__LoadCertificateWithPrivateKeyResponse *dst, _tds__LoadCertificateWithPrivateKeyResponse *src) (use soapcpp2 -Ed)
struct _tds__LoadCertificateWithPrivateKeyResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation is a complexType.
///
/// @note struct _tds__GetCertificateInformation operations:
/// - _tds__GetCertificateInformation* soap_new__tds__GetCertificateInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*) default initialize members
/// - int soap_read__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*) deserialize from a source
/// - int soap_write__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*) serialize to a sink
/// - _tds__GetCertificateInformation* soap_dup__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation* dst, _tds__GetCertificateInformation *src) returns deep copy of _tds__GetCertificateInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCertificateInformation(_tds__GetCertificateInformation*) deep deletes _tds__GetCertificateInformation data members, use only on dst after soap_dup__tds__GetCertificateInformation(NULL, _tds__GetCertificateInformation *dst, _tds__GetCertificateInformation *src) (use soapcpp2 -Ed)
struct _tds__GetCertificateInformation
{
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse is a complexType.
///
/// @note struct _tds__GetCertificateInformationResponse operations:
/// - _tds__GetCertificateInformationResponse* soap_new__tds__GetCertificateInformationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*) default initialize members
/// - int soap_read__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*) deserialize from a source
/// - int soap_write__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*) serialize to a sink
/// - _tds__GetCertificateInformationResponse* soap_dup__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse* dst, _tds__GetCertificateInformationResponse *src) returns deep copy of _tds__GetCertificateInformationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCertificateInformationResponse(_tds__GetCertificateInformationResponse*) deep deletes _tds__GetCertificateInformationResponse data members, use only on dst after soap_dup__tds__GetCertificateInformationResponse(NULL, _tds__GetCertificateInformationResponse *dst, _tds__GetCertificateInformationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetCertificateInformationResponse
{
/// Element "CertificateInformation" of type "http://www.onvif.org/ver10/schema":CertificateInformation.
    struct tt__CertificateInformation*   CertificateInformation         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates is a complexType.
///
/// @note struct _tds__LoadCACertificates operations:
/// - _tds__LoadCACertificates* soap_new__tds__LoadCACertificates(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*) default initialize members
/// - int soap_read__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*) deserialize from a source
/// - int soap_write__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*) serialize to a sink
/// - _tds__LoadCACertificates* soap_dup__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates* dst, _tds__LoadCACertificates *src) returns deep copy of _tds__LoadCACertificates src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__LoadCACertificates(_tds__LoadCACertificates*) deep deletes _tds__LoadCACertificates data members, use only on dst after soap_dup__tds__LoadCACertificates(NULL, _tds__LoadCACertificates *dst, _tds__LoadCACertificates *src) (use soapcpp2 -Ed)
struct _tds__LoadCACertificates
{
/// Size of array of struct tt__Certificate* is 1..unbounded.
  $ int                                  __sizeCACertificate            1;
/// Array struct tt__Certificate* of size 1..unbounded.
    struct tt__Certificate*              CACertificate                  1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse is a complexType.
///
/// @note struct _tds__LoadCACertificatesResponse operations:
/// - _tds__LoadCACertificatesResponse* soap_new__tds__LoadCACertificatesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*) default initialize members
/// - int soap_read__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*) deserialize from a source
/// - int soap_write__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*) serialize to a sink
/// - _tds__LoadCACertificatesResponse* soap_dup__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse* dst, _tds__LoadCACertificatesResponse *src) returns deep copy of _tds__LoadCACertificatesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__LoadCACertificatesResponse(_tds__LoadCACertificatesResponse*) deep deletes _tds__LoadCACertificatesResponse data members, use only on dst after soap_dup__tds__LoadCACertificatesResponse(NULL, _tds__LoadCACertificatesResponse *dst, _tds__LoadCACertificatesResponse *src) (use soapcpp2 -Ed)
struct _tds__LoadCACertificatesResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration is a complexType.
///
/// @note struct _tds__CreateDot1XConfiguration operations:
/// - _tds__CreateDot1XConfiguration* soap_new__tds__CreateDot1XConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*) default initialize members
/// - int soap_read__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*) deserialize from a source
/// - int soap_write__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*) serialize to a sink
/// - _tds__CreateDot1XConfiguration* soap_dup__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration* dst, _tds__CreateDot1XConfiguration *src) returns deep copy of _tds__CreateDot1XConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateDot1XConfiguration(_tds__CreateDot1XConfiguration*) deep deletes _tds__CreateDot1XConfiguration data members, use only on dst after soap_dup__tds__CreateDot1XConfiguration(NULL, _tds__CreateDot1XConfiguration *dst, _tds__CreateDot1XConfiguration *src) (use soapcpp2 -Ed)
struct _tds__CreateDot1XConfiguration
{
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse is a complexType.
///
/// @note struct _tds__CreateDot1XConfigurationResponse operations:
/// - _tds__CreateDot1XConfigurationResponse* soap_new__tds__CreateDot1XConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*) default initialize members
/// - int soap_read__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*) serialize to a sink
/// - _tds__CreateDot1XConfigurationResponse* soap_dup__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse* dst, _tds__CreateDot1XConfigurationResponse *src) returns deep copy of _tds__CreateDot1XConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateDot1XConfigurationResponse(_tds__CreateDot1XConfigurationResponse*) deep deletes _tds__CreateDot1XConfigurationResponse data members, use only on dst after soap_dup__tds__CreateDot1XConfigurationResponse(NULL, _tds__CreateDot1XConfigurationResponse *dst, _tds__CreateDot1XConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__CreateDot1XConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration is a complexType.
///
/// @note struct _tds__SetDot1XConfiguration operations:
/// - _tds__SetDot1XConfiguration* soap_new__tds__SetDot1XConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*) default initialize members
/// - int soap_read__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*) deserialize from a source
/// - int soap_write__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*) serialize to a sink
/// - _tds__SetDot1XConfiguration* soap_dup__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration* dst, _tds__SetDot1XConfiguration *src) returns deep copy of _tds__SetDot1XConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDot1XConfiguration(_tds__SetDot1XConfiguration*) deep deletes _tds__SetDot1XConfiguration data members, use only on dst after soap_dup__tds__SetDot1XConfiguration(NULL, _tds__SetDot1XConfiguration *dst, _tds__SetDot1XConfiguration *src) (use soapcpp2 -Ed)
struct _tds__SetDot1XConfiguration
{
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse is a complexType.
///
/// @note struct _tds__SetDot1XConfigurationResponse operations:
/// - _tds__SetDot1XConfigurationResponse* soap_new__tds__SetDot1XConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*) default initialize members
/// - int soap_read__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*) serialize to a sink
/// - _tds__SetDot1XConfigurationResponse* soap_dup__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse* dst, _tds__SetDot1XConfigurationResponse *src) returns deep copy of _tds__SetDot1XConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetDot1XConfigurationResponse(_tds__SetDot1XConfigurationResponse*) deep deletes _tds__SetDot1XConfigurationResponse data members, use only on dst after soap_dup__tds__SetDot1XConfigurationResponse(NULL, _tds__SetDot1XConfigurationResponse *dst, _tds__SetDot1XConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__SetDot1XConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration is a complexType.
///
/// @note struct _tds__GetDot1XConfiguration operations:
/// - _tds__GetDot1XConfiguration* soap_new__tds__GetDot1XConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*) default initialize members
/// - int soap_read__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*) deserialize from a source
/// - int soap_write__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*) serialize to a sink
/// - _tds__GetDot1XConfiguration* soap_dup__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration* dst, _tds__GetDot1XConfiguration *src) returns deep copy of _tds__GetDot1XConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot1XConfiguration(_tds__GetDot1XConfiguration*) deep deletes _tds__GetDot1XConfiguration data members, use only on dst after soap_dup__tds__GetDot1XConfiguration(NULL, _tds__GetDot1XConfiguration *dst, _tds__GetDot1XConfiguration *src) (use soapcpp2 -Ed)
struct _tds__GetDot1XConfiguration
{
/// Element "Dot1XConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse is a complexType.
///
/// @note struct _tds__GetDot1XConfigurationResponse operations:
/// - _tds__GetDot1XConfigurationResponse* soap_new__tds__GetDot1XConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*) serialize to a sink
/// - _tds__GetDot1XConfigurationResponse* soap_dup__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse* dst, _tds__GetDot1XConfigurationResponse *src) returns deep copy of _tds__GetDot1XConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot1XConfigurationResponse(_tds__GetDot1XConfigurationResponse*) deep deletes _tds__GetDot1XConfigurationResponse data members, use only on dst after soap_dup__tds__GetDot1XConfigurationResponse(NULL, _tds__GetDot1XConfigurationResponse *dst, _tds__GetDot1XConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDot1XConfigurationResponse
{
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations is a complexType.
///
/// @note struct _tds__GetDot1XConfigurations operations:
/// - _tds__GetDot1XConfigurations* soap_new__tds__GetDot1XConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*) deserialize from a source
/// - int soap_write__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*) serialize to a sink
/// - _tds__GetDot1XConfigurations* soap_dup__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations* dst, _tds__GetDot1XConfigurations *src) returns deep copy of _tds__GetDot1XConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot1XConfigurations(_tds__GetDot1XConfigurations*) deep deletes _tds__GetDot1XConfigurations data members, use only on dst after soap_dup__tds__GetDot1XConfigurations(NULL, _tds__GetDot1XConfigurations *dst, _tds__GetDot1XConfigurations *src) (use soapcpp2 -Ed)
struct _tds__GetDot1XConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse is a complexType.
///
/// @note struct _tds__GetDot1XConfigurationsResponse operations:
/// - _tds__GetDot1XConfigurationsResponse* soap_new__tds__GetDot1XConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*) deserialize from a source
/// - int soap_write__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*) serialize to a sink
/// - _tds__GetDot1XConfigurationsResponse* soap_dup__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse* dst, _tds__GetDot1XConfigurationsResponse *src) returns deep copy of _tds__GetDot1XConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot1XConfigurationsResponse(_tds__GetDot1XConfigurationsResponse*) deep deletes _tds__GetDot1XConfigurationsResponse data members, use only on dst after soap_dup__tds__GetDot1XConfigurationsResponse(NULL, _tds__GetDot1XConfigurationsResponse *dst, _tds__GetDot1XConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDot1XConfigurationsResponse
{
/// Size of array of struct tt__Dot1XConfiguration* is 0..unbounded.
  $ int                                  __sizeDot1XConfiguration       0;
/// Array struct tt__Dot1XConfiguration* of size 0..unbounded.
    struct tt__Dot1XConfiguration*       Dot1XConfiguration             0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration is a complexType.
///
/// @note struct _tds__DeleteDot1XConfiguration operations:
/// - _tds__DeleteDot1XConfiguration* soap_new__tds__DeleteDot1XConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*) default initialize members
/// - int soap_read__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*) deserialize from a source
/// - int soap_write__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*) serialize to a sink
/// - _tds__DeleteDot1XConfiguration* soap_dup__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration* dst, _tds__DeleteDot1XConfiguration *src) returns deep copy of _tds__DeleteDot1XConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteDot1XConfiguration(_tds__DeleteDot1XConfiguration*) deep deletes _tds__DeleteDot1XConfiguration data members, use only on dst after soap_dup__tds__DeleteDot1XConfiguration(NULL, _tds__DeleteDot1XConfiguration *dst, _tds__DeleteDot1XConfiguration *src) (use soapcpp2 -Ed)
struct _tds__DeleteDot1XConfiguration
{
/// Size of array of tt__ReferenceToken* is 0..unbounded.
  $ int                                  __sizeDot1XConfigurationToken  0;
/// Array tt__ReferenceToken* of size 0..unbounded.
    tt__ReferenceToken*                  Dot1XConfigurationToken        0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse is a complexType.
///
/// @note struct _tds__DeleteDot1XConfigurationResponse operations:
/// - _tds__DeleteDot1XConfigurationResponse* soap_new__tds__DeleteDot1XConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*) default initialize members
/// - int soap_read__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*) serialize to a sink
/// - _tds__DeleteDot1XConfigurationResponse* soap_dup__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse* dst, _tds__DeleteDot1XConfigurationResponse *src) returns deep copy of _tds__DeleteDot1XConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteDot1XConfigurationResponse(_tds__DeleteDot1XConfigurationResponse*) deep deletes _tds__DeleteDot1XConfigurationResponse data members, use only on dst after soap_dup__tds__DeleteDot1XConfigurationResponse(NULL, _tds__DeleteDot1XConfigurationResponse *dst, _tds__DeleteDot1XConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__DeleteDot1XConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs is a complexType.
///
/// @note struct _tds__GetRelayOutputs operations:
/// - _tds__GetRelayOutputs* soap_new__tds__GetRelayOutputs(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*) default initialize members
/// - int soap_read__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*) deserialize from a source
/// - int soap_write__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*) serialize to a sink
/// - _tds__GetRelayOutputs* soap_dup__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs* dst, _tds__GetRelayOutputs *src) returns deep copy of _tds__GetRelayOutputs src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetRelayOutputs(_tds__GetRelayOutputs*) deep deletes _tds__GetRelayOutputs data members, use only on dst after soap_dup__tds__GetRelayOutputs(NULL, _tds__GetRelayOutputs *dst, _tds__GetRelayOutputs *src) (use soapcpp2 -Ed)
struct _tds__GetRelayOutputs
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse is a complexType.
///
/// @note struct _tds__GetRelayOutputsResponse operations:
/// - _tds__GetRelayOutputsResponse* soap_new__tds__GetRelayOutputsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*) default initialize members
/// - int soap_read__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*) deserialize from a source
/// - int soap_write__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*) serialize to a sink
/// - _tds__GetRelayOutputsResponse* soap_dup__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse* dst, _tds__GetRelayOutputsResponse *src) returns deep copy of _tds__GetRelayOutputsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetRelayOutputsResponse(_tds__GetRelayOutputsResponse*) deep deletes _tds__GetRelayOutputsResponse data members, use only on dst after soap_dup__tds__GetRelayOutputsResponse(NULL, _tds__GetRelayOutputsResponse *dst, _tds__GetRelayOutputsResponse *src) (use soapcpp2 -Ed)
struct _tds__GetRelayOutputsResponse
{
/// Size of array of struct tt__RelayOutput* is 0..unbounded.
  $ int                                  __sizeRelayOutputs             0;
/// Array struct tt__RelayOutput* of size 0..unbounded.
    struct tt__RelayOutput*              RelayOutputs                   0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings is a complexType.
///
/// @note struct _tds__SetRelayOutputSettings operations:
/// - _tds__SetRelayOutputSettings* soap_new__tds__SetRelayOutputSettings(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*) default initialize members
/// - int soap_read__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*) deserialize from a source
/// - int soap_write__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*) serialize to a sink
/// - _tds__SetRelayOutputSettings* soap_dup__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings* dst, _tds__SetRelayOutputSettings *src) returns deep copy of _tds__SetRelayOutputSettings src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRelayOutputSettings(_tds__SetRelayOutputSettings*) deep deletes _tds__SetRelayOutputSettings data members, use only on dst after soap_dup__tds__SetRelayOutputSettings(NULL, _tds__SetRelayOutputSettings *dst, _tds__SetRelayOutputSettings *src) (use soapcpp2 -Ed)
struct _tds__SetRelayOutputSettings
{
/// Element "RelayOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "Properties" of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    struct tt__RelayOutputSettings*      Properties                     1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse is a complexType.
///
/// @note struct _tds__SetRelayOutputSettingsResponse operations:
/// - _tds__SetRelayOutputSettingsResponse* soap_new__tds__SetRelayOutputSettingsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*) default initialize members
/// - int soap_read__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*) deserialize from a source
/// - int soap_write__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*) serialize to a sink
/// - _tds__SetRelayOutputSettingsResponse* soap_dup__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse* dst, _tds__SetRelayOutputSettingsResponse *src) returns deep copy of _tds__SetRelayOutputSettingsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRelayOutputSettingsResponse(_tds__SetRelayOutputSettingsResponse*) deep deletes _tds__SetRelayOutputSettingsResponse data members, use only on dst after soap_dup__tds__SetRelayOutputSettingsResponse(NULL, _tds__SetRelayOutputSettingsResponse *dst, _tds__SetRelayOutputSettingsResponse *src) (use soapcpp2 -Ed)
struct _tds__SetRelayOutputSettingsResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState is a complexType.
///
/// @note struct _tds__SetRelayOutputState operations:
/// - _tds__SetRelayOutputState* soap_new__tds__SetRelayOutputState(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*) default initialize members
/// - int soap_read__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*) deserialize from a source
/// - int soap_write__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*) serialize to a sink
/// - _tds__SetRelayOutputState* soap_dup__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState* dst, _tds__SetRelayOutputState *src) returns deep copy of _tds__SetRelayOutputState src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRelayOutputState(_tds__SetRelayOutputState*) deep deletes _tds__SetRelayOutputState data members, use only on dst after soap_dup__tds__SetRelayOutputState(NULL, _tds__SetRelayOutputState *dst, _tds__SetRelayOutputState *src) (use soapcpp2 -Ed)
struct _tds__SetRelayOutputState
{
/// Element "RelayOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "LogicalState" of type "http://www.onvif.org/ver10/schema":RelayLogicalState.
    enum tt__RelayLogicalState           LogicalState                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse is a complexType.
///
/// @note struct _tds__SetRelayOutputStateResponse operations:
/// - _tds__SetRelayOutputStateResponse* soap_new__tds__SetRelayOutputStateResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*) default initialize members
/// - int soap_read__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*) deserialize from a source
/// - int soap_write__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*) serialize to a sink
/// - _tds__SetRelayOutputStateResponse* soap_dup__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse* dst, _tds__SetRelayOutputStateResponse *src) returns deep copy of _tds__SetRelayOutputStateResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetRelayOutputStateResponse(_tds__SetRelayOutputStateResponse*) deep deletes _tds__SetRelayOutputStateResponse data members, use only on dst after soap_dup__tds__SetRelayOutputStateResponse(NULL, _tds__SetRelayOutputStateResponse *dst, _tds__SetRelayOutputStateResponse *src) (use soapcpp2 -Ed)
struct _tds__SetRelayOutputStateResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand is a complexType.
///
/// @note struct _tds__SendAuxiliaryCommand operations:
/// - _tds__SendAuxiliaryCommand* soap_new__tds__SendAuxiliaryCommand(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*) default initialize members
/// - int soap_read__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*) deserialize from a source
/// - int soap_write__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*) serialize to a sink
/// - _tds__SendAuxiliaryCommand* soap_dup__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand* dst, _tds__SendAuxiliaryCommand *src) returns deep copy of _tds__SendAuxiliaryCommand src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SendAuxiliaryCommand(_tds__SendAuxiliaryCommand*) deep deletes _tds__SendAuxiliaryCommand data members, use only on dst after soap_dup__tds__SendAuxiliaryCommand(NULL, _tds__SendAuxiliaryCommand *dst, _tds__SendAuxiliaryCommand *src) (use soapcpp2 -Ed)
struct _tds__SendAuxiliaryCommand
{
/// Element "AuxiliaryCommand" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommand               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
/// @note struct _tds__SendAuxiliaryCommandResponse operations:
/// - _tds__SendAuxiliaryCommandResponse* soap_new__tds__SendAuxiliaryCommandResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*) default initialize members
/// - int soap_read__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*) deserialize from a source
/// - int soap_write__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*) serialize to a sink
/// - _tds__SendAuxiliaryCommandResponse* soap_dup__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse* dst, _tds__SendAuxiliaryCommandResponse *src) returns deep copy of _tds__SendAuxiliaryCommandResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SendAuxiliaryCommandResponse(_tds__SendAuxiliaryCommandResponse*) deep deletes _tds__SendAuxiliaryCommandResponse data members, use only on dst after soap_dup__tds__SendAuxiliaryCommandResponse(NULL, _tds__SendAuxiliaryCommandResponse *dst, _tds__SendAuxiliaryCommandResponse *src) (use soapcpp2 -Ed)
struct _tds__SendAuxiliaryCommandResponse
{
/// Element "AuxiliaryCommandResponse" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommandResponse       0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities is a complexType.
///
/// @note struct _tds__GetDot11Capabilities operations:
/// - _tds__GetDot11Capabilities* soap_new__tds__GetDot11Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*) default initialize members
/// - int soap_read__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*) deserialize from a source
/// - int soap_write__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*) serialize to a sink
/// - _tds__GetDot11Capabilities* soap_dup__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities* dst, _tds__GetDot11Capabilities *src) returns deep copy of _tds__GetDot11Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot11Capabilities(_tds__GetDot11Capabilities*) deep deletes _tds__GetDot11Capabilities data members, use only on dst after soap_dup__tds__GetDot11Capabilities(NULL, _tds__GetDot11Capabilities *dst, _tds__GetDot11Capabilities *src) (use soapcpp2 -Ed)
struct _tds__GetDot11Capabilities
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse is a complexType.
///
/// @note struct _tds__GetDot11CapabilitiesResponse operations:
/// - _tds__GetDot11CapabilitiesResponse* soap_new__tds__GetDot11CapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*) default initialize members
/// - int soap_read__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*) deserialize from a source
/// - int soap_write__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*) serialize to a sink
/// - _tds__GetDot11CapabilitiesResponse* soap_dup__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse* dst, _tds__GetDot11CapabilitiesResponse *src) returns deep copy of _tds__GetDot11CapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot11CapabilitiesResponse(_tds__GetDot11CapabilitiesResponse*) deep deletes _tds__GetDot11CapabilitiesResponse data members, use only on dst after soap_dup__tds__GetDot11CapabilitiesResponse(NULL, _tds__GetDot11CapabilitiesResponse *dst, _tds__GetDot11CapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDot11CapabilitiesResponse
{
/// Element "Capabilities" of type "http://www.onvif.org/ver10/schema":Dot11Capabilities.
    struct tt__Dot11Capabilities*        Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Status
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Status is a complexType.
///
/// @note struct _tds__GetDot11Status operations:
/// - _tds__GetDot11Status* soap_new__tds__GetDot11Status(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*) default initialize members
/// - int soap_read__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*) deserialize from a source
/// - int soap_write__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*) serialize to a sink
/// - _tds__GetDot11Status* soap_dup__tds__GetDot11Status(struct soap*, _tds__GetDot11Status* dst, _tds__GetDot11Status *src) returns deep copy of _tds__GetDot11Status src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot11Status(_tds__GetDot11Status*) deep deletes _tds__GetDot11Status data members, use only on dst after soap_dup__tds__GetDot11Status(NULL, _tds__GetDot11Status *dst, _tds__GetDot11Status *src) (use soapcpp2 -Ed)
struct _tds__GetDot11Status
{
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse is a complexType.
///
/// @note struct _tds__GetDot11StatusResponse operations:
/// - _tds__GetDot11StatusResponse* soap_new__tds__GetDot11StatusResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*) default initialize members
/// - int soap_read__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*) deserialize from a source
/// - int soap_write__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*) serialize to a sink
/// - _tds__GetDot11StatusResponse* soap_dup__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse* dst, _tds__GetDot11StatusResponse *src) returns deep copy of _tds__GetDot11StatusResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDot11StatusResponse(_tds__GetDot11StatusResponse*) deep deletes _tds__GetDot11StatusResponse data members, use only on dst after soap_dup__tds__GetDot11StatusResponse(NULL, _tds__GetDot11StatusResponse *dst, _tds__GetDot11StatusResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDot11StatusResponse
{
/// Element "Status" of type "http://www.onvif.org/ver10/schema":Dot11Status.
    struct tt__Dot11Status*              Status                         1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks is a complexType.
///
/// @note struct _tds__ScanAvailableDot11Networks operations:
/// - _tds__ScanAvailableDot11Networks* soap_new__tds__ScanAvailableDot11Networks(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*) default initialize members
/// - int soap_read__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*) deserialize from a source
/// - int soap_write__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*) serialize to a sink
/// - _tds__ScanAvailableDot11Networks* soap_dup__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks* dst, _tds__ScanAvailableDot11Networks *src) returns deep copy of _tds__ScanAvailableDot11Networks src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__ScanAvailableDot11Networks(_tds__ScanAvailableDot11Networks*) deep deletes _tds__ScanAvailableDot11Networks data members, use only on dst after soap_dup__tds__ScanAvailableDot11Networks(NULL, _tds__ScanAvailableDot11Networks *dst, _tds__ScanAvailableDot11Networks *src) (use soapcpp2 -Ed)
struct _tds__ScanAvailableDot11Networks
{
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse is a complexType.
///
/// @note struct _tds__ScanAvailableDot11NetworksResponse operations:
/// - _tds__ScanAvailableDot11NetworksResponse* soap_new__tds__ScanAvailableDot11NetworksResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*) default initialize members
/// - int soap_read__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*) deserialize from a source
/// - int soap_write__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*) serialize to a sink
/// - _tds__ScanAvailableDot11NetworksResponse* soap_dup__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse* dst, _tds__ScanAvailableDot11NetworksResponse *src) returns deep copy of _tds__ScanAvailableDot11NetworksResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__ScanAvailableDot11NetworksResponse(_tds__ScanAvailableDot11NetworksResponse*) deep deletes _tds__ScanAvailableDot11NetworksResponse data members, use only on dst after soap_dup__tds__ScanAvailableDot11NetworksResponse(NULL, _tds__ScanAvailableDot11NetworksResponse *dst, _tds__ScanAvailableDot11NetworksResponse *src) (use soapcpp2 -Ed)
struct _tds__ScanAvailableDot11NetworksResponse
{
/// Size of array of struct tt__Dot11AvailableNetworks* is 0..unbounded.
  $ int                                  __sizeNetworks                 0;
/// Array struct tt__Dot11AvailableNetworks* of size 0..unbounded.
    struct tt__Dot11AvailableNetworks*   Networks                       0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUris
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUris is a complexType.
///
/// @note struct _tds__GetSystemUris operations:
/// - _tds__GetSystemUris* soap_new__tds__GetSystemUris(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*) default initialize members
/// - int soap_read__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*) deserialize from a source
/// - int soap_write__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*) serialize to a sink
/// - _tds__GetSystemUris* soap_dup__tds__GetSystemUris(struct soap*, _tds__GetSystemUris* dst, _tds__GetSystemUris *src) returns deep copy of _tds__GetSystemUris src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemUris(_tds__GetSystemUris*) deep deletes _tds__GetSystemUris data members, use only on dst after soap_dup__tds__GetSystemUris(NULL, _tds__GetSystemUris *dst, _tds__GetSystemUris *src) (use soapcpp2 -Ed)
struct _tds__GetSystemUris
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse is a complexType.
///
/// @note struct _tds__GetSystemUrisResponse operations:
/// - _tds__GetSystemUrisResponse* soap_new__tds__GetSystemUrisResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*) default initialize members
/// - int soap_read__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*) deserialize from a source
/// - int soap_write__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*) serialize to a sink
/// - _tds__GetSystemUrisResponse* soap_dup__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse* dst, _tds__GetSystemUrisResponse *src) returns deep copy of _tds__GetSystemUrisResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemUrisResponse(_tds__GetSystemUrisResponse*) deep deletes _tds__GetSystemUrisResponse data members, use only on dst after soap_dup__tds__GetSystemUrisResponse(NULL, _tds__GetSystemUrisResponse *dst, _tds__GetSystemUrisResponse *src) (use soapcpp2 -Ed)
struct _tds__GetSystemUrisResponse
{
/// Element "SystemLogUris" of type "http://www.onvif.org/ver10/schema":SystemLogUriList.
    struct tt__SystemLogUriList*         SystemLogUris                  0;	///< Optional element.
/// Element "SupportInfoUri" of type xs:anyURI.
    xsd__anyURI                          SupportInfoUri                 0;	///< Optional element.
/// Element "SystemBackupUri" of type xs:anyURI.
    xsd__anyURI                          SystemBackupUri                0;	///< Optional element.
/// @note struct _tds__GetSystemUrisResponse_Extension operations:
/// - _tds__GetSystemUrisResponse_Extension* soap_new__tds__GetSystemUrisResponse_Extension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension*) default initialize members
/// - int soap_read__tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension*) deserialize from a source
/// - int soap_write__tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension*) serialize to a sink
/// - _tds__GetSystemUrisResponse_Extension* soap_dup__tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension* dst, _tds__GetSystemUrisResponse_Extension *src) returns deep copy of _tds__GetSystemUrisResponse_Extension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetSystemUrisResponse_Extension(_tds__GetSystemUrisResponse_Extension*) deep deletes _tds__GetSystemUrisResponse_Extension data members, use only on dst after soap_dup__tds__GetSystemUrisResponse_Extension(NULL, _tds__GetSystemUrisResponse_Extension *dst, _tds__GetSystemUrisResponse_Extension *src) (use soapcpp2 -Ed)
    struct _tds__GetSystemUrisResponse_Extension
    {
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Extension                      0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade is a complexType.
///
/// @note struct _tds__StartFirmwareUpgrade operations:
/// - _tds__StartFirmwareUpgrade* soap_new__tds__StartFirmwareUpgrade(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*) default initialize members
/// - int soap_read__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*) deserialize from a source
/// - int soap_write__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*) serialize to a sink
/// - _tds__StartFirmwareUpgrade* soap_dup__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade* dst, _tds__StartFirmwareUpgrade *src) returns deep copy of _tds__StartFirmwareUpgrade src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__StartFirmwareUpgrade(_tds__StartFirmwareUpgrade*) deep deletes _tds__StartFirmwareUpgrade data members, use only on dst after soap_dup__tds__StartFirmwareUpgrade(NULL, _tds__StartFirmwareUpgrade *dst, _tds__StartFirmwareUpgrade *src) (use soapcpp2 -Ed)
struct _tds__StartFirmwareUpgrade
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse is a complexType.
///
/// @note struct _tds__StartFirmwareUpgradeResponse operations:
/// - _tds__StartFirmwareUpgradeResponse* soap_new__tds__StartFirmwareUpgradeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*) default initialize members
/// - int soap_read__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*) deserialize from a source
/// - int soap_write__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*) serialize to a sink
/// - _tds__StartFirmwareUpgradeResponse* soap_dup__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse* dst, _tds__StartFirmwareUpgradeResponse *src) returns deep copy of _tds__StartFirmwareUpgradeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__StartFirmwareUpgradeResponse(_tds__StartFirmwareUpgradeResponse*) deep deletes _tds__StartFirmwareUpgradeResponse data members, use only on dst after soap_dup__tds__StartFirmwareUpgradeResponse(NULL, _tds__StartFirmwareUpgradeResponse *dst, _tds__StartFirmwareUpgradeResponse *src) (use soapcpp2 -Ed)
struct _tds__StartFirmwareUpgradeResponse
{
/// Element "UploadUri" of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "UploadDelay" of type xs:duration.
    xsd__duration                        UploadDelay                    1;	///< Required element.
/// Element "ExpectedDownTime" of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore is a complexType.
///
/// @note struct _tds__StartSystemRestore operations:
/// - _tds__StartSystemRestore* soap_new__tds__StartSystemRestore(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*) default initialize members
/// - int soap_read__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*) deserialize from a source
/// - int soap_write__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*) serialize to a sink
/// - _tds__StartSystemRestore* soap_dup__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore* dst, _tds__StartSystemRestore *src) returns deep copy of _tds__StartSystemRestore src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__StartSystemRestore(_tds__StartSystemRestore*) deep deletes _tds__StartSystemRestore data members, use only on dst after soap_dup__tds__StartSystemRestore(NULL, _tds__StartSystemRestore *dst, _tds__StartSystemRestore *src) (use soapcpp2 -Ed)
struct _tds__StartSystemRestore
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse is a complexType.
///
/// @note struct _tds__StartSystemRestoreResponse operations:
/// - _tds__StartSystemRestoreResponse* soap_new__tds__StartSystemRestoreResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*) default initialize members
/// - int soap_read__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*) deserialize from a source
/// - int soap_write__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*) serialize to a sink
/// - _tds__StartSystemRestoreResponse* soap_dup__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse* dst, _tds__StartSystemRestoreResponse *src) returns deep copy of _tds__StartSystemRestoreResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__StartSystemRestoreResponse(_tds__StartSystemRestoreResponse*) deep deletes _tds__StartSystemRestoreResponse data members, use only on dst after soap_dup__tds__StartSystemRestoreResponse(NULL, _tds__StartSystemRestoreResponse *dst, _tds__StartSystemRestoreResponse *src) (use soapcpp2 -Ed)
struct _tds__StartSystemRestoreResponse
{
/// Element "UploadUri" of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "ExpectedDownTime" of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations is a complexType.
///
/// @note struct _tds__GetStorageConfigurations operations:
/// - _tds__GetStorageConfigurations* soap_new__tds__GetStorageConfigurations(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations*) default initialize members
/// - int soap_read__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations*) deserialize from a source
/// - int soap_write__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations*) serialize to a sink
/// - _tds__GetStorageConfigurations* soap_dup__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations* dst, _tds__GetStorageConfigurations *src) returns deep copy of _tds__GetStorageConfigurations src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetStorageConfigurations(_tds__GetStorageConfigurations*) deep deletes _tds__GetStorageConfigurations data members, use only on dst after soap_dup__tds__GetStorageConfigurations(NULL, _tds__GetStorageConfigurations *dst, _tds__GetStorageConfigurations *src) (use soapcpp2 -Ed)
struct _tds__GetStorageConfigurations
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse is a complexType.
///
/// @note struct _tds__GetStorageConfigurationsResponse operations:
/// - _tds__GetStorageConfigurationsResponse* soap_new__tds__GetStorageConfigurationsResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse*) default initialize members
/// - int soap_read__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse*) deserialize from a source
/// - int soap_write__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse*) serialize to a sink
/// - _tds__GetStorageConfigurationsResponse* soap_dup__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse* dst, _tds__GetStorageConfigurationsResponse *src) returns deep copy of _tds__GetStorageConfigurationsResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetStorageConfigurationsResponse(_tds__GetStorageConfigurationsResponse*) deep deletes _tds__GetStorageConfigurationsResponse data members, use only on dst after soap_dup__tds__GetStorageConfigurationsResponse(NULL, _tds__GetStorageConfigurationsResponse *dst, _tds__GetStorageConfigurationsResponse *src) (use soapcpp2 -Ed)
struct _tds__GetStorageConfigurationsResponse
{
/// Size of array of struct tds__StorageConfiguration* is 0..unbounded.
  $ int                                  __sizeStorageConfigurations    0;
/// Array struct tds__StorageConfiguration* of size 0..unbounded.
    struct tds__StorageConfiguration*    StorageConfigurations          0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration is a complexType.
///
/// @note struct _tds__CreateStorageConfiguration operations:
/// - _tds__CreateStorageConfiguration* soap_new__tds__CreateStorageConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration*) default initialize members
/// - int soap_read__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration*) deserialize from a source
/// - int soap_write__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration*) serialize to a sink
/// - _tds__CreateStorageConfiguration* soap_dup__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration* dst, _tds__CreateStorageConfiguration *src) returns deep copy of _tds__CreateStorageConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateStorageConfiguration(_tds__CreateStorageConfiguration*) deep deletes _tds__CreateStorageConfiguration data members, use only on dst after soap_dup__tds__CreateStorageConfiguration(NULL, _tds__CreateStorageConfiguration *dst, _tds__CreateStorageConfiguration *src) (use soapcpp2 -Ed)
struct _tds__CreateStorageConfiguration
{
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    struct tds__StorageConfigurationData*  StorageConfiguration           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse is a complexType.
///
/// @note struct _tds__CreateStorageConfigurationResponse operations:
/// - _tds__CreateStorageConfigurationResponse* soap_new__tds__CreateStorageConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse*) default initialize members
/// - int soap_read__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse*) serialize to a sink
/// - _tds__CreateStorageConfigurationResponse* soap_dup__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse* dst, _tds__CreateStorageConfigurationResponse *src) returns deep copy of _tds__CreateStorageConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__CreateStorageConfigurationResponse(_tds__CreateStorageConfigurationResponse*) deep deletes _tds__CreateStorageConfigurationResponse data members, use only on dst after soap_dup__tds__CreateStorageConfigurationResponse(NULL, _tds__CreateStorageConfigurationResponse *dst, _tds__CreateStorageConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__CreateStorageConfigurationResponse
{
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration is a complexType.
///
/// @note struct _tds__GetStorageConfiguration operations:
/// - _tds__GetStorageConfiguration* soap_new__tds__GetStorageConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration*) default initialize members
/// - int soap_read__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration*) deserialize from a source
/// - int soap_write__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration*) serialize to a sink
/// - _tds__GetStorageConfiguration* soap_dup__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration* dst, _tds__GetStorageConfiguration *src) returns deep copy of _tds__GetStorageConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetStorageConfiguration(_tds__GetStorageConfiguration*) deep deletes _tds__GetStorageConfiguration data members, use only on dst after soap_dup__tds__GetStorageConfiguration(NULL, _tds__GetStorageConfiguration *dst, _tds__GetStorageConfiguration *src) (use soapcpp2 -Ed)
struct _tds__GetStorageConfiguration
{
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse is a complexType.
///
/// @note struct _tds__GetStorageConfigurationResponse operations:
/// - _tds__GetStorageConfigurationResponse* soap_new__tds__GetStorageConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse*) default initialize members
/// - int soap_read__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse*) serialize to a sink
/// - _tds__GetStorageConfigurationResponse* soap_dup__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse* dst, _tds__GetStorageConfigurationResponse *src) returns deep copy of _tds__GetStorageConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetStorageConfigurationResponse(_tds__GetStorageConfigurationResponse*) deep deletes _tds__GetStorageConfigurationResponse data members, use only on dst after soap_dup__tds__GetStorageConfigurationResponse(NULL, _tds__GetStorageConfigurationResponse *dst, _tds__GetStorageConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetStorageConfigurationResponse
{
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    struct tds__StorageConfiguration*    StorageConfiguration           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration is a complexType.
///
/// @note struct _tds__SetStorageConfiguration operations:
/// - _tds__SetStorageConfiguration* soap_new__tds__SetStorageConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration*) default initialize members
/// - int soap_read__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration*) deserialize from a source
/// - int soap_write__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration*) serialize to a sink
/// - _tds__SetStorageConfiguration* soap_dup__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration* dst, _tds__SetStorageConfiguration *src) returns deep copy of _tds__SetStorageConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetStorageConfiguration(_tds__SetStorageConfiguration*) deep deletes _tds__SetStorageConfiguration data members, use only on dst after soap_dup__tds__SetStorageConfiguration(NULL, _tds__SetStorageConfiguration *dst, _tds__SetStorageConfiguration *src) (use soapcpp2 -Ed)
struct _tds__SetStorageConfiguration
{
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    struct tds__StorageConfiguration*    StorageConfiguration           1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse is a complexType.
///
/// @note struct _tds__SetStorageConfigurationResponse operations:
/// - _tds__SetStorageConfigurationResponse* soap_new__tds__SetStorageConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse*) default initialize members
/// - int soap_read__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse*) serialize to a sink
/// - _tds__SetStorageConfigurationResponse* soap_dup__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse* dst, _tds__SetStorageConfigurationResponse *src) returns deep copy of _tds__SetStorageConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetStorageConfigurationResponse(_tds__SetStorageConfigurationResponse*) deep deletes _tds__SetStorageConfigurationResponse data members, use only on dst after soap_dup__tds__SetStorageConfigurationResponse(NULL, _tds__SetStorageConfigurationResponse *dst, _tds__SetStorageConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__SetStorageConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration is a complexType.
///
/// @note struct _tds__DeleteStorageConfiguration operations:
/// - _tds__DeleteStorageConfiguration* soap_new__tds__DeleteStorageConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration*) default initialize members
/// - int soap_read__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration*) deserialize from a source
/// - int soap_write__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration*) serialize to a sink
/// - _tds__DeleteStorageConfiguration* soap_dup__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration* dst, _tds__DeleteStorageConfiguration *src) returns deep copy of _tds__DeleteStorageConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteStorageConfiguration(_tds__DeleteStorageConfiguration*) deep deletes _tds__DeleteStorageConfiguration data members, use only on dst after soap_dup__tds__DeleteStorageConfiguration(NULL, _tds__DeleteStorageConfiguration *dst, _tds__DeleteStorageConfiguration *src) (use soapcpp2 -Ed)
struct _tds__DeleteStorageConfiguration
{
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse is a complexType.
///
/// @note struct _tds__DeleteStorageConfigurationResponse operations:
/// - _tds__DeleteStorageConfigurationResponse* soap_new__tds__DeleteStorageConfigurationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse*) default initialize members
/// - int soap_read__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse*) deserialize from a source
/// - int soap_write__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse*) serialize to a sink
/// - _tds__DeleteStorageConfigurationResponse* soap_dup__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse* dst, _tds__DeleteStorageConfigurationResponse *src) returns deep copy of _tds__DeleteStorageConfigurationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteStorageConfigurationResponse(_tds__DeleteStorageConfigurationResponse*) deep deletes _tds__DeleteStorageConfigurationResponse data members, use only on dst after soap_dup__tds__DeleteStorageConfigurationResponse(NULL, _tds__DeleteStorageConfigurationResponse *dst, _tds__DeleteStorageConfigurationResponse *src) (use soapcpp2 -Ed)
struct _tds__DeleteStorageConfigurationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetGeoLocation is a complexType.
///
/// @note struct _tds__GetGeoLocation operations:
/// - _tds__GetGeoLocation* soap_new__tds__GetGeoLocation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation*) default initialize members
/// - int soap_read__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation*) deserialize from a source
/// - int soap_write__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation*) serialize to a sink
/// - _tds__GetGeoLocation* soap_dup__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation* dst, _tds__GetGeoLocation *src) returns deep copy of _tds__GetGeoLocation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetGeoLocation(_tds__GetGeoLocation*) deep deletes _tds__GetGeoLocation data members, use only on dst after soap_dup__tds__GetGeoLocation(NULL, _tds__GetGeoLocation *dst, _tds__GetGeoLocation *src) (use soapcpp2 -Ed)
struct _tds__GetGeoLocation
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetGeoLocationResponse is a complexType.
///
/// @note struct _tds__GetGeoLocationResponse operations:
/// - _tds__GetGeoLocationResponse* soap_new__tds__GetGeoLocationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse*) default initialize members
/// - int soap_read__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse*) deserialize from a source
/// - int soap_write__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse*) serialize to a sink
/// - _tds__GetGeoLocationResponse* soap_dup__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse* dst, _tds__GetGeoLocationResponse *src) returns deep copy of _tds__GetGeoLocationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetGeoLocationResponse(_tds__GetGeoLocationResponse*) deep deletes _tds__GetGeoLocationResponse data members, use only on dst after soap_dup__tds__GetGeoLocationResponse(NULL, _tds__GetGeoLocationResponse *dst, _tds__GetGeoLocationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetGeoLocationResponse
{
/// Size of array of struct tt__LocationEntity* is 0..unbounded.
  $ int                                  __sizeLocation                 0;
/// Array struct tt__LocationEntity* of size 0..unbounded.
    struct tt__LocationEntity*           Location                       0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetGeoLocation is a complexType.
///
/// @note struct _tds__SetGeoLocation operations:
/// - _tds__SetGeoLocation* soap_new__tds__SetGeoLocation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation*) default initialize members
/// - int soap_read__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation*) deserialize from a source
/// - int soap_write__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation*) serialize to a sink
/// - _tds__SetGeoLocation* soap_dup__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation* dst, _tds__SetGeoLocation *src) returns deep copy of _tds__SetGeoLocation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetGeoLocation(_tds__SetGeoLocation*) deep deletes _tds__SetGeoLocation data members, use only on dst after soap_dup__tds__SetGeoLocation(NULL, _tds__SetGeoLocation *dst, _tds__SetGeoLocation *src) (use soapcpp2 -Ed)
struct _tds__SetGeoLocation
{
/// Size of array of struct tt__LocationEntity* is 1..unbounded.
  $ int                                  __sizeLocation                 1;
/// Array struct tt__LocationEntity* of size 1..unbounded.
    struct tt__LocationEntity*           Location                       1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetGeoLocationResponse is a complexType.
///
/// @note struct _tds__SetGeoLocationResponse operations:
/// - _tds__SetGeoLocationResponse* soap_new__tds__SetGeoLocationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse*) default initialize members
/// - int soap_read__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse*) deserialize from a source
/// - int soap_write__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse*) serialize to a sink
/// - _tds__SetGeoLocationResponse* soap_dup__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse* dst, _tds__SetGeoLocationResponse *src) returns deep copy of _tds__SetGeoLocationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SetGeoLocationResponse(_tds__SetGeoLocationResponse*) deep deletes _tds__SetGeoLocationResponse data members, use only on dst after soap_dup__tds__SetGeoLocationResponse(NULL, _tds__SetGeoLocationResponse *dst, _tds__SetGeoLocationResponse *src) (use soapcpp2 -Ed)
struct _tds__SetGeoLocationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocation is a complexType.
///
/// @note struct _tds__DeleteGeoLocation operations:
/// - _tds__DeleteGeoLocation* soap_new__tds__DeleteGeoLocation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation*) default initialize members
/// - int soap_read__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation*) deserialize from a source
/// - int soap_write__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation*) serialize to a sink
/// - _tds__DeleteGeoLocation* soap_dup__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation* dst, _tds__DeleteGeoLocation *src) returns deep copy of _tds__DeleteGeoLocation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteGeoLocation(_tds__DeleteGeoLocation*) deep deletes _tds__DeleteGeoLocation data members, use only on dst after soap_dup__tds__DeleteGeoLocation(NULL, _tds__DeleteGeoLocation *dst, _tds__DeleteGeoLocation *src) (use soapcpp2 -Ed)
struct _tds__DeleteGeoLocation
{
/// Size of array of struct tt__LocationEntity* is 1..unbounded.
  $ int                                  __sizeLocation                 1;
/// Array struct tt__LocationEntity* of size 1..unbounded.
    struct tt__LocationEntity*           Location                       1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocationResponse is a complexType.
///
/// @note struct _tds__DeleteGeoLocationResponse operations:
/// - _tds__DeleteGeoLocationResponse* soap_new__tds__DeleteGeoLocationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse*) default initialize members
/// - int soap_read__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse*) deserialize from a source
/// - int soap_write__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse*) serialize to a sink
/// - _tds__DeleteGeoLocationResponse* soap_dup__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse* dst, _tds__DeleteGeoLocationResponse *src) returns deep copy of _tds__DeleteGeoLocationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__DeleteGeoLocationResponse(_tds__DeleteGeoLocationResponse*) deep deletes _tds__DeleteGeoLocationResponse data members, use only on dst after soap_dup__tds__DeleteGeoLocationResponse(NULL, _tds__DeleteGeoLocationResponse *dst, _tds__DeleteGeoLocationResponse *src) (use soapcpp2 -Ed)
struct _tds__DeleteGeoLocationResponse
{
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base class for physical entities like inputs and outputs.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":VideoSource (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioSource (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":VideoOutput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioOutput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":NetworkInterface as struct tt__NetworkInterface
/// - "http://www.onvif.org/ver10/schema":RelayOutput as struct tt__RelayOutput
/// - "http://www.onvif.org/ver10/schema":DigitalInput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":PTZNode (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":OSDConfiguration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration as struct tds__StorageConfiguration
///
/// @note struct tt__DeviceEntity operations:
/// - tt__DeviceEntity* soap_new_tt__DeviceEntity(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DeviceEntity(struct soap*, tt__DeviceEntity*) default initialize members
/// - int soap_read_tt__DeviceEntity(struct soap*, tt__DeviceEntity*) deserialize from a source
/// - int soap_write_tt__DeviceEntity(struct soap*, tt__DeviceEntity*) serialize to a sink
/// - tt__DeviceEntity* soap_dup_tt__DeviceEntity(struct soap*, tt__DeviceEntity* dst, tt__DeviceEntity *src) returns deep copy of tt__DeviceEntity src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DeviceEntity(tt__DeviceEntity*) deep deletes tt__DeviceEntity data members, use only on dst after soap_dup_tt__DeviceEntity(NULL, tt__DeviceEntity *dst, tt__DeviceEntity *src) (use soapcpp2 -Ed)
struct tt__DeviceEntity
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":IntRectangle is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IntRectangleRange is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FloatRange is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DurationRange is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IntItems is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FloatItems is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnyHolder is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Profile is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ConfigurationEntity is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Rotate is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RotateExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LensProjection is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LensOffset is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LensDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RotateOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RotateOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SceneOrientation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoResolution is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoRateControl is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Mpeg4Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":H264Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":JpegOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Mpeg4Options is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":H264Options is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoResolution2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoRateControl2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoder2ConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoder2ConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EventSubscription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutputExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":H264DecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":JpegDecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Mpeg4DecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":G711DecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AACDecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":G726DecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MulticastConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":StreamSetup is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Transport is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MediaUri is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":Scope is a complexType.
///
/// @note struct tt__Scope operations:
/// - tt__Scope* soap_new_tt__Scope(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Scope(struct soap*, tt__Scope*) default initialize members
/// - int soap_read_tt__Scope(struct soap*, tt__Scope*) deserialize from a source
/// - int soap_write_tt__Scope(struct soap*, tt__Scope*) serialize to a sink
/// - tt__Scope* soap_dup_tt__Scope(struct soap*, tt__Scope* dst, tt__Scope *src) returns deep copy of tt__Scope src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Scope(tt__Scope*) deep deletes tt__Scope data members, use only on dst after soap_dup_tt__Scope(NULL, tt__Scope *dst, tt__Scope *src) (use soapcpp2 -Ed)
struct tt__Scope
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the scope is fixed or configurable.
/// </BLOCKQUOTE></PRE>
///
/// Element "ScopeDef" of type "http://www.onvif.org/ver10/schema":ScopeDefinition.
    enum tt__ScopeDefinition             ScopeDef                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Scope item URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "ScopeItem" of type xs:anyURI.
    xsd__anyURI                          ScopeItem                      1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is a complexType.
///
/// @note struct tt__NetworkInterfaceExtension operations:
/// - tt__NetworkInterfaceExtension* soap_new_tt__NetworkInterfaceExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension*) default initialize members
/// - int soap_read_tt__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension*) serialize to a sink
/// - tt__NetworkInterfaceExtension* soap_dup_tt__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension* dst, tt__NetworkInterfaceExtension *src) returns deep copy of tt__NetworkInterfaceExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceExtension(tt__NetworkInterfaceExtension*) deep deletes tt__NetworkInterfaceExtension data members, use only on dst after soap_dup_tt__NetworkInterfaceExtension(NULL, tt__NetworkInterfaceExtension *dst, tt__NetworkInterfaceExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "InterfaceType" of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Extension point prepared for future 802.3 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Dot3Configuration* is 0..unbounded.
  $ int                                  __sizeDot3                     0;
/// Array struct tt__Dot3Configuration* of size 0..unbounded.
    struct tt__Dot3Configuration*        Dot3                           0;	///< Multiple elements.
/// Size of array of struct tt__Dot11Configuration* is 0..unbounded.
  $ int                                  __sizeDot11                    0;
/// Array struct tt__Dot11Configuration* of size 0..unbounded.
    struct tt__Dot11Configuration*       Dot11                          0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2.
    struct tt__NetworkInterfaceExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot3Configuration is a complexType.
///
/// @note struct tt__Dot3Configuration operations:
/// - tt__Dot3Configuration* soap_new_tt__Dot3Configuration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot3Configuration(struct soap*, tt__Dot3Configuration*) default initialize members
/// - int soap_read_tt__Dot3Configuration(struct soap*, tt__Dot3Configuration*) deserialize from a source
/// - int soap_write_tt__Dot3Configuration(struct soap*, tt__Dot3Configuration*) serialize to a sink
/// - tt__Dot3Configuration* soap_dup_tt__Dot3Configuration(struct soap*, tt__Dot3Configuration* dst, tt__Dot3Configuration *src) returns deep copy of tt__Dot3Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot3Configuration(tt__Dot3Configuration*) deep deletes tt__Dot3Configuration data members, use only on dst after soap_dup_tt__Dot3Configuration(NULL, tt__Dot3Configuration *dst, tt__Dot3Configuration *src) (use soapcpp2 -Ed)
struct tt__Dot3Configuration
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2 is a complexType.
///
/// @note struct tt__NetworkInterfaceExtension2 operations:
/// - tt__NetworkInterfaceExtension2* soap_new_tt__NetworkInterfaceExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2*) default initialize members
/// - int soap_read_tt__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2*) serialize to a sink
/// - tt__NetworkInterfaceExtension2* soap_dup_tt__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2* dst, tt__NetworkInterfaceExtension2 *src) returns deep copy of tt__NetworkInterfaceExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceExtension2(tt__NetworkInterfaceExtension2*) deep deletes tt__NetworkInterfaceExtension2 data members, use only on dst after soap_dup_tt__NetworkInterfaceExtension2(NULL, tt__NetworkInterfaceExtension2 *dst, tt__NetworkInterfaceExtension2 *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is a complexType.
///
/// @note struct tt__NetworkInterfaceLink operations:
/// - tt__NetworkInterfaceLink* soap_new_tt__NetworkInterfaceLink(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink*) default initialize members
/// - int soap_read_tt__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink*) serialize to a sink
/// - tt__NetworkInterfaceLink* soap_dup_tt__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink* dst, tt__NetworkInterfaceLink *src) returns deep copy of tt__NetworkInterfaceLink src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceLink(tt__NetworkInterfaceLink*) deep deletes tt__NetworkInterfaceLink data members, use only on dst after soap_dup_tt__NetworkInterfaceLink(NULL, tt__NetworkInterfaceLink *dst, tt__NetworkInterfaceLink *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceLink
{
/// <PRE><BLOCKQUOTE>
///   Configured link settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "AdminSettings" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  AdminSettings                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current active link settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "OperSettings" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  OperSettings                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Integer indicating interface type, for example: 6 is ethernet.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceType" of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is a complexType.
///
/// @note struct tt__NetworkInterfaceConnectionSetting operations:
/// - tt__NetworkInterfaceConnectionSetting* soap_new_tt__NetworkInterfaceConnectionSetting(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting*) default initialize members
/// - int soap_read_tt__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting*) serialize to a sink
/// - tt__NetworkInterfaceConnectionSetting* soap_dup_tt__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting* dst, tt__NetworkInterfaceConnectionSetting *src) returns deep copy of tt__NetworkInterfaceConnectionSetting src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceConnectionSetting(tt__NetworkInterfaceConnectionSetting*) deep deletes tt__NetworkInterfaceConnectionSetting data members, use only on dst after soap_dup_tt__NetworkInterfaceConnectionSetting(NULL, tt__NetworkInterfaceConnectionSetting *dst, tt__NetworkInterfaceConnectionSetting *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceConnectionSetting
{
/// <PRE><BLOCKQUOTE>
///   Auto negotiation on/off.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoNegotiation" of type xs:boolean.
    enum xsd__boolean                    AutoNegotiation                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type xs:int.
    int                                  Speed                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duplex type, Half or Full.
/// </BLOCKQUOTE></PRE>
///
/// Element "Duplex" of type "http://www.onvif.org/ver10/schema":Duplex.
    enum tt__Duplex                      Duplex                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is a complexType.
///
/// @note struct tt__NetworkInterfaceInfo operations:
/// - tt__NetworkInterfaceInfo* soap_new_tt__NetworkInterfaceInfo(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo*) default initialize members
/// - int soap_read_tt__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo*) serialize to a sink
/// - tt__NetworkInterfaceInfo* soap_dup_tt__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo* dst, tt__NetworkInterfaceInfo *src) returns deep copy of tt__NetworkInterfaceInfo src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceInfo(tt__NetworkInterfaceInfo*) deep deletes tt__NetworkInterfaceInfo data members, use only on dst after soap_dup_tt__NetworkInterfaceInfo(NULL, tt__NetworkInterfaceInfo *dst, tt__NetworkInterfaceInfo *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceInfo
{
/// <PRE><BLOCKQUOTE>
///   Network interface name, for example eth0.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:string.
    char*                                Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Network interface MAC address.
/// </BLOCKQUOTE></PRE>
///
/// Element "HwAddress" of type "http://www.onvif.org/ver10/schema":HwAddress.
    tt__HwAddress                        HwAddress                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "MTU" of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is a complexType.
///
/// @note struct tt__IPv6NetworkInterface operations:
/// - tt__IPv6NetworkInterface* soap_new_tt__IPv6NetworkInterface(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface*) default initialize members
/// - int soap_read_tt__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface*) deserialize from a source
/// - int soap_write_tt__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface*) serialize to a sink
/// - tt__IPv6NetworkInterface* soap_dup_tt__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface* dst, tt__IPv6NetworkInterface *src) returns deep copy of tt__IPv6NetworkInterface src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv6NetworkInterface(tt__IPv6NetworkInterface*) deep deletes tt__IPv6NetworkInterface data members, use only on dst after soap_dup_tt__IPv6NetworkInterface(NULL, tt__IPv6NetworkInterface *dst, tt__IPv6NetworkInterface *src) (use soapcpp2 -Ed)
struct tt__IPv6NetworkInterface
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv6 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Config" of type "http://www.onvif.org/ver10/schema":IPv6Configuration.
    struct tt__IPv6Configuration*        Config                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is a complexType.
///
/// @note struct tt__IPv4NetworkInterface operations:
/// - tt__IPv4NetworkInterface* soap_new_tt__IPv4NetworkInterface(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface*) default initialize members
/// - int soap_read_tt__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface*) deserialize from a source
/// - int soap_write_tt__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface*) serialize to a sink
/// - tt__IPv4NetworkInterface* soap_dup_tt__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface* dst, tt__IPv4NetworkInterface *src) returns deep copy of tt__IPv4NetworkInterface src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv4NetworkInterface(tt__IPv4NetworkInterface*) deep deletes tt__IPv4NetworkInterface data members, use only on dst after soap_dup_tt__IPv4NetworkInterface(NULL, tt__IPv4NetworkInterface *dst, tt__IPv4NetworkInterface *src) (use soapcpp2 -Ed)
struct tt__IPv4NetworkInterface
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Config" of type "http://www.onvif.org/ver10/schema":IPv4Configuration.
    struct tt__IPv4Configuration*        Config                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Configuration is a complexType.
///
/// @note struct tt__IPv4Configuration operations:
/// - tt__IPv4Configuration* soap_new_tt__IPv4Configuration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPv4Configuration(struct soap*, tt__IPv4Configuration*) default initialize members
/// - int soap_read_tt__IPv4Configuration(struct soap*, tt__IPv4Configuration*) deserialize from a source
/// - int soap_write_tt__IPv4Configuration(struct soap*, tt__IPv4Configuration*) serialize to a sink
/// - tt__IPv4Configuration* soap_dup_tt__IPv4Configuration(struct soap*, tt__IPv4Configuration* dst, tt__IPv4Configuration *src) returns deep copy of tt__IPv4Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv4Configuration(tt__IPv4Configuration*) deep deletes tt__IPv4Configuration data members, use only on dst after soap_dup_tt__IPv4Configuration(NULL, tt__IPv4Configuration *dst, tt__IPv4Configuration *src) (use soapcpp2 -Ed)
struct tt__IPv4Configuration
{
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
  $ int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Link local address.
/// </BLOCKQUOTE></PRE>
///
/// Element "LinkLocal" of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    struct tt__PrefixedIPv4Address*      LinkLocal                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address configured by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    struct tt__PrefixedIPv4Address*      FromDHCP                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type xs:boolean.
    enum xsd__boolean                    DHCP                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6Configuration is a complexType.
///
/// @note struct tt__IPv6Configuration operations:
/// - tt__IPv6Configuration* soap_new_tt__IPv6Configuration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPv6Configuration(struct soap*, tt__IPv6Configuration*) default initialize members
/// - int soap_read_tt__IPv6Configuration(struct soap*, tt__IPv6Configuration*) deserialize from a source
/// - int soap_write_tt__IPv6Configuration(struct soap*, tt__IPv6Configuration*) serialize to a sink
/// - tt__IPv6Configuration* soap_dup_tt__IPv6Configuration(struct soap*, tt__IPv6Configuration* dst, tt__IPv6Configuration *src) returns deep copy of tt__IPv6Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv6Configuration(tt__IPv6Configuration*) deep deletes tt__IPv6Configuration data members, use only on dst after soap_dup_tt__IPv6Configuration(NULL, tt__IPv6Configuration *dst, tt__IPv6Configuration *src) (use soapcpp2 -Ed)
struct tt__IPv6Configuration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "AcceptRouterAdvert" of type xs:boolean.
    enum xsd__boolean*                   AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration       DHCP                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of manually entered IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of link local IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeLinkLocal                0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      LinkLocal                      0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeFromDHCP                 0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      FromDHCP                       0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using router advertisment.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeFromRA                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      FromRA                         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension.
    struct tt__IPv6ConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is a complexType.
///
/// @note struct tt__IPv6ConfigurationExtension operations:
/// - tt__IPv6ConfigurationExtension* soap_new_tt__IPv6ConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension*) default initialize members
/// - int soap_read_tt__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension*) serialize to a sink
/// - tt__IPv6ConfigurationExtension* soap_dup_tt__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension* dst, tt__IPv6ConfigurationExtension *src) returns deep copy of tt__IPv6ConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv6ConfigurationExtension(tt__IPv6ConfigurationExtension*) deep deletes tt__IPv6ConfigurationExtension data members, use only on dst after soap_dup_tt__IPv6ConfigurationExtension(NULL, tt__IPv6ConfigurationExtension *dst, tt__IPv6ConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__IPv6ConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocol is a complexType.
///
/// @note struct tt__NetworkProtocol operations:
/// - tt__NetworkProtocol* soap_new_tt__NetworkProtocol(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkProtocol(struct soap*, tt__NetworkProtocol*) default initialize members
/// - int soap_read_tt__NetworkProtocol(struct soap*, tt__NetworkProtocol*) deserialize from a source
/// - int soap_write_tt__NetworkProtocol(struct soap*, tt__NetworkProtocol*) serialize to a sink
/// - tt__NetworkProtocol* soap_dup_tt__NetworkProtocol(struct soap*, tt__NetworkProtocol* dst, tt__NetworkProtocol *src) returns deep copy of tt__NetworkProtocol src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkProtocol(tt__NetworkProtocol*) deep deletes tt__NetworkProtocol data members, use only on dst after soap_dup_tt__NetworkProtocol(NULL, tt__NetworkProtocol *dst, tt__NetworkProtocol *src) (use soapcpp2 -Ed)
struct tt__NetworkProtocol
{
/// <PRE><BLOCKQUOTE>
///   Network protocol type string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":NetworkProtocolType.
    enum tt__NetworkProtocolType         Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the protocol is enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The port that is used by the protocol.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of int* is 1..unbounded.
  $ int                                  __sizePort                     1;
/// Array int* of size 1..unbounded.
    int*                                 Port                           1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkProtocolExtension.
    struct tt__NetworkProtocolExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is a complexType.
///
/// @note struct tt__NetworkProtocolExtension operations:
/// - tt__NetworkProtocolExtension* soap_new_tt__NetworkProtocolExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension*) default initialize members
/// - int soap_read_tt__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension*) deserialize from a source
/// - int soap_write_tt__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension*) serialize to a sink
/// - tt__NetworkProtocolExtension* soap_dup_tt__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension* dst, tt__NetworkProtocolExtension *src) returns deep copy of tt__NetworkProtocolExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkProtocolExtension(tt__NetworkProtocolExtension*) deep deletes tt__NetworkProtocolExtension data members, use only on dst after soap_dup_tt__NetworkProtocolExtension(NULL, tt__NetworkProtocolExtension *dst, tt__NetworkProtocolExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkProtocolExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHost is a complexType.
///
/// @note struct tt__NetworkHost operations:
/// - tt__NetworkHost* soap_new_tt__NetworkHost(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkHost(struct soap*, tt__NetworkHost*) default initialize members
/// - int soap_read_tt__NetworkHost(struct soap*, tt__NetworkHost*) deserialize from a source
/// - int soap_write_tt__NetworkHost(struct soap*, tt__NetworkHost*) serialize to a sink
/// - tt__NetworkHost* soap_dup_tt__NetworkHost(struct soap*, tt__NetworkHost* dst, tt__NetworkHost *src) returns deep copy of tt__NetworkHost src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkHost(tt__NetworkHost*) deep deletes tt__NetworkHost data members, use only on dst after soap_dup_tt__NetworkHost(NULL, tt__NetworkHost *dst, tt__NetworkHost *src) (use soapcpp2 -Ed)
struct tt__NetworkHost
{
/// <PRE><BLOCKQUOTE>
///   Network host type: IPv4, IPv6 or DNS.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":NetworkHostType.
    enum tt__NetworkHostType             Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      IPv6Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "DNSname" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          DNSname                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkHostExtension.
    struct tt__NetworkHostExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostExtension is a complexType.
///
/// @note struct tt__NetworkHostExtension operations:
/// - tt__NetworkHostExtension* soap_new_tt__NetworkHostExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkHostExtension(struct soap*, tt__NetworkHostExtension*) default initialize members
/// - int soap_read_tt__NetworkHostExtension(struct soap*, tt__NetworkHostExtension*) deserialize from a source
/// - int soap_write_tt__NetworkHostExtension(struct soap*, tt__NetworkHostExtension*) serialize to a sink
/// - tt__NetworkHostExtension* soap_dup_tt__NetworkHostExtension(struct soap*, tt__NetworkHostExtension* dst, tt__NetworkHostExtension *src) returns deep copy of tt__NetworkHostExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkHostExtension(tt__NetworkHostExtension*) deep deletes tt__NetworkHostExtension data members, use only on dst after soap_dup_tt__NetworkHostExtension(NULL, tt__NetworkHostExtension *dst, tt__NetworkHostExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkHostExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
///
/// @note struct tt__IPAddress operations:
/// - tt__IPAddress* soap_new_tt__IPAddress(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPAddress(struct soap*, tt__IPAddress*) default initialize members
/// - int soap_read_tt__IPAddress(struct soap*, tt__IPAddress*) deserialize from a source
/// - int soap_write_tt__IPAddress(struct soap*, tt__IPAddress*) serialize to a sink
/// - tt__IPAddress* soap_dup_tt__IPAddress(struct soap*, tt__IPAddress* dst, tt__IPAddress *src) returns deep copy of tt__IPAddress src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPAddress(tt__IPAddress*) deep deletes tt__IPAddress data members, use only on dst after soap_dup_tt__IPAddress(NULL, tt__IPAddress *dst, tt__IPAddress *src) (use soapcpp2 -Ed)
struct tt__IPAddress
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the address is an IPv4 or IPv6 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":IPType.
    enum tt__IPType                      Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      IPv6Address                    0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is a complexType.
///
/// @note struct tt__PrefixedIPv4Address operations:
/// - tt__PrefixedIPv4Address* soap_new_tt__PrefixedIPv4Address(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address*) default initialize members
/// - int soap_read_tt__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address*) deserialize from a source
/// - int soap_write_tt__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address*) serialize to a sink
/// - tt__PrefixedIPv4Address* soap_dup_tt__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address* dst, tt__PrefixedIPv4Address *src) returns deep copy of tt__PrefixedIPv4Address src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PrefixedIPv4Address(tt__PrefixedIPv4Address*) deep deletes tt__PrefixedIPv4Address data members, use only on dst after soap_dup_tt__PrefixedIPv4Address(NULL, tt__PrefixedIPv4Address *dst, tt__PrefixedIPv4Address *src) (use soapcpp2 -Ed)
struct tt__PrefixedIPv4Address
{
/// <PRE><BLOCKQUOTE>
///   IPv4 address
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
///
/// Element "PrefixLength" of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is a complexType.
///
/// @note struct tt__PrefixedIPv6Address operations:
/// - tt__PrefixedIPv6Address* soap_new_tt__PrefixedIPv6Address(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address*) default initialize members
/// - int soap_read_tt__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address*) deserialize from a source
/// - int soap_write_tt__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address*) serialize to a sink
/// - tt__PrefixedIPv6Address* soap_dup_tt__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address* dst, tt__PrefixedIPv6Address *src) returns deep copy of tt__PrefixedIPv6Address src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PrefixedIPv6Address(tt__PrefixedIPv6Address*) deep deletes tt__PrefixedIPv6Address data members, use only on dst after soap_dup_tt__PrefixedIPv6Address(NULL, tt__PrefixedIPv6Address *dst, tt__PrefixedIPv6Address *src) (use soapcpp2 -Ed)
struct tt__PrefixedIPv6Address
{
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
///
/// Element "PrefixLength" of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformation is a complexType.
///
/// @note struct tt__HostnameInformation operations:
/// - tt__HostnameInformation* soap_new_tt__HostnameInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__HostnameInformation(struct soap*, tt__HostnameInformation*) default initialize members
/// - int soap_read_tt__HostnameInformation(struct soap*, tt__HostnameInformation*) deserialize from a source
/// - int soap_write_tt__HostnameInformation(struct soap*, tt__HostnameInformation*) serialize to a sink
/// - tt__HostnameInformation* soap_dup_tt__HostnameInformation(struct soap*, tt__HostnameInformation* dst, tt__HostnameInformation *src) returns deep copy of tt__HostnameInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__HostnameInformation(tt__HostnameInformation*) deep deletes tt__HostnameInformation data members, use only on dst after soap_dup_tt__HostnameInformation(NULL, tt__HostnameInformation *dst, tt__HostnameInformation *src) (use soapcpp2 -Ed)
struct tt__HostnameInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether the hostname is obtained from DHCP or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the hostname.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:token.
    xsd__token                           Name                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":HostnameInformationExtension.
    struct tt__HostnameInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformationExtension is a complexType.
///
/// @note struct tt__HostnameInformationExtension operations:
/// - tt__HostnameInformationExtension* soap_new_tt__HostnameInformationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension*) default initialize members
/// - int soap_read_tt__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension*) deserialize from a source
/// - int soap_write_tt__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension*) serialize to a sink
/// - tt__HostnameInformationExtension* soap_dup_tt__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension* dst, tt__HostnameInformationExtension *src) returns deep copy of tt__HostnameInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__HostnameInformationExtension(tt__HostnameInformationExtension*) deep deletes tt__HostnameInformationExtension data members, use only on dst after soap_dup_tt__HostnameInformationExtension(NULL, tt__HostnameInformationExtension *dst, tt__HostnameInformationExtension *src) (use soapcpp2 -Ed)
struct tt__HostnameInformationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformation is a complexType.
///
/// @note struct tt__DNSInformation operations:
/// - tt__DNSInformation* soap_new_tt__DNSInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DNSInformation(struct soap*, tt__DNSInformation*) default initialize members
/// - int soap_read_tt__DNSInformation(struct soap*, tt__DNSInformation*) deserialize from a source
/// - int soap_write_tt__DNSInformation(struct soap*, tt__DNSInformation*) serialize to a sink
/// - tt__DNSInformation* soap_dup_tt__DNSInformation(struct soap*, tt__DNSInformation* dst, tt__DNSInformation *src) returns deep copy of tt__DNSInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DNSInformation(tt__DNSInformation*) deep deletes tt__DNSInformation data members, use only on dst after soap_dup_tt__DNSInformation(NULL, tt__DNSInformation *dst, tt__DNSInformation *src) (use soapcpp2 -Ed)
struct tt__DNSInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DNS information is retrieved from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Search domain.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__token* is 0..unbounded.
  $ int                                  __sizeSearchDomain             0;
/// Array xsd__token* of size 0..unbounded.
    xsd__token*                          SearchDomain                   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of DNS addresses received from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__IPAddress* is 0..unbounded.
  $ int                                  __sizeDNSFromDHCP              0;
/// Array struct tt__IPAddress* of size 0..unbounded.
    struct tt__IPAddress*                DNSFromDHCP                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of manually entered DNS addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__IPAddress* is 0..unbounded.
  $ int                                  __sizeDNSManual                0;
/// Array struct tt__IPAddress* of size 0..unbounded.
    struct tt__IPAddress*                DNSManual                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DNSInformationExtension.
    struct tt__DNSInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformationExtension is a complexType.
///
/// @note struct tt__DNSInformationExtension operations:
/// - tt__DNSInformationExtension* soap_new_tt__DNSInformationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DNSInformationExtension(struct soap*, tt__DNSInformationExtension*) default initialize members
/// - int soap_read_tt__DNSInformationExtension(struct soap*, tt__DNSInformationExtension*) deserialize from a source
/// - int soap_write_tt__DNSInformationExtension(struct soap*, tt__DNSInformationExtension*) serialize to a sink
/// - tt__DNSInformationExtension* soap_dup_tt__DNSInformationExtension(struct soap*, tt__DNSInformationExtension* dst, tt__DNSInformationExtension *src) returns deep copy of tt__DNSInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DNSInformationExtension(tt__DNSInformationExtension*) deep deletes tt__DNSInformationExtension data members, use only on dst after soap_dup_tt__DNSInformationExtension(NULL, tt__DNSInformationExtension *dst, tt__DNSInformationExtension *src) (use soapcpp2 -Ed)
struct tt__DNSInformationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformation is a complexType.
///
/// @note struct tt__NTPInformation operations:
/// - tt__NTPInformation* soap_new_tt__NTPInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NTPInformation(struct soap*, tt__NTPInformation*) default initialize members
/// - int soap_read_tt__NTPInformation(struct soap*, tt__NTPInformation*) deserialize from a source
/// - int soap_write_tt__NTPInformation(struct soap*, tt__NTPInformation*) serialize to a sink
/// - tt__NTPInformation* soap_dup_tt__NTPInformation(struct soap*, tt__NTPInformation* dst, tt__NTPInformation *src) returns deep copy of tt__NTPInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NTPInformation(tt__NTPInformation*) deep deletes tt__NTPInformation data members, use only on dst after soap_dup_tt__NTPInformation(NULL, tt__NTPInformation *dst, tt__NTPInformation *src) (use soapcpp2 -Ed)
struct tt__NTPInformation
{
/// <PRE><BLOCKQUOTE>
///   Indicates if NTP information is to be retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    enum xsd__boolean                    FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of NTP addresses retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeNTPFromDHCP              0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              NTPFromDHCP                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of manually entered NTP addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeNTPManual                0;
/// Array struct tt__NetworkHost* of size 0..unbounded.
    struct tt__NetworkHost*              NTPManual                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NTPInformationExtension.
    struct tt__NTPInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformationExtension is a complexType.
///
/// @note struct tt__NTPInformationExtension operations:
/// - tt__NTPInformationExtension* soap_new_tt__NTPInformationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NTPInformationExtension(struct soap*, tt__NTPInformationExtension*) default initialize members
/// - int soap_read_tt__NTPInformationExtension(struct soap*, tt__NTPInformationExtension*) deserialize from a source
/// - int soap_write_tt__NTPInformationExtension(struct soap*, tt__NTPInformationExtension*) serialize to a sink
/// - tt__NTPInformationExtension* soap_dup_tt__NTPInformationExtension(struct soap*, tt__NTPInformationExtension* dst, tt__NTPInformationExtension *src) returns deep copy of tt__NTPInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NTPInformationExtension(tt__NTPInformationExtension*) deep deletes tt__NTPInformationExtension data members, use only on dst after soap_dup_tt__NTPInformationExtension(NULL, tt__NTPInformationExtension *dst, tt__NTPInformationExtension *src) (use soapcpp2 -Ed)
struct tt__NTPInformationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformation is a complexType.
///
/// @note struct tt__DynamicDNSInformation operations:
/// - tt__DynamicDNSInformation* soap_new_tt__DynamicDNSInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation*) default initialize members
/// - int soap_read_tt__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation*) deserialize from a source
/// - int soap_write_tt__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation*) serialize to a sink
/// - tt__DynamicDNSInformation* soap_dup_tt__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation* dst, tt__DynamicDNSInformation *src) returns deep copy of tt__DynamicDNSInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DynamicDNSInformation(tt__DynamicDNSInformation*) deep deletes tt__DynamicDNSInformation data members, use only on dst after soap_dup_tt__DynamicDNSInformation(NULL, tt__DynamicDNSInformation *dst, tt__DynamicDNSInformation *src) (use soapcpp2 -Ed)
struct tt__DynamicDNSInformation
{
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Time to live.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:duration.
    xsd__duration                        TTL                            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension.
    struct tt__DynamicDNSInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is a complexType.
///
/// @note struct tt__DynamicDNSInformationExtension operations:
/// - tt__DynamicDNSInformationExtension* soap_new_tt__DynamicDNSInformationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension*) default initialize members
/// - int soap_read_tt__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension*) deserialize from a source
/// - int soap_write_tt__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension*) serialize to a sink
/// - tt__DynamicDNSInformationExtension* soap_dup_tt__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension* dst, tt__DynamicDNSInformationExtension *src) returns deep copy of tt__DynamicDNSInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DynamicDNSInformationExtension(tt__DynamicDNSInformationExtension*) deep deletes tt__DynamicDNSInformationExtension data members, use only on dst after soap_dup_tt__DynamicDNSInformationExtension(NULL, tt__DynamicDNSInformationExtension *dst, tt__DynamicDNSInformationExtension *src) (use soapcpp2 -Ed)
struct tt__DynamicDNSInformationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is a complexType.
///
/// @note struct tt__NetworkInterfaceSetConfiguration operations:
/// - tt__NetworkInterfaceSetConfiguration* soap_new_tt__NetworkInterfaceSetConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration*) default initialize members
/// - int soap_read_tt__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration*) serialize to a sink
/// - tt__NetworkInterfaceSetConfiguration* soap_dup_tt__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration* dst, tt__NetworkInterfaceSetConfiguration *src) returns deep copy of tt__NetworkInterfaceSetConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceSetConfiguration(tt__NetworkInterfaceSetConfiguration*) deep deletes tt__NetworkInterfaceSetConfiguration data members, use only on dst after soap_dup_tt__NetworkInterfaceSetConfiguration(NULL, tt__NetworkInterfaceSetConfiguration *dst, tt__NetworkInterfaceSetConfiguration *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Link" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    struct tt__NetworkInterfaceConnectionSetting*  Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "MTU" of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4" of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration.
    struct tt__IPv4NetworkInterfaceSetConfiguration*  IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6" of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration.
    struct tt__IPv6NetworkInterfaceSetConfiguration*  IPv6                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension.
    struct tt__NetworkInterfaceSetConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is a complexType.
///
/// @note struct tt__NetworkInterfaceSetConfigurationExtension operations:
/// - tt__NetworkInterfaceSetConfigurationExtension* soap_new_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension*) default initialize members
/// - int soap_read_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension*) serialize to a sink
/// - tt__NetworkInterfaceSetConfigurationExtension* soap_dup_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension* dst, tt__NetworkInterfaceSetConfigurationExtension *src) returns deep copy of tt__NetworkInterfaceSetConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceSetConfigurationExtension(tt__NetworkInterfaceSetConfigurationExtension*) deep deletes tt__NetworkInterfaceSetConfigurationExtension data members, use only on dst after soap_dup_tt__NetworkInterfaceSetConfigurationExtension(NULL, tt__NetworkInterfaceSetConfigurationExtension *dst, tt__NetworkInterfaceSetConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceSetConfigurationExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of array of struct tt__Dot3Configuration* is 0..unbounded.
  $ int                                  __sizeDot3                     0;
/// Array struct tt__Dot3Configuration* of size 0..unbounded.
    struct tt__Dot3Configuration*        Dot3                           0;	///< Multiple elements.
/// Size of array of struct tt__Dot11Configuration* is 0..unbounded.
  $ int                                  __sizeDot11                    0;
/// Array struct tt__Dot11Configuration* of size 0..unbounded.
    struct tt__Dot11Configuration*       Dot11                          0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2.
    struct tt__NetworkInterfaceSetConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is a complexType.
///
/// @note struct tt__IPv6NetworkInterfaceSetConfiguration operations:
/// - tt__IPv6NetworkInterfaceSetConfiguration* soap_new_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration*) default initialize members
/// - int soap_read_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration*) deserialize from a source
/// - int soap_write_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration*) serialize to a sink
/// - tt__IPv6NetworkInterfaceSetConfiguration* soap_dup_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration* dst, tt__IPv6NetworkInterfaceSetConfiguration *src) returns deep copy of tt__IPv6NetworkInterfaceSetConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv6NetworkInterfaceSetConfiguration(tt__IPv6NetworkInterfaceSetConfiguration*) deep deletes tt__IPv6NetworkInterfaceSetConfiguration data members, use only on dst after soap_dup_tt__IPv6NetworkInterfaceSetConfiguration(NULL, tt__IPv6NetworkInterfaceSetConfiguration *dst, tt__IPv6NetworkInterfaceSetConfiguration *src) (use soapcpp2 -Ed)
struct tt__IPv6NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "AcceptRouterAdvert" of type xs:boolean.
    enum xsd__boolean*                   AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration*      DHCP                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is a complexType.
///
/// @note struct tt__IPv4NetworkInterfaceSetConfiguration operations:
/// - tt__IPv4NetworkInterfaceSetConfiguration* soap_new_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration*) default initialize members
/// - int soap_read_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration*) deserialize from a source
/// - int soap_write_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration*) serialize to a sink
/// - tt__IPv4NetworkInterfaceSetConfiguration* soap_dup_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration* dst, tt__IPv4NetworkInterfaceSetConfiguration *src) returns deep copy of tt__IPv4NetworkInterfaceSetConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPv4NetworkInterfaceSetConfiguration(tt__IPv4NetworkInterfaceSetConfiguration*) deep deletes tt__IPv4NetworkInterfaceSetConfiguration data members, use only on dst after soap_dup_tt__IPv4NetworkInterfaceSetConfiguration(NULL, tt__IPv4NetworkInterfaceSetConfiguration *dst, tt__IPv4NetworkInterfaceSetConfiguration *src) (use soapcpp2 -Ed)
struct tt__IPv4NetworkInterfaceSetConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean*                   Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
  $ int                                  __sizeManual                   0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type xs:boolean.
    enum xsd__boolean*                   DHCP                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkGateway is a complexType.
///
/// @note struct tt__NetworkGateway operations:
/// - tt__NetworkGateway* soap_new_tt__NetworkGateway(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkGateway(struct soap*, tt__NetworkGateway*) default initialize members
/// - int soap_read_tt__NetworkGateway(struct soap*, tt__NetworkGateway*) deserialize from a source
/// - int soap_write_tt__NetworkGateway(struct soap*, tt__NetworkGateway*) serialize to a sink
/// - tt__NetworkGateway* soap_dup_tt__NetworkGateway(struct soap*, tt__NetworkGateway* dst, tt__NetworkGateway *src) returns deep copy of tt__NetworkGateway src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkGateway(tt__NetworkGateway*) deep deletes tt__NetworkGateway data members, use only on dst after soap_dup_tt__NetworkGateway(NULL, tt__NetworkGateway *dst, tt__NetworkGateway *src) (use soapcpp2 -Ed)
struct tt__NetworkGateway
{
/// <PRE><BLOCKQUOTE>
///   IPv4 address string.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv4Address* is 0..unbounded.
  $ int                                  __sizeIPv4Address              0;
/// Array tt__IPv4Address* of size 0..unbounded.
    tt__IPv4Address*                     IPv4Address                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   IPv6 address string.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv6Address* is 0..unbounded.
  $ int                                  __sizeIPv6Address              0;
/// Array tt__IPv6Address* of size 0..unbounded.
    tt__IPv6Address*                     IPv6Address                    0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is a complexType.
///
/// @note struct tt__NetworkZeroConfiguration operations:
/// - tt__NetworkZeroConfiguration* soap_new_tt__NetworkZeroConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration*) default initialize members
/// - int soap_read_tt__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration*) deserialize from a source
/// - int soap_write_tt__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration*) serialize to a sink
/// - tt__NetworkZeroConfiguration* soap_dup_tt__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration* dst, tt__NetworkZeroConfiguration *src) returns deep copy of tt__NetworkZeroConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkZeroConfiguration(tt__NetworkZeroConfiguration*) deep deletes tt__NetworkZeroConfiguration data members, use only on dst after soap_dup_tt__NetworkZeroConfiguration(NULL, tt__NetworkZeroConfiguration *dst, tt__NetworkZeroConfiguration *src) (use soapcpp2 -Ed)
struct tt__NetworkZeroConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier of network interface.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the zero-configuration is enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The zero-configuration IPv4 address(es)
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv4Address* is 0..unbounded.
  $ int                                  __sizeAddresses                0;
/// Array tt__IPv4Address* of size 0..unbounded.
    tt__IPv4Address*                     Addresses                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension.
    struct tt__NetworkZeroConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is a complexType.
///
/// @note struct tt__NetworkZeroConfigurationExtension operations:
/// - tt__NetworkZeroConfigurationExtension* soap_new_tt__NetworkZeroConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension*) default initialize members
/// - int soap_read_tt__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension*) serialize to a sink
/// - tt__NetworkZeroConfigurationExtension* soap_dup_tt__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension* dst, tt__NetworkZeroConfigurationExtension *src) returns deep copy of tt__NetworkZeroConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkZeroConfigurationExtension(tt__NetworkZeroConfigurationExtension*) deep deletes tt__NetworkZeroConfigurationExtension data members, use only on dst after soap_dup_tt__NetworkZeroConfigurationExtension(NULL, tt__NetworkZeroConfigurationExtension *dst, tt__NetworkZeroConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkZeroConfigurationExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional array holding the configuration for the second and possibly further interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__NetworkZeroConfiguration* is 0..unbounded.
  $ int                                  __sizeAdditional               0;
/// Array struct tt__NetworkZeroConfiguration* of size 0..unbounded.
    struct tt__NetworkZeroConfiguration*  Additional                     0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2.
    struct tt__NetworkZeroConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2 is a complexType.
///
/// @note struct tt__NetworkZeroConfigurationExtension2 operations:
/// - tt__NetworkZeroConfigurationExtension2* soap_new_tt__NetworkZeroConfigurationExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2*) default initialize members
/// - int soap_read_tt__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2*) deserialize from a source
/// - int soap_write_tt__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2*) serialize to a sink
/// - tt__NetworkZeroConfigurationExtension2* soap_dup_tt__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2* dst, tt__NetworkZeroConfigurationExtension2 *src) returns deep copy of tt__NetworkZeroConfigurationExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkZeroConfigurationExtension2(tt__NetworkZeroConfigurationExtension2*) deep deletes tt__NetworkZeroConfigurationExtension2 data members, use only on dst after soap_dup_tt__NetworkZeroConfigurationExtension2(NULL, tt__NetworkZeroConfigurationExtension2 *dst, tt__NetworkZeroConfigurationExtension2 *src) (use soapcpp2 -Ed)
struct tt__NetworkZeroConfigurationExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilter is a complexType.
///
/// @note struct tt__IPAddressFilter operations:
/// - tt__IPAddressFilter* soap_new_tt__IPAddressFilter(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPAddressFilter(struct soap*, tt__IPAddressFilter*) default initialize members
/// - int soap_read_tt__IPAddressFilter(struct soap*, tt__IPAddressFilter*) deserialize from a source
/// - int soap_write_tt__IPAddressFilter(struct soap*, tt__IPAddressFilter*) serialize to a sink
/// - tt__IPAddressFilter* soap_dup_tt__IPAddressFilter(struct soap*, tt__IPAddressFilter* dst, tt__IPAddressFilter *src) returns deep copy of tt__IPAddressFilter src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPAddressFilter(tt__IPAddressFilter*) deep deletes tt__IPAddressFilter data members, use only on dst after soap_dup_tt__IPAddressFilter(NULL, tt__IPAddressFilter *dst, tt__IPAddressFilter *src) (use soapcpp2 -Ed)
struct tt__IPAddressFilter
{
/// Element "Type" of type "http://www.onvif.org/ver10/schema":IPAddressFilterType.
    enum tt__IPAddressFilterType         Type                           1;	///< Required element.
/// Size of array of struct tt__PrefixedIPv4Address* is 0..unbounded.
  $ int                                  __sizeIPv4Address              0;
/// Array struct tt__PrefixedIPv4Address* of size 0..unbounded.
    struct tt__PrefixedIPv4Address*      IPv4Address                    0;	///< Multiple elements.
/// Size of array of struct tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeIPv6Address              0;
/// Array struct tt__PrefixedIPv6Address* of size 0..unbounded.
    struct tt__PrefixedIPv6Address*      IPv6Address                    0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IPAddressFilterExtension.
    struct tt__IPAddressFilterExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is a complexType.
///
/// @note struct tt__IPAddressFilterExtension operations:
/// - tt__IPAddressFilterExtension* soap_new_tt__IPAddressFilterExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension*) default initialize members
/// - int soap_read_tt__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension*) deserialize from a source
/// - int soap_write_tt__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension*) serialize to a sink
/// - tt__IPAddressFilterExtension* soap_dup_tt__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension* dst, tt__IPAddressFilterExtension *src) returns deep copy of tt__IPAddressFilterExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPAddressFilterExtension(tt__IPAddressFilterExtension*) deep deletes tt__IPAddressFilterExtension data members, use only on dst after soap_dup_tt__IPAddressFilterExtension(NULL, tt__IPAddressFilterExtension *dst, tt__IPAddressFilterExtension *src) (use soapcpp2 -Ed)
struct tt__IPAddressFilterExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Configuration is a complexType.
///
/// @note struct tt__Dot11Configuration operations:
/// - tt__Dot11Configuration* soap_new_tt__Dot11Configuration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11Configuration(struct soap*, tt__Dot11Configuration*) default initialize members
/// - int soap_read_tt__Dot11Configuration(struct soap*, tt__Dot11Configuration*) deserialize from a source
/// - int soap_write_tt__Dot11Configuration(struct soap*, tt__Dot11Configuration*) serialize to a sink
/// - tt__Dot11Configuration* soap_dup_tt__Dot11Configuration(struct soap*, tt__Dot11Configuration* dst, tt__Dot11Configuration *src) returns deep copy of tt__Dot11Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11Configuration(tt__Dot11Configuration*) deep deletes tt__Dot11Configuration data members, use only on dst after soap_dup_tt__Dot11Configuration(NULL, tt__Dot11Configuration *dst, tt__Dot11Configuration *src) (use soapcpp2 -Ed)
struct tt__Dot11Configuration
{
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":Dot11StationMode.
    enum tt__Dot11StationMode            Mode                           1;	///< Required element.
/// Element "Alias" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Alias                          1;	///< Required element.
/// Element "Priority" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority.
    tt__NetworkInterfaceConfigPriority   Priority                       1;	///< Required element.
/// Element "Security" of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration.
    struct tt__Dot11SecurityConfiguration*  Security                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration is a complexType.
///
/// @note struct tt__Dot11SecurityConfiguration operations:
/// - tt__Dot11SecurityConfiguration* soap_new_tt__Dot11SecurityConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration*) default initialize members
/// - int soap_read_tt__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration*) deserialize from a source
/// - int soap_write_tt__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration*) serialize to a sink
/// - tt__Dot11SecurityConfiguration* soap_dup_tt__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration* dst, tt__Dot11SecurityConfiguration *src) returns deep copy of tt__Dot11SecurityConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11SecurityConfiguration(tt__Dot11SecurityConfiguration*) deep deletes tt__Dot11SecurityConfiguration data members, use only on dst after soap_dup_tt__Dot11SecurityConfiguration(NULL, tt__Dot11SecurityConfiguration *dst, tt__Dot11SecurityConfiguration *src) (use soapcpp2 -Ed)
struct tt__Dot11SecurityConfiguration
{
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":Dot11SecurityMode.
    enum tt__Dot11SecurityMode           Mode                           1;	///< Required element.
/// Element "Algorithm" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                Algorithm                      0;	///< Optional element.
/// Element "PSK" of type "http://www.onvif.org/ver10/schema":Dot11PSKSet.
    struct tt__Dot11PSKSet*              PSK                            0;	///< Optional element.
/// Element "Dot1X" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1X                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension.
    struct tt__Dot11SecurityConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension is a complexType.
///
/// @note struct tt__Dot11SecurityConfigurationExtension operations:
/// - tt__Dot11SecurityConfigurationExtension* soap_new_tt__Dot11SecurityConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension*) default initialize members
/// - int soap_read_tt__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension*) serialize to a sink
/// - tt__Dot11SecurityConfigurationExtension* soap_dup_tt__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension* dst, tt__Dot11SecurityConfigurationExtension *src) returns deep copy of tt__Dot11SecurityConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11SecurityConfigurationExtension(tt__Dot11SecurityConfigurationExtension*) deep deletes tt__Dot11SecurityConfigurationExtension data members, use only on dst after soap_dup_tt__Dot11SecurityConfigurationExtension(NULL, tt__Dot11SecurityConfigurationExtension *dst, tt__Dot11SecurityConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__Dot11SecurityConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSet is a complexType.
///
/// @note struct tt__Dot11PSKSet operations:
/// - tt__Dot11PSKSet* soap_new_tt__Dot11PSKSet(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11PSKSet(struct soap*, tt__Dot11PSKSet*) default initialize members
/// - int soap_read_tt__Dot11PSKSet(struct soap*, tt__Dot11PSKSet*) deserialize from a source
/// - int soap_write_tt__Dot11PSKSet(struct soap*, tt__Dot11PSKSet*) serialize to a sink
/// - tt__Dot11PSKSet* soap_dup_tt__Dot11PSKSet(struct soap*, tt__Dot11PSKSet* dst, tt__Dot11PSKSet *src) returns deep copy of tt__Dot11PSKSet src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11PSKSet(tt__Dot11PSKSet*) deep deletes tt__Dot11PSKSet data members, use only on dst after soap_dup_tt__Dot11PSKSet(NULL, tt__Dot11PSKSet *dst, tt__Dot11PSKSet *src) (use soapcpp2 -Ed)
struct tt__Dot11PSKSet
{
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of 256 bits, or 64 octets when represented in hex<br/>
///   Either Key or Passphrase shall be given, if both are supplied Key shall be used by the device and Passphrase ignored.
/// </BLOCKQUOTE></PRE>
///
/// Element "Key" of type "http://www.onvif.org/ver10/schema":Dot11PSK.
    tt__Dot11PSK                         Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence of between 8 and 63 ASCII-encoded characters and
///   each character in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive.<br/>
///   If only Passpharse is supplied the Key shall be derived using the algorithm described in IEEE802.11-2007 section H.4
/// </BLOCKQUOTE></PRE>
///
/// Element "Passphrase" of type "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase.
    tt__Dot11PSKPassphrase               Passphrase                     0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension.
    struct tt__Dot11PSKSetExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension is a complexType.
///
/// @note struct tt__Dot11PSKSetExtension operations:
/// - tt__Dot11PSKSetExtension* soap_new_tt__Dot11PSKSetExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension*) default initialize members
/// - int soap_read_tt__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension*) deserialize from a source
/// - int soap_write_tt__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension*) serialize to a sink
/// - tt__Dot11PSKSetExtension* soap_dup_tt__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension* dst, tt__Dot11PSKSetExtension *src) returns deep copy of tt__Dot11PSKSetExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11PSKSetExtension(tt__Dot11PSKSetExtension*) deep deletes tt__Dot11PSKSetExtension data members, use only on dst after soap_dup_tt__Dot11PSKSetExtension(NULL, tt__Dot11PSKSetExtension *dst, tt__Dot11PSKSetExtension *src) (use soapcpp2 -Ed)
struct tt__Dot11PSKSetExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2 is a complexType.
///
/// @note struct tt__NetworkInterfaceSetConfigurationExtension2 operations:
/// - tt__NetworkInterfaceSetConfigurationExtension2* soap_new_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2*) default initialize members
/// - int soap_read_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2*) deserialize from a source
/// - int soap_write_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2*) serialize to a sink
/// - tt__NetworkInterfaceSetConfigurationExtension2* soap_dup_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2* dst, tt__NetworkInterfaceSetConfigurationExtension2 *src) returns deep copy of tt__NetworkInterfaceSetConfigurationExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterfaceSetConfigurationExtension2(tt__NetworkInterfaceSetConfigurationExtension2*) deep deletes tt__NetworkInterfaceSetConfigurationExtension2 data members, use only on dst after soap_dup_tt__NetworkInterfaceSetConfigurationExtension2(NULL, tt__NetworkInterfaceSetConfigurationExtension2 *dst, tt__NetworkInterfaceSetConfigurationExtension2 *src) (use soapcpp2 -Ed)
struct tt__NetworkInterfaceSetConfigurationExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Capabilities is a complexType.
///
/// @note struct tt__Dot11Capabilities operations:
/// - tt__Dot11Capabilities* soap_new_tt__Dot11Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11Capabilities(struct soap*, tt__Dot11Capabilities*) default initialize members
/// - int soap_read_tt__Dot11Capabilities(struct soap*, tt__Dot11Capabilities*) deserialize from a source
/// - int soap_write_tt__Dot11Capabilities(struct soap*, tt__Dot11Capabilities*) serialize to a sink
/// - tt__Dot11Capabilities* soap_dup_tt__Dot11Capabilities(struct soap*, tt__Dot11Capabilities* dst, tt__Dot11Capabilities *src) returns deep copy of tt__Dot11Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11Capabilities(tt__Dot11Capabilities*) deep deletes tt__Dot11Capabilities data members, use only on dst after soap_dup_tt__Dot11Capabilities(NULL, tt__Dot11Capabilities *dst, tt__Dot11Capabilities *src) (use soapcpp2 -Ed)
struct tt__Dot11Capabilities
{
/// Element "TKIP" of type xs:boolean.
    enum xsd__boolean                    TKIP                           1;	///< Required element.
/// Element "ScanAvailableNetworks" of type xs:boolean.
    enum xsd__boolean                    ScanAvailableNetworks          1;	///< Required element.
/// Element "MultipleConfiguration" of type xs:boolean.
    enum xsd__boolean                    MultipleConfiguration          1;	///< Required element.
/// Element "AdHocStationMode" of type xs:boolean.
    enum xsd__boolean                    AdHocStationMode               1;	///< Required element.
/// Element "WEP" of type xs:boolean.
    enum xsd__boolean                    WEP                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Status is a complexType.
///
/// @note struct tt__Dot11Status operations:
/// - tt__Dot11Status* soap_new_tt__Dot11Status(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11Status(struct soap*, tt__Dot11Status*) default initialize members
/// - int soap_read_tt__Dot11Status(struct soap*, tt__Dot11Status*) deserialize from a source
/// - int soap_write_tt__Dot11Status(struct soap*, tt__Dot11Status*) serialize to a sink
/// - tt__Dot11Status* soap_dup_tt__Dot11Status(struct soap*, tt__Dot11Status* dst, tt__Dot11Status *src) returns deep copy of tt__Dot11Status src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11Status(tt__Dot11Status*) deep deletes tt__Dot11Status data members, use only on dst after soap_dup_tt__Dot11Status(NULL, tt__Dot11Status *dst, tt__Dot11Status *src) (use soapcpp2 -Ed)
struct tt__Dot11Status
{
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of type xs:string.
    char*                                BSSID                          0;	///< Optional element.
/// Element "PairCipher" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                PairCipher                     0;	///< Optional element.
/// Element "GroupCipher" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                GroupCipher                    0;	///< Optional element.
/// Element "SignalStrength" of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "ActiveConfigAlias" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ActiveConfigAlias              1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworks is a complexType.
///
/// @note struct tt__Dot11AvailableNetworks operations:
/// - tt__Dot11AvailableNetworks* soap_new_tt__Dot11AvailableNetworks(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks*) default initialize members
/// - int soap_read_tt__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks*) deserialize from a source
/// - int soap_write_tt__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks*) serialize to a sink
/// - tt__Dot11AvailableNetworks* soap_dup_tt__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks* dst, tt__Dot11AvailableNetworks *src) returns deep copy of tt__Dot11AvailableNetworks src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11AvailableNetworks(tt__Dot11AvailableNetworks*) deep deletes tt__Dot11AvailableNetworks data members, use only on dst after soap_dup_tt__Dot11AvailableNetworks(NULL, tt__Dot11AvailableNetworks *dst, tt__Dot11AvailableNetworks *src) (use soapcpp2 -Ed)
struct tt__Dot11AvailableNetworks
{
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of type xs:string.
    char*                                BSSID                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   See IEEE802.11 7.3.2.25.2 for details.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__Dot11AuthAndMangementSuite* is 0..unbounded.
  $ int                                  __sizeAuthAndMangementSuite    0;
/// Array enum tt__Dot11AuthAndMangementSuite* of size 0..unbounded.
    enum tt__Dot11AuthAndMangementSuite*  AuthAndMangementSuite          0;	///< Multiple elements.
/// Size of array of enum tt__Dot11Cipher* is 0..unbounded.
  $ int                                  __sizePairCipher               0;
/// Array enum tt__Dot11Cipher* of size 0..unbounded.
    enum tt__Dot11Cipher*                PairCipher                     0;	///< Multiple elements.
/// Size of array of enum tt__Dot11Cipher* is 0..unbounded.
  $ int                                  __sizeGroupCipher              0;
/// Array enum tt__Dot11Cipher* of size 0..unbounded.
    enum tt__Dot11Cipher*                GroupCipher                    0;	///< Multiple elements.
/// Element "SignalStrength" of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension.
    struct tt__Dot11AvailableNetworksExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension is a complexType.
///
/// @note struct tt__Dot11AvailableNetworksExtension operations:
/// - tt__Dot11AvailableNetworksExtension* soap_new_tt__Dot11AvailableNetworksExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension*) default initialize members
/// - int soap_read_tt__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension*) deserialize from a source
/// - int soap_write_tt__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension*) serialize to a sink
/// - tt__Dot11AvailableNetworksExtension* soap_dup_tt__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension* dst, tt__Dot11AvailableNetworksExtension *src) returns deep copy of tt__Dot11AvailableNetworksExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot11AvailableNetworksExtension(tt__Dot11AvailableNetworksExtension*) deep deletes tt__Dot11AvailableNetworksExtension data members, use only on dst after soap_dup_tt__Dot11AvailableNetworksExtension(NULL, tt__Dot11AvailableNetworksExtension *dst, tt__Dot11AvailableNetworksExtension *src) (use soapcpp2 -Ed)
struct tt__Dot11AvailableNetworksExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
///
/// @note struct tt__Capabilities operations:
/// - tt__Capabilities* soap_new_tt__Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Capabilities(struct soap*, tt__Capabilities*) default initialize members
/// - int soap_read_tt__Capabilities(struct soap*, tt__Capabilities*) deserialize from a source
/// - int soap_write_tt__Capabilities(struct soap*, tt__Capabilities*) serialize to a sink
/// - tt__Capabilities* soap_dup_tt__Capabilities(struct soap*, tt__Capabilities* dst, tt__Capabilities *src) returns deep copy of tt__Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Capabilities(tt__Capabilities*) deep deletes tt__Capabilities data members, use only on dst after soap_dup_tt__Capabilities(NULL, tt__Capabilities *dst, tt__Capabilities *src) (use soapcpp2 -Ed)
struct tt__Capabilities
{
/// <PRE><BLOCKQUOTE>
///   Analytics capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Analytics" of type "http://www.onvif.org/ver10/schema":AnalyticsCapabilities.
    struct tt__AnalyticsCapabilities*    Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Device capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Device" of type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    struct tt__DeviceCapabilities*       Device                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Event capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Events" of type "http://www.onvif.org/ver10/schema":EventCapabilities.
    struct tt__EventCapabilities*        Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Imaging capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Imaging" of type "http://www.onvif.org/ver10/schema":ImagingCapabilities.
    struct tt__ImagingCapabilities*      Imaging                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Media capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Media" of type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    struct tt__MediaCapabilities*        Media                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   PTZ capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZ" of type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    struct tt__PTZCapabilities*          PTZ                            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension.
    struct tt__CapabilitiesExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension is a complexType.
///
/// @note struct tt__CapabilitiesExtension operations:
/// - tt__CapabilitiesExtension* soap_new_tt__CapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension*) default initialize members
/// - int soap_read_tt__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension*) serialize to a sink
/// - tt__CapabilitiesExtension* soap_dup_tt__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension* dst, tt__CapabilitiesExtension *src) returns deep copy of tt__CapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CapabilitiesExtension(tt__CapabilitiesExtension*) deep deletes tt__CapabilitiesExtension data members, use only on dst after soap_dup_tt__CapabilitiesExtension(NULL, tt__CapabilitiesExtension *dst, tt__CapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__CapabilitiesExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "DeviceIO" of type "http://www.onvif.org/ver10/schema":DeviceIOCapabilities.
    struct tt__DeviceIOCapabilities*     DeviceIO                       0;	///< Optional element.
/// Element "Display" of type "http://www.onvif.org/ver10/schema":DisplayCapabilities.
    struct tt__DisplayCapabilities*      Display                        0;	///< Optional element.
/// Element "Recording" of type "http://www.onvif.org/ver10/schema":RecordingCapabilities.
    struct tt__RecordingCapabilities*    Recording                      0;	///< Optional element.
/// Element "Search" of type "http://www.onvif.org/ver10/schema":SearchCapabilities.
    struct tt__SearchCapabilities*       Search                         0;	///< Optional element.
/// Element "Replay" of type "http://www.onvif.org/ver10/schema":ReplayCapabilities.
    struct tt__ReplayCapabilities*       Replay                         0;	///< Optional element.
/// Element "Receiver" of type "http://www.onvif.org/ver10/schema":ReceiverCapabilities.
    struct tt__ReceiverCapabilities*     Receiver                       0;	///< Optional element.
/// Element "AnalyticsDevice" of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities.
    struct tt__AnalyticsDeviceCapabilities*  AnalyticsDevice                0;	///< Optional element.
/// Element "Extensions" of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension2.
    struct tt__CapabilitiesExtension2*   Extensions                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension2 is a complexType.
///
/// @note struct tt__CapabilitiesExtension2 operations:
/// - tt__CapabilitiesExtension2* soap_new_tt__CapabilitiesExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2*) default initialize members
/// - int soap_read_tt__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2*) serialize to a sink
/// - tt__CapabilitiesExtension2* soap_dup_tt__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2* dst, tt__CapabilitiesExtension2 *src) returns deep copy of tt__CapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CapabilitiesExtension2(tt__CapabilitiesExtension2*) deep deletes tt__CapabilitiesExtension2 data members, use only on dst after soap_dup_tt__CapabilitiesExtension2(NULL, tt__CapabilitiesExtension2 *dst, tt__CapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__CapabilitiesExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is a complexType.
///
/// @note struct tt__AnalyticsCapabilities operations:
/// - tt__AnalyticsCapabilities* soap_new_tt__AnalyticsCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities*) default initialize members
/// - int soap_read_tt__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities*) deserialize from a source
/// - int soap_write_tt__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities*) serialize to a sink
/// - tt__AnalyticsCapabilities* soap_dup_tt__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities* dst, tt__AnalyticsCapabilities *src) returns deep copy of tt__AnalyticsCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsCapabilities(tt__AnalyticsCapabilities*) deep deletes tt__AnalyticsCapabilities data members, use only on dst after soap_dup_tt__AnalyticsCapabilities(NULL, tt__AnalyticsCapabilities *dst, tt__AnalyticsCapabilities *src) (use soapcpp2 -Ed)
struct tt__AnalyticsCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Analytics service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not rules are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RuleSupport" of type xs:boolean.
    enum xsd__boolean                    RuleSupport                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not modules are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "AnalyticsModuleSupport" of type xs:boolean.
    enum xsd__boolean                    AnalyticsModuleSupport         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
///
/// @note struct tt__DeviceCapabilities operations:
/// - tt__DeviceCapabilities* soap_new_tt__DeviceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DeviceCapabilities(struct soap*, tt__DeviceCapabilities*) default initialize members
/// - int soap_read_tt__DeviceCapabilities(struct soap*, tt__DeviceCapabilities*) deserialize from a source
/// - int soap_write_tt__DeviceCapabilities(struct soap*, tt__DeviceCapabilities*) serialize to a sink
/// - tt__DeviceCapabilities* soap_dup_tt__DeviceCapabilities(struct soap*, tt__DeviceCapabilities* dst, tt__DeviceCapabilities *src) returns deep copy of tt__DeviceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DeviceCapabilities(tt__DeviceCapabilities*) deep deletes tt__DeviceCapabilities data members, use only on dst after soap_dup_tt__DeviceCapabilities(NULL, tt__DeviceCapabilities *dst, tt__DeviceCapabilities *src) (use soapcpp2 -Ed)
struct tt__DeviceCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Device service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Network" of type "http://www.onvif.org/ver10/schema":NetworkCapabilities.
    struct tt__NetworkCapabilities*      Network                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "System" of type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    struct tt__SystemCapabilities*       System                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   I/O capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "IO" of type "http://www.onvif.org/ver10/schema":IOCapabilities.
    struct tt__IOCapabilities*           IO                             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Security" of type "http://www.onvif.org/ver10/schema":SecurityCapabilities.
    struct tt__SecurityCapabilities*     Security                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension.
    struct tt__DeviceCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is a complexType.
///
/// @note struct tt__DeviceCapabilitiesExtension operations:
/// - tt__DeviceCapabilitiesExtension* soap_new_tt__DeviceCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension*) serialize to a sink
/// - tt__DeviceCapabilitiesExtension* soap_dup_tt__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension* dst, tt__DeviceCapabilitiesExtension *src) returns deep copy of tt__DeviceCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DeviceCapabilitiesExtension(tt__DeviceCapabilitiesExtension*) deep deletes tt__DeviceCapabilitiesExtension data members, use only on dst after soap_dup_tt__DeviceCapabilitiesExtension(NULL, tt__DeviceCapabilitiesExtension *dst, tt__DeviceCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__DeviceCapabilitiesExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
///
/// @note struct tt__EventCapabilities operations:
/// - tt__EventCapabilities* soap_new_tt__EventCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__EventCapabilities(struct soap*, tt__EventCapabilities*) default initialize members
/// - int soap_read_tt__EventCapabilities(struct soap*, tt__EventCapabilities*) deserialize from a source
/// - int soap_write_tt__EventCapabilities(struct soap*, tt__EventCapabilities*) serialize to a sink
/// - tt__EventCapabilities* soap_dup_tt__EventCapabilities(struct soap*, tt__EventCapabilities* dst, tt__EventCapabilities *src) returns deep copy of tt__EventCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EventCapabilities(tt__EventCapabilities*) deep deletes tt__EventCapabilities data members, use only on dst after soap_dup_tt__EventCapabilities(NULL, tt__EventCapabilities *dst, tt__EventCapabilities *src) (use soapcpp2 -Ed)
struct tt__EventCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Event service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSSubscriptionPolicySupport" of type xs:boolean.
    enum xsd__boolean                    WSSubscriptionPolicySupport    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSPullPointSupport" of type xs:boolean.
    enum xsd__boolean                    WSPullPointSupport             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSPausableSubscriptionManagerInterfaceSupport" of type xs:boolean.
    enum xsd__boolean                    WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilities is a complexType.
///
/// @note struct tt__IOCapabilities operations:
/// - tt__IOCapabilities* soap_new_tt__IOCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IOCapabilities(struct soap*, tt__IOCapabilities*) default initialize members
/// - int soap_read_tt__IOCapabilities(struct soap*, tt__IOCapabilities*) deserialize from a source
/// - int soap_write_tt__IOCapabilities(struct soap*, tt__IOCapabilities*) serialize to a sink
/// - tt__IOCapabilities* soap_dup_tt__IOCapabilities(struct soap*, tt__IOCapabilities* dst, tt__IOCapabilities *src) returns deep copy of tt__IOCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IOCapabilities(tt__IOCapabilities*) deep deletes tt__IOCapabilities data members, use only on dst after soap_dup_tt__IOCapabilities(NULL, tt__IOCapabilities *dst, tt__IOCapabilities *src) (use soapcpp2 -Ed)
struct tt__IOCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Number of input connectors.
/// </BLOCKQUOTE></PRE>
///
/// Element "InputConnectors" of type xs:int.
    int*                                 InputConnectors                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Number of relay outputs.
/// </BLOCKQUOTE></PRE>
///
/// Element "RelayOutputs" of type xs:int.
    int*                                 RelayOutputs                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension.
    struct tt__IOCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is a complexType.
///
/// @note struct tt__IOCapabilitiesExtension operations:
/// - tt__IOCapabilitiesExtension* soap_new_tt__IOCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension*) serialize to a sink
/// - tt__IOCapabilitiesExtension* soap_dup_tt__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension* dst, tt__IOCapabilitiesExtension *src) returns deep copy of tt__IOCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IOCapabilitiesExtension(tt__IOCapabilitiesExtension*) deep deletes tt__IOCapabilitiesExtension data members, use only on dst after soap_dup_tt__IOCapabilitiesExtension(NULL, tt__IOCapabilitiesExtension *dst, tt__IOCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__IOCapabilitiesExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Auxiliary" of type xs:boolean.
    enum xsd__boolean*                   Auxiliary                      0;	///< Optional element.
/// Size of array of tt__AuxiliaryData* is 0..unbounded.
  $ int                                  __sizeAuxiliaryCommands        0;
/// Array tt__AuxiliaryData* of size 0..unbounded.
    tt__AuxiliaryData*                   AuxiliaryCommands              0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2.
    struct tt__IOCapabilitiesExtension2*  Extension                      1;	///< Required element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2 is a complexType.
///
/// @note struct tt__IOCapabilitiesExtension2 operations:
/// - tt__IOCapabilitiesExtension2* soap_new_tt__IOCapabilitiesExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2*) default initialize members
/// - int soap_read_tt__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2*) serialize to a sink
/// - tt__IOCapabilitiesExtension2* soap_dup_tt__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2* dst, tt__IOCapabilitiesExtension2 *src) returns deep copy of tt__IOCapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IOCapabilitiesExtension2(tt__IOCapabilitiesExtension2*) deep deletes tt__IOCapabilitiesExtension2 data members, use only on dst after soap_dup_tt__IOCapabilitiesExtension2(NULL, tt__IOCapabilitiesExtension2 *dst, tt__IOCapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__IOCapabilitiesExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
///
/// @note struct tt__MediaCapabilities operations:
/// - tt__MediaCapabilities* soap_new_tt__MediaCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MediaCapabilities(struct soap*, tt__MediaCapabilities*) default initialize members
/// - int soap_read_tt__MediaCapabilities(struct soap*, tt__MediaCapabilities*) deserialize from a source
/// - int soap_write_tt__MediaCapabilities(struct soap*, tt__MediaCapabilities*) serialize to a sink
/// - tt__MediaCapabilities* soap_dup_tt__MediaCapabilities(struct soap*, tt__MediaCapabilities* dst, tt__MediaCapabilities *src) returns deep copy of tt__MediaCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MediaCapabilities(tt__MediaCapabilities*) deep deletes tt__MediaCapabilities data members, use only on dst after soap_dup_tt__MediaCapabilities(NULL, tt__MediaCapabilities *dst, tt__MediaCapabilities *src) (use soapcpp2 -Ed)
struct tt__MediaCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Media service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamingCapabilities" of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    struct tt__RealTimeStreamingCapabilities*  StreamingCapabilities          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    struct tt__MediaCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
///
/// @note struct tt__MediaCapabilitiesExtension operations:
/// - tt__MediaCapabilitiesExtension* soap_new_tt__MediaCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension*) serialize to a sink
/// - tt__MediaCapabilitiesExtension* soap_dup_tt__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension* dst, tt__MediaCapabilitiesExtension *src) returns deep copy of tt__MediaCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MediaCapabilitiesExtension(tt__MediaCapabilitiesExtension*) deep deletes tt__MediaCapabilitiesExtension data members, use only on dst after soap_dup_tt__MediaCapabilitiesExtension(NULL, tt__MediaCapabilitiesExtension *dst, tt__MediaCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__MediaCapabilitiesExtension
{
/// Element "ProfileCapabilities" of type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    struct tt__ProfileCapabilities*      ProfileCapabilities            1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
///
/// @note struct tt__RealTimeStreamingCapabilities operations:
/// - tt__RealTimeStreamingCapabilities* soap_new_tt__RealTimeStreamingCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities*) default initialize members
/// - int soap_read_tt__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities*) deserialize from a source
/// - int soap_write_tt__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities*) serialize to a sink
/// - tt__RealTimeStreamingCapabilities* soap_dup_tt__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities* dst, tt__RealTimeStreamingCapabilities *src) returns deep copy of tt__RealTimeStreamingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RealTimeStreamingCapabilities(tt__RealTimeStreamingCapabilities*) deep deletes tt__RealTimeStreamingCapabilities data members, use only on dst after soap_dup_tt__RealTimeStreamingCapabilities(NULL, tt__RealTimeStreamingCapabilities *dst, tt__RealTimeStreamingCapabilities *src) (use soapcpp2 -Ed)
struct tt__RealTimeStreamingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP multicast is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTPMulticast" of type xs:boolean.
    enum xsd__boolean*                   RTPMulticast                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP over TCP is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_TCP" of type xs:boolean.
    enum xsd__boolean*                   RTP_USCORETCP                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP/RTSP/TCP is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_RTSP_TCP" of type xs:boolean.
    enum xsd__boolean*                   RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension.
    struct tt__RealTimeStreamingCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is a complexType.
///
/// @note struct tt__RealTimeStreamingCapabilitiesExtension operations:
/// - tt__RealTimeStreamingCapabilitiesExtension* soap_new_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension*) serialize to a sink
/// - tt__RealTimeStreamingCapabilitiesExtension* soap_dup_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension* dst, tt__RealTimeStreamingCapabilitiesExtension *src) returns deep copy of tt__RealTimeStreamingCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RealTimeStreamingCapabilitiesExtension(tt__RealTimeStreamingCapabilitiesExtension*) deep deletes tt__RealTimeStreamingCapabilitiesExtension data members, use only on dst after soap_dup_tt__RealTimeStreamingCapabilitiesExtension(NULL, tt__RealTimeStreamingCapabilitiesExtension *dst, tt__RealTimeStreamingCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__RealTimeStreamingCapabilitiesExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
///
/// @note struct tt__ProfileCapabilities operations:
/// - tt__ProfileCapabilities* soap_new_tt__ProfileCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ProfileCapabilities(struct soap*, tt__ProfileCapabilities*) default initialize members
/// - int soap_read_tt__ProfileCapabilities(struct soap*, tt__ProfileCapabilities*) deserialize from a source
/// - int soap_write_tt__ProfileCapabilities(struct soap*, tt__ProfileCapabilities*) serialize to a sink
/// - tt__ProfileCapabilities* soap_dup_tt__ProfileCapabilities(struct soap*, tt__ProfileCapabilities* dst, tt__ProfileCapabilities *src) returns deep copy of tt__ProfileCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ProfileCapabilities(tt__ProfileCapabilities*) deep deletes tt__ProfileCapabilities data members, use only on dst after soap_dup_tt__ProfileCapabilities(NULL, tt__ProfileCapabilities *dst, tt__ProfileCapabilities *src) (use soapcpp2 -Ed)
struct tt__ProfileCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfProfiles" of type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilities is a complexType.
///
/// @note struct tt__NetworkCapabilities operations:
/// - tt__NetworkCapabilities* soap_new_tt__NetworkCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkCapabilities(struct soap*, tt__NetworkCapabilities*) default initialize members
/// - int soap_read_tt__NetworkCapabilities(struct soap*, tt__NetworkCapabilities*) deserialize from a source
/// - int soap_write_tt__NetworkCapabilities(struct soap*, tt__NetworkCapabilities*) serialize to a sink
/// - tt__NetworkCapabilities* soap_dup_tt__NetworkCapabilities(struct soap*, tt__NetworkCapabilities* dst, tt__NetworkCapabilities *src) returns deep copy of tt__NetworkCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkCapabilities(tt__NetworkCapabilities*) deep deletes tt__NetworkCapabilities data members, use only on dst after soap_dup_tt__NetworkCapabilities(NULL, tt__NetworkCapabilities *dst, tt__NetworkCapabilities *src) (use soapcpp2 -Ed)
struct tt__NetworkCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IP filtering is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPFilter" of type xs:boolean.
    enum xsd__boolean*                   IPFilter                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not zeroconf is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZeroConfiguration" of type xs:boolean.
    enum xsd__boolean*                   ZeroConfiguration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPVersion6" of type xs:boolean.
    enum xsd__boolean*                   IPVersion6                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DynDNS" of type xs:boolean.
    enum xsd__boolean*                   DynDNS                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension.
    struct tt__NetworkCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is a complexType.
///
/// @note struct tt__NetworkCapabilitiesExtension operations:
/// - tt__NetworkCapabilitiesExtension* soap_new_tt__NetworkCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension*) serialize to a sink
/// - tt__NetworkCapabilitiesExtension* soap_dup_tt__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension* dst, tt__NetworkCapabilitiesExtension *src) returns deep copy of tt__NetworkCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkCapabilitiesExtension(tt__NetworkCapabilitiesExtension*) deep deletes tt__NetworkCapabilitiesExtension data members, use only on dst after soap_dup_tt__NetworkCapabilitiesExtension(NULL, tt__NetworkCapabilitiesExtension *dst, tt__NetworkCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__NetworkCapabilitiesExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Dot11Configuration" of type xs:boolean.
    enum xsd__boolean*                   Dot11Configuration             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2.
    struct tt__NetworkCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2 is a complexType.
///
/// @note struct tt__NetworkCapabilitiesExtension2 operations:
/// - tt__NetworkCapabilitiesExtension2* soap_new_tt__NetworkCapabilitiesExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2*) default initialize members
/// - int soap_read_tt__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2*) serialize to a sink
/// - tt__NetworkCapabilitiesExtension2* soap_dup_tt__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2* dst, tt__NetworkCapabilitiesExtension2 *src) returns deep copy of tt__NetworkCapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkCapabilitiesExtension2(tt__NetworkCapabilitiesExtension2*) deep deletes tt__NetworkCapabilitiesExtension2 data members, use only on dst after soap_dup_tt__NetworkCapabilitiesExtension2(NULL, tt__NetworkCapabilitiesExtension2 *dst, tt__NetworkCapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__NetworkCapabilitiesExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilities is a complexType.
///
/// @note struct tt__SecurityCapabilities operations:
/// - tt__SecurityCapabilities* soap_new_tt__SecurityCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SecurityCapabilities(struct soap*, tt__SecurityCapabilities*) default initialize members
/// - int soap_read_tt__SecurityCapabilities(struct soap*, tt__SecurityCapabilities*) deserialize from a source
/// - int soap_write_tt__SecurityCapabilities(struct soap*, tt__SecurityCapabilities*) serialize to a sink
/// - tt__SecurityCapabilities* soap_dup_tt__SecurityCapabilities(struct soap*, tt__SecurityCapabilities* dst, tt__SecurityCapabilities *src) returns deep copy of tt__SecurityCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SecurityCapabilities(tt__SecurityCapabilities*) deep deletes tt__SecurityCapabilities data members, use only on dst after soap_dup_tt__SecurityCapabilities(NULL, tt__SecurityCapabilities *dst, tt__SecurityCapabilities *src) (use soapcpp2 -Ed)
struct tt__SecurityCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.1 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLS1.1" of type xs:boolean.
    enum xsd__boolean                    TLS1_x002e1                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.2 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLS1.2" of type xs:boolean.
    enum xsd__boolean                    TLS1_x002e2                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not onboard key generation is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "OnboardKeyGeneration" of type xs:boolean.
    enum xsd__boolean                    OnboardKeyGeneration           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not access policy configuration is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "AccessPolicyConfig" of type xs:boolean.
    enum xsd__boolean                    AccessPolicyConfig             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security X.509 token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "X.509Token" of type xs:boolean.
    enum xsd__boolean                    X_x002e509Token                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security SAML token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SAMLToken" of type xs:boolean.
    enum xsd__boolean                    SAMLToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security Kerberos token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "KerberosToken" of type xs:boolean.
    enum xsd__boolean                    KerberosToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security REL token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RELToken" of type xs:boolean.
    enum xsd__boolean                    RELToken                       1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension.
    struct tt__SecurityCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is a complexType.
///
/// @note struct tt__SecurityCapabilitiesExtension operations:
/// - tt__SecurityCapabilitiesExtension* soap_new_tt__SecurityCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension*) serialize to a sink
/// - tt__SecurityCapabilitiesExtension* soap_dup_tt__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension* dst, tt__SecurityCapabilitiesExtension *src) returns deep copy of tt__SecurityCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SecurityCapabilitiesExtension(tt__SecurityCapabilitiesExtension*) deep deletes tt__SecurityCapabilitiesExtension data members, use only on dst after soap_dup_tt__SecurityCapabilitiesExtension(NULL, tt__SecurityCapabilitiesExtension *dst, tt__SecurityCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__SecurityCapabilitiesExtension
{
/// Element "TLS1.0" of type xs:boolean.
    enum xsd__boolean                    TLS1_x002e0                    1;	///< Required element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2.
    struct tt__SecurityCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2 is a complexType.
///
/// @note struct tt__SecurityCapabilitiesExtension2 operations:
/// - tt__SecurityCapabilitiesExtension2* soap_new_tt__SecurityCapabilitiesExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2*) default initialize members
/// - int soap_read_tt__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2*) serialize to a sink
/// - tt__SecurityCapabilitiesExtension2* soap_dup_tt__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2* dst, tt__SecurityCapabilitiesExtension2 *src) returns deep copy of tt__SecurityCapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SecurityCapabilitiesExtension2(tt__SecurityCapabilitiesExtension2*) deep deletes tt__SecurityCapabilitiesExtension2 data members, use only on dst after soap_dup_tt__SecurityCapabilitiesExtension2(NULL, tt__SecurityCapabilitiesExtension2 *dst, tt__SecurityCapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__SecurityCapabilitiesExtension2
{
/// Element "Dot1X" of type xs:boolean.
    enum xsd__boolean                    Dot1X                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of int* is 0..unbounded.
  $ int                                  __sizeSupportedEAPMethod       0;
/// Array int* of size 0..unbounded.
    int*                                 SupportedEAPMethod             0;	///< Multiple elements.
/// Element "RemoteUserHandling" of type xs:boolean.
    enum xsd__boolean                    RemoteUserHandling             1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
///
/// @note struct tt__SystemCapabilities operations:
/// - tt__SystemCapabilities* soap_new_tt__SystemCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemCapabilities(struct soap*, tt__SystemCapabilities*) default initialize members
/// - int soap_read_tt__SystemCapabilities(struct soap*, tt__SystemCapabilities*) deserialize from a source
/// - int soap_write_tt__SystemCapabilities(struct soap*, tt__SystemCapabilities*) serialize to a sink
/// - tt__SystemCapabilities* soap_dup_tt__SystemCapabilities(struct soap*, tt__SystemCapabilities* dst, tt__SystemCapabilities *src) returns deep copy of tt__SystemCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemCapabilities(tt__SystemCapabilities*) deep deletes tt__SystemCapabilities data members, use only on dst after soap_dup_tt__SystemCapabilities(NULL, tt__SystemCapabilities *dst, tt__SystemCapabilities *src) (use soapcpp2 -Ed)
struct tt__SystemCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Discovery resolve requests are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryResolve" of type xs:boolean.
    enum xsd__boolean                    DiscoveryResolve               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Discovery Bye is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryBye" of type xs:boolean.
    enum xsd__boolean                    DiscoveryBye                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not remote discovery is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscovery" of type xs:boolean.
    enum xsd__boolean                    RemoteDiscovery                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system backup is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemBackup" of type xs:boolean.
    enum xsd__boolean                    SystemBackup                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system logging is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemLogging" of type xs:boolean.
    enum xsd__boolean                    SystemLogging                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not firmware upgrade is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "FirmwareUpgrade" of type xs:boolean.
    enum xsd__boolean                    FirmwareUpgrade                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates supported ONVIF version(s).
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__OnvifVersion* is 1..unbounded.
  $ int                                  __sizeSupportedVersions        1;
/// Array struct tt__OnvifVersion* of size 1..unbounded.
    struct tt__OnvifVersion*             SupportedVersions              1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension.
    struct tt__SystemCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is a complexType.
///
/// @note struct tt__SystemCapabilitiesExtension operations:
/// - tt__SystemCapabilitiesExtension* soap_new_tt__SystemCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension*) serialize to a sink
/// - tt__SystemCapabilitiesExtension* soap_dup_tt__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension* dst, tt__SystemCapabilitiesExtension *src) returns deep copy of tt__SystemCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemCapabilitiesExtension(tt__SystemCapabilitiesExtension*) deep deletes tt__SystemCapabilitiesExtension data members, use only on dst after soap_dup_tt__SystemCapabilitiesExtension(NULL, tt__SystemCapabilitiesExtension *dst, tt__SystemCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__SystemCapabilitiesExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "HttpFirmwareUpgrade" of type xs:boolean.
    enum xsd__boolean*                   HttpFirmwareUpgrade            0;	///< Optional element.
/// Element "HttpSystemBackup" of type xs:boolean.
    enum xsd__boolean*                   HttpSystemBackup               0;	///< Optional element.
/// Element "HttpSystemLogging" of type xs:boolean.
    enum xsd__boolean*                   HttpSystemLogging              0;	///< Optional element.
/// Element "HttpSupportInformation" of type xs:boolean.
    enum xsd__boolean*                   HttpSupportInformation         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2.
    struct tt__SystemCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2 is a complexType.
///
/// @note struct tt__SystemCapabilitiesExtension2 operations:
/// - tt__SystemCapabilitiesExtension2* soap_new_tt__SystemCapabilitiesExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2*) default initialize members
/// - int soap_read_tt__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2*) deserialize from a source
/// - int soap_write_tt__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2*) serialize to a sink
/// - tt__SystemCapabilitiesExtension2* soap_dup_tt__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2* dst, tt__SystemCapabilitiesExtension2 *src) returns deep copy of tt__SystemCapabilitiesExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemCapabilitiesExtension2(tt__SystemCapabilitiesExtension2*) deep deletes tt__SystemCapabilitiesExtension2 data members, use only on dst after soap_dup_tt__SystemCapabilitiesExtension2(NULL, tt__SystemCapabilitiesExtension2 *dst, tt__SystemCapabilitiesExtension2 *src) (use soapcpp2 -Ed)
struct tt__SystemCapabilitiesExtension2
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
///
/// @note struct tt__OnvifVersion operations:
/// - tt__OnvifVersion* soap_new_tt__OnvifVersion(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OnvifVersion(struct soap*, tt__OnvifVersion*) default initialize members
/// - int soap_read_tt__OnvifVersion(struct soap*, tt__OnvifVersion*) deserialize from a source
/// - int soap_write_tt__OnvifVersion(struct soap*, tt__OnvifVersion*) serialize to a sink
/// - tt__OnvifVersion* soap_dup_tt__OnvifVersion(struct soap*, tt__OnvifVersion* dst, tt__OnvifVersion *src) returns deep copy of tt__OnvifVersion src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OnvifVersion(tt__OnvifVersion*) deep deletes tt__OnvifVersion data members, use only on dst after soap_dup_tt__OnvifVersion(NULL, tt__OnvifVersion *dst, tt__OnvifVersion *src) (use soapcpp2 -Ed)
struct tt__OnvifVersion
{
/// <PRE><BLOCKQUOTE>
///   Major version number.
/// </BLOCKQUOTE></PRE>
///
/// Element "Major" of type xs:int.
    int                                  Major                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Two digit minor version number.
///   If major version number is less than "16", X.0.1 maps to "01" and X.2.1 maps to "21" where X stands for Major version number.
///   Otherwise, minor number is month of release, such as "06" for June.
/// </BLOCKQUOTE></PRE>
///
/// Element "Minor" of type xs:int.
    int                                  Minor                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingCapabilities is a complexType.
///
/// @note struct tt__ImagingCapabilities operations:
/// - tt__ImagingCapabilities* soap_new_tt__ImagingCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ImagingCapabilities(struct soap*, tt__ImagingCapabilities*) default initialize members
/// - int soap_read_tt__ImagingCapabilities(struct soap*, tt__ImagingCapabilities*) deserialize from a source
/// - int soap_write_tt__ImagingCapabilities(struct soap*, tt__ImagingCapabilities*) serialize to a sink
/// - tt__ImagingCapabilities* soap_dup_tt__ImagingCapabilities(struct soap*, tt__ImagingCapabilities* dst, tt__ImagingCapabilities *src) returns deep copy of tt__ImagingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ImagingCapabilities(tt__ImagingCapabilities*) deep deletes tt__ImagingCapabilities data members, use only on dst after soap_dup_tt__ImagingCapabilities(NULL, tt__ImagingCapabilities *dst, tt__ImagingCapabilities *src) (use soapcpp2 -Ed)
struct tt__ImagingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Imaging service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
///
/// @note struct tt__PTZCapabilities operations:
/// - tt__PTZCapabilities* soap_new_tt__PTZCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZCapabilities(struct soap*, tt__PTZCapabilities*) default initialize members
/// - int soap_read_tt__PTZCapabilities(struct soap*, tt__PTZCapabilities*) deserialize from a source
/// - int soap_write_tt__PTZCapabilities(struct soap*, tt__PTZCapabilities*) serialize to a sink
/// - tt__PTZCapabilities* soap_dup_tt__PTZCapabilities(struct soap*, tt__PTZCapabilities* dst, tt__PTZCapabilities *src) returns deep copy of tt__PTZCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZCapabilities(tt__PTZCapabilities*) deep deletes tt__PTZCapabilities data members, use only on dst after soap_dup_tt__PTZCapabilities(NULL, tt__PTZCapabilities *dst, tt__PTZCapabilities *src) (use soapcpp2 -Ed)
struct tt__PTZCapabilities
{
/// <PRE><BLOCKQUOTE>
///   PTZ service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceIOCapabilities is a complexType.
///
/// @note struct tt__DeviceIOCapabilities operations:
/// - tt__DeviceIOCapabilities* soap_new_tt__DeviceIOCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities*) default initialize members
/// - int soap_read_tt__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities*) deserialize from a source
/// - int soap_write_tt__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities*) serialize to a sink
/// - tt__DeviceIOCapabilities* soap_dup_tt__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities* dst, tt__DeviceIOCapabilities *src) returns deep copy of tt__DeviceIOCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DeviceIOCapabilities(tt__DeviceIOCapabilities*) deep deletes tt__DeviceIOCapabilities data members, use only on dst after soap_dup_tt__DeviceIOCapabilities(NULL, tt__DeviceIOCapabilities *dst, tt__DeviceIOCapabilities *src) (use soapcpp2 -Ed)
struct tt__DeviceIOCapabilities
{
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "VideoSources" of type xs:int.
    int                                  VideoSources                   1;	///< Required element.
/// Element "VideoOutputs" of type xs:int.
    int                                  VideoOutputs                   1;	///< Required element.
/// Element "AudioSources" of type xs:int.
    int                                  AudioSources                   1;	///< Required element.
/// Element "AudioOutputs" of type xs:int.
    int                                  AudioOutputs                   1;	///< Required element.
/// Element "RelayOutputs" of type xs:int.
    int                                  RelayOutputs                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":DisplayCapabilities is a complexType.
///
/// @note struct tt__DisplayCapabilities operations:
/// - tt__DisplayCapabilities* soap_new_tt__DisplayCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DisplayCapabilities(struct soap*, tt__DisplayCapabilities*) default initialize members
/// - int soap_read_tt__DisplayCapabilities(struct soap*, tt__DisplayCapabilities*) deserialize from a source
/// - int soap_write_tt__DisplayCapabilities(struct soap*, tt__DisplayCapabilities*) serialize to a sink
/// - tt__DisplayCapabilities* soap_dup_tt__DisplayCapabilities(struct soap*, tt__DisplayCapabilities* dst, tt__DisplayCapabilities *src) returns deep copy of tt__DisplayCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DisplayCapabilities(tt__DisplayCapabilities*) deep deletes tt__DisplayCapabilities data members, use only on dst after soap_dup_tt__DisplayCapabilities(NULL, tt__DisplayCapabilities *dst, tt__DisplayCapabilities *src) (use soapcpp2 -Ed)
struct tt__DisplayCapabilities
{
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication that the SetLayout command supports only predefined layouts.
/// </BLOCKQUOTE></PRE>
///
/// Element "FixedLayout" of type xs:boolean.
    enum xsd__boolean                    FixedLayout                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingCapabilities is a complexType.
///
/// @note struct tt__RecordingCapabilities operations:
/// - tt__RecordingCapabilities* soap_new_tt__RecordingCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RecordingCapabilities(struct soap*, tt__RecordingCapabilities*) default initialize members
/// - int soap_read_tt__RecordingCapabilities(struct soap*, tt__RecordingCapabilities*) deserialize from a source
/// - int soap_write_tt__RecordingCapabilities(struct soap*, tt__RecordingCapabilities*) serialize to a sink
/// - tt__RecordingCapabilities* soap_dup_tt__RecordingCapabilities(struct soap*, tt__RecordingCapabilities* dst, tt__RecordingCapabilities *src) returns deep copy of tt__RecordingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RecordingCapabilities(tt__RecordingCapabilities*) deep deletes tt__RecordingCapabilities data members, use only on dst after soap_dup_tt__RecordingCapabilities(NULL, tt__RecordingCapabilities *dst, tt__RecordingCapabilities *src) (use soapcpp2 -Ed)
struct tt__RecordingCapabilities
{
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "ReceiverSource" of type xs:boolean.
    enum xsd__boolean                    ReceiverSource                 1;	///< Required element.
/// Element "MediaProfileSource" of type xs:boolean.
    enum xsd__boolean                    MediaProfileSource             1;	///< Required element.
/// Element "DynamicRecordings" of type xs:boolean.
    enum xsd__boolean                    DynamicRecordings              1;	///< Required element.
/// Element "DynamicTracks" of type xs:boolean.
    enum xsd__boolean                    DynamicTracks                  1;	///< Required element.
/// Element "MaxStringLength" of type xs:int.
    int                                  MaxStringLength                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SearchCapabilities is a complexType.
///
/// @note struct tt__SearchCapabilities operations:
/// - tt__SearchCapabilities* soap_new_tt__SearchCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SearchCapabilities(struct soap*, tt__SearchCapabilities*) default initialize members
/// - int soap_read_tt__SearchCapabilities(struct soap*, tt__SearchCapabilities*) deserialize from a source
/// - int soap_write_tt__SearchCapabilities(struct soap*, tt__SearchCapabilities*) serialize to a sink
/// - tt__SearchCapabilities* soap_dup_tt__SearchCapabilities(struct soap*, tt__SearchCapabilities* dst, tt__SearchCapabilities *src) returns deep copy of tt__SearchCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SearchCapabilities(tt__SearchCapabilities*) deep deletes tt__SearchCapabilities data members, use only on dst after soap_dup_tt__SearchCapabilities(NULL, tt__SearchCapabilities *dst, tt__SearchCapabilities *src) (use soapcpp2 -Ed)
struct tt__SearchCapabilities
{
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "MetadataSearch" of type xs:boolean.
    enum xsd__boolean                    MetadataSearch                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayCapabilities is a complexType.
///
/// @note struct tt__ReplayCapabilities operations:
/// - tt__ReplayCapabilities* soap_new_tt__ReplayCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ReplayCapabilities(struct soap*, tt__ReplayCapabilities*) default initialize members
/// - int soap_read_tt__ReplayCapabilities(struct soap*, tt__ReplayCapabilities*) deserialize from a source
/// - int soap_write_tt__ReplayCapabilities(struct soap*, tt__ReplayCapabilities*) serialize to a sink
/// - tt__ReplayCapabilities* soap_dup_tt__ReplayCapabilities(struct soap*, tt__ReplayCapabilities* dst, tt__ReplayCapabilities *src) returns deep copy of tt__ReplayCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReplayCapabilities(tt__ReplayCapabilities*) deep deletes tt__ReplayCapabilities data members, use only on dst after soap_dup_tt__ReplayCapabilities(NULL, tt__ReplayCapabilities *dst, tt__ReplayCapabilities *src) (use soapcpp2 -Ed)
struct tt__ReplayCapabilities
{
/// <PRE><BLOCKQUOTE>
///   The address of the replay service.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverCapabilities is a complexType.
///
/// @note struct tt__ReceiverCapabilities operations:
/// - tt__ReceiverCapabilities* soap_new_tt__ReceiverCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities*) default initialize members
/// - int soap_read_tt__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities*) deserialize from a source
/// - int soap_write_tt__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities*) serialize to a sink
/// - tt__ReceiverCapabilities* soap_dup_tt__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities* dst, tt__ReceiverCapabilities *src) returns deep copy of tt__ReceiverCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ReceiverCapabilities(tt__ReceiverCapabilities*) deep deletes tt__ReceiverCapabilities data members, use only on dst after soap_dup_tt__ReceiverCapabilities(NULL, tt__ReceiverCapabilities *dst, tt__ReceiverCapabilities *src) (use soapcpp2 -Ed)
struct tt__ReceiverCapabilities
{
/// <PRE><BLOCKQUOTE>
///   The address of the receiver service.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP multicast streams.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_Multicast" of type xs:boolean.
    enum xsd__boolean                    RTP_USCOREMulticast            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/TCP streams
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_TCP" of type xs:boolean.
    enum xsd__boolean                    RTP_USCORETCP                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/RTSP/TCP streams.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_RTSP_TCP" of type xs:boolean.
    enum xsd__boolean                    RTP_USCORERTSP_USCORETCP       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of receivers supported by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedReceivers" of type xs:int.
    int                                  SupportedReceivers             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum allowed length for RTSP URIs.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumRTSPURILength" of type xs:int.
    int                                  MaximumRTSPURILength           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities is a complexType.
///
/// @note struct tt__AnalyticsDeviceCapabilities operations:
/// - tt__AnalyticsDeviceCapabilities* soap_new_tt__AnalyticsDeviceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities*) default initialize members
/// - int soap_read_tt__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities*) deserialize from a source
/// - int soap_write_tt__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities*) serialize to a sink
/// - tt__AnalyticsDeviceCapabilities* soap_dup_tt__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities* dst, tt__AnalyticsDeviceCapabilities *src) returns deep copy of tt__AnalyticsDeviceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsDeviceCapabilities(tt__AnalyticsDeviceCapabilities*) deep deletes tt__AnalyticsDeviceCapabilities data members, use only on dst after soap_dup_tt__AnalyticsDeviceCapabilities(NULL, tt__AnalyticsDeviceCapabilities *dst, tt__AnalyticsDeviceCapabilities *src) (use soapcpp2 -Ed)
struct tt__AnalyticsDeviceCapabilities
{
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Obsolete property.
/// </BLOCKQUOTE></PRE>
///
/// Element "RuleSupport" of type xs:boolean.
    enum xsd__boolean*                   RuleSupport                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension.
    struct tt__AnalyticsDeviceExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension is a complexType.
///
/// @note struct tt__AnalyticsDeviceExtension operations:
/// - tt__AnalyticsDeviceExtension* soap_new_tt__AnalyticsDeviceExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension*) default initialize members
/// - int soap_read_tt__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension*) deserialize from a source
/// - int soap_write_tt__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension*) serialize to a sink
/// - tt__AnalyticsDeviceExtension* soap_dup_tt__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension* dst, tt__AnalyticsDeviceExtension *src) returns deep copy of tt__AnalyticsDeviceExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnalyticsDeviceExtension(tt__AnalyticsDeviceExtension*) deep deletes tt__AnalyticsDeviceExtension data members, use only on dst after soap_dup_tt__AnalyticsDeviceExtension(NULL, tt__AnalyticsDeviceExtension *dst, tt__AnalyticsDeviceExtension *src) (use soapcpp2 -Ed)
struct tt__AnalyticsDeviceExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLog is a complexType.
///
/// @note struct tt__SystemLog operations:
/// - tt__SystemLog* soap_new_tt__SystemLog(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemLog(struct soap*, tt__SystemLog*) default initialize members
/// - int soap_read_tt__SystemLog(struct soap*, tt__SystemLog*) deserialize from a source
/// - int soap_write_tt__SystemLog(struct soap*, tt__SystemLog*) serialize to a sink
/// - tt__SystemLog* soap_dup_tt__SystemLog(struct soap*, tt__SystemLog* dst, tt__SystemLog *src) returns deep copy of tt__SystemLog src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemLog(tt__SystemLog*) deep deletes tt__SystemLog data members, use only on dst after soap_dup_tt__SystemLog(NULL, tt__SystemLog *dst, tt__SystemLog *src) (use soapcpp2 -Ed)
struct tt__SystemLog
{
/// <PRE><BLOCKQUOTE>
///   The log information as attachment data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Binary" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The log information as character data.
/// </BLOCKQUOTE></PRE>
///
/// Element "String" of type xs:string.
    char*                                String                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportInformation is a complexType.
///
/// @note struct tt__SupportInformation operations:
/// - tt__SupportInformation* soap_new_tt__SupportInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SupportInformation(struct soap*, tt__SupportInformation*) default initialize members
/// - int soap_read_tt__SupportInformation(struct soap*, tt__SupportInformation*) deserialize from a source
/// - int soap_write_tt__SupportInformation(struct soap*, tt__SupportInformation*) serialize to a sink
/// - tt__SupportInformation* soap_dup_tt__SupportInformation(struct soap*, tt__SupportInformation* dst, tt__SupportInformation *src) returns deep copy of tt__SupportInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SupportInformation(tt__SupportInformation*) deep deletes tt__SupportInformation data members, use only on dst after soap_dup_tt__SupportInformation(NULL, tt__SupportInformation *dst, tt__SupportInformation *src) (use soapcpp2 -Ed)
struct tt__SupportInformation
{
/// <PRE><BLOCKQUOTE>
///   The support information as attachment data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Binary" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The support information as character data.
/// </BLOCKQUOTE></PRE>
///
/// Element "String" of type xs:string.
    char*                                String                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BinaryData is a complexType.
///
/// @note struct tt__BinaryData operations:
/// - tt__BinaryData* soap_new_tt__BinaryData(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__BinaryData(struct soap*, tt__BinaryData*) default initialize members
/// - int soap_read_tt__BinaryData(struct soap*, tt__BinaryData*) deserialize from a source
/// - int soap_write_tt__BinaryData(struct soap*, tt__BinaryData*) serialize to a sink
/// - tt__BinaryData* soap_dup_tt__BinaryData(struct soap*, tt__BinaryData* dst, tt__BinaryData *src) returns deep copy of tt__BinaryData src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BinaryData(tt__BinaryData*) deep deletes tt__BinaryData data members, use only on dst after soap_dup_tt__BinaryData(NULL, tt__BinaryData *dst, tt__BinaryData *src) (use soapcpp2 -Ed)
struct tt__BinaryData
{
/// <PRE><BLOCKQUOTE>
///   base64 encoded binary data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Data" of type xs:base64Binary.
    struct xsd__base64Binary             Data                           1;	///< Required element.
/// Imported attribute reference xmime:contentType.
  @ char*                                xmime__contentType             0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":AttachmentData is a complexType.
///
/// @note struct tt__AttachmentData operations:
/// - tt__AttachmentData* soap_new_tt__AttachmentData(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AttachmentData(struct soap*, tt__AttachmentData*) default initialize members
/// - int soap_read_tt__AttachmentData(struct soap*, tt__AttachmentData*) deserialize from a source
/// - int soap_write_tt__AttachmentData(struct soap*, tt__AttachmentData*) serialize to a sink
/// - tt__AttachmentData* soap_dup_tt__AttachmentData(struct soap*, tt__AttachmentData* dst, tt__AttachmentData *src) returns deep copy of tt__AttachmentData src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AttachmentData(tt__AttachmentData*) deep deletes tt__AttachmentData data members, use only on dst after soap_dup_tt__AttachmentData(NULL, tt__AttachmentData *dst, tt__AttachmentData *src) (use soapcpp2 -Ed)
struct tt__AttachmentData
{
/// Imported element reference "http://www.w3.org/2004/08/xop/include":Include.
    _xop__Include                        xop__Include                   1;	///< Required element.
/// Imported attribute reference xmime:contentType.
  @ char*                                xmime__contentType             0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":BackupFile is a complexType.
///
/// @note struct tt__BackupFile operations:
/// - tt__BackupFile* soap_new_tt__BackupFile(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__BackupFile(struct soap*, tt__BackupFile*) default initialize members
/// - int soap_read_tt__BackupFile(struct soap*, tt__BackupFile*) deserialize from a source
/// - int soap_write_tt__BackupFile(struct soap*, tt__BackupFile*) serialize to a sink
/// - tt__BackupFile* soap_dup_tt__BackupFile(struct soap*, tt__BackupFile* dst, tt__BackupFile *src) returns deep copy of tt__BackupFile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__BackupFile(tt__BackupFile*) deep deletes tt__BackupFile data members, use only on dst after soap_dup_tt__BackupFile(NULL, tt__BackupFile *dst, tt__BackupFile *src) (use soapcpp2 -Ed)
struct tt__BackupFile
{
/// Element "Name" of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element "Data" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    struct tt__AttachmentData*           Data                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUriList is a complexType.
///
/// @note struct tt__SystemLogUriList operations:
/// - tt__SystemLogUriList* soap_new_tt__SystemLogUriList(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemLogUriList(struct soap*, tt__SystemLogUriList*) default initialize members
/// - int soap_read_tt__SystemLogUriList(struct soap*, tt__SystemLogUriList*) deserialize from a source
/// - int soap_write_tt__SystemLogUriList(struct soap*, tt__SystemLogUriList*) serialize to a sink
/// - tt__SystemLogUriList* soap_dup_tt__SystemLogUriList(struct soap*, tt__SystemLogUriList* dst, tt__SystemLogUriList *src) returns deep copy of tt__SystemLogUriList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemLogUriList(tt__SystemLogUriList*) deep deletes tt__SystemLogUriList data members, use only on dst after soap_dup_tt__SystemLogUriList(NULL, tt__SystemLogUriList *dst, tt__SystemLogUriList *src) (use soapcpp2 -Ed)
struct tt__SystemLogUriList
{
/// Size of array of struct tt__SystemLogUri* is 0..unbounded.
  $ int                                  __sizeSystemLog                0;
/// Array struct tt__SystemLogUri* of size 0..unbounded.
    struct tt__SystemLogUri*             SystemLog                      0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUri is a complexType.
///
/// @note struct tt__SystemLogUri operations:
/// - tt__SystemLogUri* soap_new_tt__SystemLogUri(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemLogUri(struct soap*, tt__SystemLogUri*) default initialize members
/// - int soap_read_tt__SystemLogUri(struct soap*, tt__SystemLogUri*) deserialize from a source
/// - int soap_write_tt__SystemLogUri(struct soap*, tt__SystemLogUri*) serialize to a sink
/// - tt__SystemLogUri* soap_dup_tt__SystemLogUri(struct soap*, tt__SystemLogUri* dst, tt__SystemLogUri *src) returns deep copy of tt__SystemLogUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemLogUri(tt__SystemLogUri*) deep deletes tt__SystemLogUri data members, use only on dst after soap_dup_tt__SystemLogUri(NULL, tt__SystemLogUri *dst, tt__SystemLogUri *src) (use soapcpp2 -Ed)
struct tt__SystemLogUri
{
/// Element "Type" of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               Type                           1;	///< Required element.
/// Element "Uri" of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTime is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   General date time inforamtion returned by the GetSystemDateTime method.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__SystemDateTime operations:
/// - tt__SystemDateTime* soap_new_tt__SystemDateTime(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemDateTime(struct soap*, tt__SystemDateTime*) default initialize members
/// - int soap_read_tt__SystemDateTime(struct soap*, tt__SystemDateTime*) deserialize from a source
/// - int soap_write_tt__SystemDateTime(struct soap*, tt__SystemDateTime*) serialize to a sink
/// - tt__SystemDateTime* soap_dup_tt__SystemDateTime(struct soap*, tt__SystemDateTime* dst, tt__SystemDateTime *src) returns deep copy of tt__SystemDateTime src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemDateTime(tt__SystemDateTime*) deep deletes tt__SystemDateTime data members, use only on dst after soap_dup_tt__SystemDateTime(NULL, tt__SystemDateTime *dst, tt__SystemDateTime *src) (use soapcpp2 -Ed)
struct tt__SystemDateTime
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the time is set manully or through NTP.
/// </BLOCKQUOTE></PRE>
///
/// Element "DateTimeType" of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative indicator whether daylight savings is currently on/off.
/// </BLOCKQUOTE></PRE>
///
/// Element "DaylightSavings" of type xs:boolean.
    enum xsd__boolean                    DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Timezone information in Posix format.
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeZone" of type "http://www.onvif.org/ver10/schema":TimeZone.
    struct tt__TimeZone*                 TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Current system date and time in UTC format. This field is mandatory since version 2.0.
/// </BLOCKQUOTE></PRE>
///
/// Element "UTCDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    struct tt__DateTime*                 UTCDateTime                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in local format.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    struct tt__DateTime*                 LocalDateTime                  0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemDateTimeExtension.
    struct tt__SystemDateTimeExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is a complexType.
///
/// @note struct tt__SystemDateTimeExtension operations:
/// - tt__SystemDateTimeExtension* soap_new_tt__SystemDateTimeExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension*) default initialize members
/// - int soap_read_tt__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension*) deserialize from a source
/// - int soap_write_tt__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension*) serialize to a sink
/// - tt__SystemDateTimeExtension* soap_dup_tt__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension* dst, tt__SystemDateTimeExtension *src) returns deep copy of tt__SystemDateTimeExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemDateTimeExtension(tt__SystemDateTimeExtension*) deep deletes tt__SystemDateTimeExtension data members, use only on dst after soap_dup_tt__SystemDateTimeExtension(NULL, tt__SystemDateTimeExtension *dst, tt__SystemDateTimeExtension *src) (use soapcpp2 -Ed)
struct tt__SystemDateTimeExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":DateTime is a complexType.
///
/// @note struct tt__DateTime operations:
/// - tt__DateTime* soap_new_tt__DateTime(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DateTime(struct soap*, tt__DateTime*) default initialize members
/// - int soap_read_tt__DateTime(struct soap*, tt__DateTime*) deserialize from a source
/// - int soap_write_tt__DateTime(struct soap*, tt__DateTime*) serialize to a sink
/// - tt__DateTime* soap_dup_tt__DateTime(struct soap*, tt__DateTime* dst, tt__DateTime *src) returns deep copy of tt__DateTime src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DateTime(tt__DateTime*) deep deletes tt__DateTime data members, use only on dst after soap_dup_tt__DateTime(NULL, tt__DateTime *dst, tt__DateTime *src) (use soapcpp2 -Ed)
struct tt__DateTime
{
/// Element "Time" of type "http://www.onvif.org/ver10/schema":Time.
    struct tt__Time*                     Time                           1;	///< Required element.
/// Element "Date" of type "http://www.onvif.org/ver10/schema":Date.
    struct tt__Date*                     Date                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Date is a complexType.
///
/// @note struct tt__Date operations:
/// - tt__Date* soap_new_tt__Date(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Date(struct soap*, tt__Date*) default initialize members
/// - int soap_read_tt__Date(struct soap*, tt__Date*) deserialize from a source
/// - int soap_write_tt__Date(struct soap*, tt__Date*) serialize to a sink
/// - tt__Date* soap_dup_tt__Date(struct soap*, tt__Date* dst, tt__Date *src) returns deep copy of tt__Date src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Date(tt__Date*) deep deletes tt__Date data members, use only on dst after soap_dup_tt__Date(NULL, tt__Date *dst, tt__Date *src) (use soapcpp2 -Ed)
struct tt__Date
{
/// Element "Year" of type xs:int.
    int                                  Year                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 12.
/// </BLOCKQUOTE></PRE>
///
/// Element "Month" of type xs:int.
    int                                  Month                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 31.
/// </BLOCKQUOTE></PRE>
///
/// Element "Day" of type xs:int.
    int                                  Day                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Time is a complexType.
///
/// @note struct tt__Time operations:
/// - tt__Time* soap_new_tt__Time(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Time(struct soap*, tt__Time*) default initialize members
/// - int soap_read_tt__Time(struct soap*, tt__Time*) deserialize from a source
/// - int soap_write_tt__Time(struct soap*, tt__Time*) serialize to a sink
/// - tt__Time* soap_dup_tt__Time(struct soap*, tt__Time* dst, tt__Time *src) returns deep copy of tt__Time src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Time(tt__Time*) deep deletes tt__Time data members, use only on dst after soap_dup_tt__Time(NULL, tt__Time *dst, tt__Time *src) (use soapcpp2 -Ed)
struct tt__Time
{
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 23.
/// </BLOCKQUOTE></PRE>
///
/// Element "Hour" of type xs:int.
    int                                  Hour                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 59.
/// </BLOCKQUOTE></PRE>
///
/// Element "Minute" of type xs:int.
    int                                  Minute                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 61 (typically 59).
/// </BLOCKQUOTE></PRE>
///
/// Element "Second" of type xs:int.
    int                                  Second                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":TimeZone is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3<br/>
///   Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3<br/>
///   CET = designation for standard time when daylight saving is not in force<br/>
///   -1 = offset in hours = negative so 1 hour east of Greenwich meridian<br/>
///   CEST = designation when daylight saving is in force ("Central European Summer Time")<br/>
///   , = no offset number between code and comma, so default to one hour ahead for daylight saving<br/>
///   M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)<br/>
///   /2, = the local time when the switch occurs = 2 a.m. in this case<br/>
///   M10.5.0 = when daylight saving ends = the last Sunday in October.<br/>
///   /3, = the local time when the switch occurs = 3 a.m. in this case<br/>
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__TimeZone operations:
/// - tt__TimeZone* soap_new_tt__TimeZone(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__TimeZone(struct soap*, tt__TimeZone*) default initialize members
/// - int soap_read_tt__TimeZone(struct soap*, tt__TimeZone*) deserialize from a source
/// - int soap_write_tt__TimeZone(struct soap*, tt__TimeZone*) serialize to a sink
/// - tt__TimeZone* soap_dup_tt__TimeZone(struct soap*, tt__TimeZone* dst, tt__TimeZone *src) returns deep copy of tt__TimeZone src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TimeZone(tt__TimeZone*) deep deletes tt__TimeZone data members, use only on dst after soap_dup_tt__TimeZone(NULL, tt__TimeZone *dst, tt__TimeZone *src) (use soapcpp2 -Ed)
struct tt__TimeZone
{
/// <PRE><BLOCKQUOTE>
///   Posix timezone string.
/// </BLOCKQUOTE></PRE>
///
/// Element "TZ" of type xs:token.
    xsd__token                           TZ                             1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":RemoteUser is a complexType.
///
/// @note struct tt__RemoteUser operations:
/// - tt__RemoteUser* soap_new_tt__RemoteUser(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RemoteUser(struct soap*, tt__RemoteUser*) default initialize members
/// - int soap_read_tt__RemoteUser(struct soap*, tt__RemoteUser*) deserialize from a source
/// - int soap_write_tt__RemoteUser(struct soap*, tt__RemoteUser*) serialize to a sink
/// - tt__RemoteUser* soap_dup_tt__RemoteUser(struct soap*, tt__RemoteUser* dst, tt__RemoteUser *src) returns deep copy of tt__RemoteUser src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RemoteUser(tt__RemoteUser*) deep deletes tt__RemoteUser data members, use only on dst after soap_dup_tt__RemoteUser(NULL, tt__RemoteUser *dst, tt__RemoteUser *src) (use soapcpp2 -Ed)
struct tt__RemoteUser
{
/// Element "Username" of type xs:string.
    char*                                Username                       1;	///< Required element.
/// Element "Password" of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element "UseDerivedPassword" of type xs:boolean.
    enum xsd__boolean                    UseDerivedPassword             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":User is a complexType.
///
/// @note struct tt__User operations:
/// - tt__User* soap_new_tt__User(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__User(struct soap*, tt__User*) default initialize members
/// - int soap_read_tt__User(struct soap*, tt__User*) deserialize from a source
/// - int soap_write_tt__User(struct soap*, tt__User*) serialize to a sink
/// - tt__User* soap_dup_tt__User(struct soap*, tt__User* dst, tt__User *src) returns deep copy of tt__User src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__User(tt__User*) deep deletes tt__User data members, use only on dst after soap_dup_tt__User(NULL, tt__User *dst, tt__User *src) (use soapcpp2 -Ed)
struct tt__User
{
/// <PRE><BLOCKQUOTE>
///   Username string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Username" of type xs:string.
    char*                                Username                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Password string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User level string.
/// </BLOCKQUOTE></PRE>
///
/// Element "UserLevel" of type "http://www.onvif.org/ver10/schema":UserLevel.
    enum tt__UserLevel                   UserLevel                      1;	///< Required element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":UserExtension.
    struct tt__UserExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":UserExtension is a complexType.
///
/// @note struct tt__UserExtension operations:
/// - tt__UserExtension* soap_new_tt__UserExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__UserExtension(struct soap*, tt__UserExtension*) default initialize members
/// - int soap_read_tt__UserExtension(struct soap*, tt__UserExtension*) deserialize from a source
/// - int soap_write_tt__UserExtension(struct soap*, tt__UserExtension*) serialize to a sink
/// - tt__UserExtension* soap_dup_tt__UserExtension(struct soap*, tt__UserExtension* dst, tt__UserExtension *src) returns deep copy of tt__UserExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__UserExtension(tt__UserExtension*) deep deletes tt__UserExtension data members, use only on dst after soap_dup_tt__UserExtension(NULL, tt__UserExtension *dst, tt__UserExtension *src) (use soapcpp2 -Ed)
struct tt__UserExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":Certificate is a complexType.
///
/// @note struct tt__Certificate operations:
/// - tt__Certificate* soap_new_tt__Certificate(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Certificate(struct soap*, tt__Certificate*) default initialize members
/// - int soap_read_tt__Certificate(struct soap*, tt__Certificate*) deserialize from a source
/// - int soap_write_tt__Certificate(struct soap*, tt__Certificate*) serialize to a sink
/// - tt__Certificate* soap_dup_tt__Certificate(struct soap*, tt__Certificate* dst, tt__Certificate *src) returns deep copy of tt__Certificate src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Certificate(tt__Certificate*) deep deletes tt__Certificate data members, use only on dst after soap_dup_tt__Certificate(NULL, tt__Certificate *dst, tt__Certificate *src) (use soapcpp2 -Ed)
struct tt__Certificate
{
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "Certificate" of type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Certificate                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateStatus is a complexType.
///
/// @note struct tt__CertificateStatus operations:
/// - tt__CertificateStatus* soap_new_tt__CertificateStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CertificateStatus(struct soap*, tt__CertificateStatus*) default initialize members
/// - int soap_read_tt__CertificateStatus(struct soap*, tt__CertificateStatus*) deserialize from a source
/// - int soap_write_tt__CertificateStatus(struct soap*, tt__CertificateStatus*) serialize to a sink
/// - tt__CertificateStatus* soap_dup_tt__CertificateStatus(struct soap*, tt__CertificateStatus* dst, tt__CertificateStatus *src) returns deep copy of tt__CertificateStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateStatus(tt__CertificateStatus*) deep deletes tt__CertificateStatus data members, use only on dst after soap_dup_tt__CertificateStatus(NULL, tt__CertificateStatus *dst, tt__CertificateStatus *src) (use soapcpp2 -Ed)
struct tt__CertificateStatus
{
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a certificate is used in a HTTPS configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type xs:boolean.
    enum xsd__boolean                    Status                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateWithPrivateKey is a complexType.
///
/// @note struct tt__CertificateWithPrivateKey operations:
/// - tt__CertificateWithPrivateKey* soap_new_tt__CertificateWithPrivateKey(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey*) default initialize members
/// - int soap_read_tt__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey*) deserialize from a source
/// - int soap_write_tt__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey*) serialize to a sink
/// - tt__CertificateWithPrivateKey* soap_dup_tt__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey* dst, tt__CertificateWithPrivateKey *src) returns deep copy of tt__CertificateWithPrivateKey src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateWithPrivateKey(tt__CertificateWithPrivateKey*) deep deletes tt__CertificateWithPrivateKey data members, use only on dst after soap_dup_tt__CertificateWithPrivateKey(NULL, tt__CertificateWithPrivateKey *dst, tt__CertificateWithPrivateKey *src) (use soapcpp2 -Ed)
struct tt__CertificateWithPrivateKey
{
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// Element "Certificate" of type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               Certificate                    1;	///< Required element.
/// Element "PrivateKey" of type "http://www.onvif.org/ver10/schema":BinaryData.
    struct tt__BinaryData*               PrivateKey                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformation is a complexType.
///
/// @note struct tt__CertificateInformation operations:
/// - tt__CertificateInformation* soap_new_tt__CertificateInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CertificateInformation(struct soap*, tt__CertificateInformation*) default initialize members
/// - int soap_read_tt__CertificateInformation(struct soap*, tt__CertificateInformation*) deserialize from a source
/// - int soap_write_tt__CertificateInformation(struct soap*, tt__CertificateInformation*) serialize to a sink
/// - tt__CertificateInformation* soap_dup_tt__CertificateInformation(struct soap*, tt__CertificateInformation* dst, tt__CertificateInformation *src) returns deep copy of tt__CertificateInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateInformation(tt__CertificateInformation*) deep deletes tt__CertificateInformation data members, use only on dst after soap_dup_tt__CertificateInformation(NULL, tt__CertificateInformation *dst, tt__CertificateInformation *src) (use soapcpp2 -Ed)
struct tt__CertificateInformation
{
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element "IssuerDN" of type xs:string.
    char*                                IssuerDN                       0;	///< Optional element.
/// Element "SubjectDN" of type xs:string.
    char*                                SubjectDN                      0;	///< Optional element.
/// Element "KeyUsage" of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    struct tt__CertificateUsage*         KeyUsage                       0;	///< Optional element.
/// Element "ExtendedKeyUsage" of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    struct tt__CertificateUsage*         ExtendedKeyUsage               0;	///< Optional element.
/// Element "KeyLength" of type xs:int.
    int*                                 KeyLength                      0;	///< Optional element.
/// Element "Version" of type xs:string.
    char*                                Version                        0;	///< Optional element.
/// Element "SerialNum" of type xs:string.
    char*                                SerialNum                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Validity Range is from "NotBefore" to "NotAfter"; the corresponding DateTimeRange is from "From" to "Until"
/// </BLOCKQUOTE></PRE>
///
/// Element "SignatureAlgorithm" of type xs:string.
    char*                                SignatureAlgorithm             0;	///< Optional element.
/// Element "Validity" of type "http://www.onvif.org/ver10/schema":DateTimeRange.
    struct tt__DateTimeRange*            Validity                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":CertificateInformationExtension.
    struct tt__CertificateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformationExtension is a complexType.
///
/// @note struct tt__CertificateInformationExtension operations:
/// - tt__CertificateInformationExtension* soap_new_tt__CertificateInformationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension*) default initialize members
/// - int soap_read_tt__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension*) deserialize from a source
/// - int soap_write_tt__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension*) serialize to a sink
/// - tt__CertificateInformationExtension* soap_dup_tt__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension* dst, tt__CertificateInformationExtension *src) returns deep copy of tt__CertificateInformationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateInformationExtension(tt__CertificateInformationExtension*) deep deletes tt__CertificateInformationExtension data members, use only on dst after soap_dup_tt__CertificateInformationExtension(NULL, tt__CertificateInformationExtension *dst, tt__CertificateInformationExtension *src) (use soapcpp2 -Ed)
struct tt__CertificateInformationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfiguration is a complexType.
///
/// @note struct tt__Dot1XConfiguration operations:
/// - tt__Dot1XConfiguration* soap_new_tt__Dot1XConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration*) default initialize members
/// - int soap_read_tt__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration*) deserialize from a source
/// - int soap_write_tt__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration*) serialize to a sink
/// - tt__Dot1XConfiguration* soap_dup_tt__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration* dst, tt__Dot1XConfiguration *src) returns deep copy of tt__Dot1XConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot1XConfiguration(tt__Dot1XConfiguration*) deep deletes tt__Dot1XConfiguration data members, use only on dst after soap_dup_tt__Dot1XConfiguration(NULL, tt__Dot1XConfiguration *dst, tt__Dot1XConfiguration *src) (use soapcpp2 -Ed)
struct tt__Dot1XConfiguration
{
/// Element "Dot1XConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Element "Identity" of type xs:string.
    char*                                Identity                       1;	///< Required element.
/// Element "AnonymousID" of type xs:string.
    char*                                AnonymousID                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   EAP Method type as defined in <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "EAPMethod" of type xs:int.
    int                                  EAPMethod                      1;	///< Required element.
/// Size of array of xsd__token* is 0..unbounded.
  $ int                                  __sizeCACertificateID          0;
/// Array xsd__token* of size 0..unbounded.
    xsd__token*                          CACertificateID                0;	///< Multiple elements.
/// Element "EAPMethodConfiguration" of type "http://www.onvif.org/ver10/schema":EAPMethodConfiguration.
    struct tt__EAPMethodConfiguration*   EAPMethodConfiguration         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension.
    struct tt__Dot1XConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension is a complexType.
///
/// @note struct tt__Dot1XConfigurationExtension operations:
/// - tt__Dot1XConfigurationExtension* soap_new_tt__Dot1XConfigurationExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension*) default initialize members
/// - int soap_read_tt__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension*) deserialize from a source
/// - int soap_write_tt__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension*) serialize to a sink
/// - tt__Dot1XConfigurationExtension* soap_dup_tt__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension* dst, tt__Dot1XConfigurationExtension *src) returns deep copy of tt__Dot1XConfigurationExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Dot1XConfigurationExtension(tt__Dot1XConfigurationExtension*) deep deletes tt__Dot1XConfigurationExtension data members, use only on dst after soap_dup_tt__Dot1XConfigurationExtension(NULL, tt__Dot1XConfigurationExtension *dst, tt__Dot1XConfigurationExtension *src) (use soapcpp2 -Ed)
struct tt__Dot1XConfigurationExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":EAPMethodConfiguration is a complexType.
///
/// @note struct tt__EAPMethodConfiguration operations:
/// - tt__EAPMethodConfiguration* soap_new_tt__EAPMethodConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration*) default initialize members
/// - int soap_read_tt__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration*) deserialize from a source
/// - int soap_write_tt__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration*) serialize to a sink
/// - tt__EAPMethodConfiguration* soap_dup_tt__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration* dst, tt__EAPMethodConfiguration *src) returns deep copy of tt__EAPMethodConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EAPMethodConfiguration(tt__EAPMethodConfiguration*) deep deletes tt__EAPMethodConfiguration data members, use only on dst after soap_dup_tt__EAPMethodConfiguration(NULL, tt__EAPMethodConfiguration *dst, tt__EAPMethodConfiguration *src) (use soapcpp2 -Ed)
struct tt__EAPMethodConfiguration
{
/// <PRE><BLOCKQUOTE>
///   Confgiuration information for TLS Method.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLSConfiguration" of type "http://www.onvif.org/ver10/schema":TLSConfiguration.
    struct tt__TLSConfiguration*         TLSConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Password for those EAP Methods that require a password. The password shall never be returned on a get method.
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":EapMethodExtension.
    struct tt__EapMethodExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":EapMethodExtension is a complexType.
///
/// @note struct tt__EapMethodExtension operations:
/// - tt__EapMethodExtension* soap_new_tt__EapMethodExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__EapMethodExtension(struct soap*, tt__EapMethodExtension*) default initialize members
/// - int soap_read_tt__EapMethodExtension(struct soap*, tt__EapMethodExtension*) deserialize from a source
/// - int soap_write_tt__EapMethodExtension(struct soap*, tt__EapMethodExtension*) serialize to a sink
/// - tt__EapMethodExtension* soap_dup_tt__EapMethodExtension(struct soap*, tt__EapMethodExtension* dst, tt__EapMethodExtension *src) returns deep copy of tt__EapMethodExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EapMethodExtension(tt__EapMethodExtension*) deep deletes tt__EapMethodExtension data members, use only on dst after soap_dup_tt__EapMethodExtension(NULL, tt__EapMethodExtension *dst, tt__EapMethodExtension *src) (use soapcpp2 -Ed)
struct tt__EapMethodExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
};

/// @brief "http://www.onvif.org/ver10/schema":TLSConfiguration is a complexType.
///
/// @note struct tt__TLSConfiguration operations:
/// - tt__TLSConfiguration* soap_new_tt__TLSConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__TLSConfiguration(struct soap*, tt__TLSConfiguration*) default initialize members
/// - int soap_read_tt__TLSConfiguration(struct soap*, tt__TLSConfiguration*) deserialize from a source
/// - int soap_write_tt__TLSConfiguration(struct soap*, tt__TLSConfiguration*) serialize to a sink
/// - tt__TLSConfiguration* soap_dup_tt__TLSConfiguration(struct soap*, tt__TLSConfiguration* dst, tt__TLSConfiguration *src) returns deep copy of tt__TLSConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__TLSConfiguration(tt__TLSConfiguration*) deep deletes tt__TLSConfiguration data members, use only on dst after soap_dup_tt__TLSConfiguration(NULL, tt__TLSConfiguration *dst, tt__TLSConfiguration *src) (use soapcpp2 -Ed)
struct tt__TLSConfiguration
{
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":GenericEapPwdConfigurationExtension is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":RelayOutputSettings is a complexType.
///
/// @note struct tt__RelayOutputSettings operations:
/// - tt__RelayOutputSettings* soap_new_tt__RelayOutputSettings(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RelayOutputSettings(struct soap*, tt__RelayOutputSettings*) default initialize members
/// - int soap_read_tt__RelayOutputSettings(struct soap*, tt__RelayOutputSettings*) deserialize from a source
/// - int soap_write_tt__RelayOutputSettings(struct soap*, tt__RelayOutputSettings*) serialize to a sink
/// - tt__RelayOutputSettings* soap_dup_tt__RelayOutputSettings(struct soap*, tt__RelayOutputSettings* dst, tt__RelayOutputSettings *src) returns deep copy of tt__RelayOutputSettings src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RelayOutputSettings(tt__RelayOutputSettings*) deep deletes tt__RelayOutputSettings data members, use only on dst after soap_dup_tt__RelayOutputSettings(NULL, tt__RelayOutputSettings *dst, tt__RelayOutputSettings *src) (use soapcpp2 -Ed)
struct tt__RelayOutputSettings
{
/// <PRE><BLOCKQUOTE>
///   'Bistable' or 'Monostable'
///   <ul>
///   <li>Bistable After setting the state, the relay remains in this state.</li>
///   <li>Monostable After setting the state, the relay returns to its idle state after the specified time.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":RelayMode.
    enum tt__RelayMode                   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.
/// </BLOCKQUOTE></PRE>
///
/// Element "DelayTime" of type xs:duration.
    xsd__duration                        DelayTime                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   'open' or 'closed'
///   <ul>
///   <li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li>
///   <li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "IdleState" of type "http://www.onvif.org/ver10/schema":RelayIdleState.
    enum tt__RelayIdleState              IdleState                      1;	///< Required element.
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZNodeExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZNodeExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourSupported is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTControlDirection is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTControlDirectionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EFlip is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Reverse is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTControlDirectionOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EFlipOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EFlipOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReverseOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReverseOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PanTiltLimits is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ZoomLimits is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZSpaces is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZSpacesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Space2DDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Space1DDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZSpeed is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPreset is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PresetTour is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourSpot is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettings is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Exposure is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WideDynamicRange is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BacklightCompensation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ExposureOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusMove is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AbsoluteFocus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RelativeFocus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ContinuousFocus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MoveOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RelativeFocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalance is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingStatus20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusStatus20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusStatus20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettings20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImageStabilization is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImageStabilizationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustment is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WideDynamicRange20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BacklightCompensation20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Exposure20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ToneCompensation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ToneCompensationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Defogging is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DefoggingExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NoiseReduction is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImageStabilizationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ExposureOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MoveOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalance20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusConfiguration20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusOptions20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ToneCompensationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DefoggingOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NoiseReductionOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MessageExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ItemList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ItemListExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MessageDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ItemListDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Polyline is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Config is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ConfigDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedRules is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedRulesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolylineArray is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolylineArrayExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolylineArrayConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MotionExpression is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MotionExpressionConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CellLayout is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneLayout is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Layout is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LayoutExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CodingCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LayoutOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LayoutOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneLayoutOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneOptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Receiver is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReceiverConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReceiverStateInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SourceReference is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":DateTimeRange is a complexType.
///
/// @note struct tt__DateTimeRange operations:
/// - tt__DateTimeRange* soap_new_tt__DateTimeRange(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DateTimeRange(struct soap*, tt__DateTimeRange*) default initialize members
/// - int soap_read_tt__DateTimeRange(struct soap*, tt__DateTimeRange*) deserialize from a source
/// - int soap_write_tt__DateTimeRange(struct soap*, tt__DateTimeRange*) serialize to a sink
/// - tt__DateTimeRange* soap_dup_tt__DateTimeRange(struct soap*, tt__DateTimeRange* dst, tt__DateTimeRange *src) returns deep copy of tt__DateTimeRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DateTimeRange(tt__DateTimeRange*) deep deletes tt__DateTimeRange data members, use only on dst after soap_dup_tt__DateTimeRange(NULL, tt__DateTimeRange *dst, tt__DateTimeRange *src) (use soapcpp2 -Ed)
struct tt__DateTimeRange
{
/// Element "From" of type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// Element "Until" of type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingSummary is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SearchScope is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SearchScopeExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPositionFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindRecordingResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindEventResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindEventResult is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindPTZPositionResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindPTZPositionResult is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindMetadataResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindMetadataResult is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingSourceInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MediaAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackAttributesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetRecordingsResponseItem is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetTracksResponseList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetTracksResponseItem is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobSource is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobTrack is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateSource is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateTracks is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateTrack is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetRecordingJobsResponseItem is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReplayConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EngineConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SourceIdentification is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SourceIdentificationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataInput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataInputExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsStateInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsState is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ActionEngineEventPayload is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioClassCandidate is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioClassDescriptor is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ActiveConnection is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileStatusExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDPosConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDColor is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDTextConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDImgConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ColorspaceRange is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ColorOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDColorOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDTextOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDImgOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FileProgress is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ArrayOfFileProgress is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":StorageReferencePath is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":StorageReferencePathExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolygonOptions is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":IntRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__IntRange operations:
/// - tt__IntRange* soap_new_tt__IntRange(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IntRange(struct soap*, tt__IntRange*) default initialize members
/// - int soap_read_tt__IntRange(struct soap*, tt__IntRange*) deserialize from a source
/// - int soap_write_tt__IntRange(struct soap*, tt__IntRange*) serialize to a sink
/// - tt__IntRange* soap_dup_tt__IntRange(struct soap*, tt__IntRange* dst, tt__IntRange *src) returns deep copy of tt__IntRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IntRange(tt__IntRange*) deep deletes tt__IntRange data members, use only on dst after soap_dup_tt__IntRange(NULL, tt__IntRange *dst, tt__IntRange *src) (use soapcpp2 -Ed)
struct tt__IntRange
{
/// Element "Min" of type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element "Max" of type xs:int.
    int                                  Max                            1;	///< Required element.
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":Vector2D is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Vector1D is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZVector is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZMoveStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Vector is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Rectangle is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Polygon is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Color is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ColorCovariance is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ColorDescriptor is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Transformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TransformationExtension is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":GeoLocation is a complexType.
///
/// @note struct tt__GeoLocation operations:
/// - tt__GeoLocation* soap_new_tt__GeoLocation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__GeoLocation(struct soap*, tt__GeoLocation*) default initialize members
/// - int soap_read_tt__GeoLocation(struct soap*, tt__GeoLocation*) deserialize from a source
/// - int soap_write_tt__GeoLocation(struct soap*, tt__GeoLocation*) serialize to a sink
/// - tt__GeoLocation* soap_dup_tt__GeoLocation(struct soap*, tt__GeoLocation* dst, tt__GeoLocation *src) returns deep copy of tt__GeoLocation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__GeoLocation(tt__GeoLocation*) deep deletes tt__GeoLocation data members, use only on dst after soap_dup_tt__GeoLocation(NULL, tt__GeoLocation *dst, tt__GeoLocation *src) (use soapcpp2 -Ed)
struct tt__GeoLocation
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   East west location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "lon" of type xs:double.
  @ double*                              lon                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   North south location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "lat" of type xs:double.
  @ double*                              lat                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Hight in meters above sea level.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "elevation" of type xs:float.
  @ float*                               elevation                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":GeoOrientation is a complexType.
///
/// @note struct tt__GeoOrientation operations:
/// - tt__GeoOrientation* soap_new_tt__GeoOrientation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__GeoOrientation(struct soap*, tt__GeoOrientation*) default initialize members
/// - int soap_read_tt__GeoOrientation(struct soap*, tt__GeoOrientation*) deserialize from a source
/// - int soap_write_tt__GeoOrientation(struct soap*, tt__GeoOrientation*) serialize to a sink
/// - tt__GeoOrientation* soap_dup_tt__GeoOrientation(struct soap*, tt__GeoOrientation* dst, tt__GeoOrientation *src) returns deep copy of tt__GeoOrientation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__GeoOrientation(tt__GeoOrientation*) deep deletes tt__GeoOrientation data members, use only on dst after soap_dup_tt__GeoOrientation(NULL, tt__GeoOrientation *dst, tt__GeoOrientation *src) (use soapcpp2 -Ed)
struct tt__GeoOrientation
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Rotation around the x axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "roll" of type xs:float.
  @ float*                               roll                           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the y axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "pitch" of type xs:float.
  @ float*                               pitch                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the z axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "yaw" of type xs:float.
  @ float*                               yaw                            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":LocalLocation is a complexType.
///
/// @note struct tt__LocalLocation operations:
/// - tt__LocalLocation* soap_new_tt__LocalLocation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__LocalLocation(struct soap*, tt__LocalLocation*) default initialize members
/// - int soap_read_tt__LocalLocation(struct soap*, tt__LocalLocation*) deserialize from a source
/// - int soap_write_tt__LocalLocation(struct soap*, tt__LocalLocation*) serialize to a sink
/// - tt__LocalLocation* soap_dup_tt__LocalLocation(struct soap*, tt__LocalLocation* dst, tt__LocalLocation *src) returns deep copy of tt__LocalLocation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LocalLocation(tt__LocalLocation*) deep deletes tt__LocalLocation data members, use only on dst after soap_dup_tt__LocalLocation(NULL, tt__LocalLocation *dst, tt__LocalLocation *src) (use soapcpp2 -Ed)
struct tt__LocalLocation
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   East west location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "x" of type xs:float.
  @ float*                               x                              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   North south location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "y" of type xs:float.
  @ float*                               y                              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Offset in meters from the sea level.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "z" of type xs:float.
  @ float*                               z                              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":LocalOrientation is a complexType.
///
/// @note struct tt__LocalOrientation operations:
/// - tt__LocalOrientation* soap_new_tt__LocalOrientation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__LocalOrientation(struct soap*, tt__LocalOrientation*) default initialize members
/// - int soap_read_tt__LocalOrientation(struct soap*, tt__LocalOrientation*) deserialize from a source
/// - int soap_write_tt__LocalOrientation(struct soap*, tt__LocalOrientation*) serialize to a sink
/// - tt__LocalOrientation* soap_dup_tt__LocalOrientation(struct soap*, tt__LocalOrientation* dst, tt__LocalOrientation *src) returns deep copy of tt__LocalOrientation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LocalOrientation(tt__LocalOrientation*) deep deletes tt__LocalOrientation data members, use only on dst after soap_dup_tt__LocalOrientation(NULL, tt__LocalOrientation *dst, tt__LocalOrientation *src) (use soapcpp2 -Ed)
struct tt__LocalOrientation
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Rotation around the y axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "pan" of type xs:float.
  @ float*                               pan                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the z axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "tilt" of type xs:float.
  @ float*                               tilt                           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the x axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "roll" of type xs:float.
  @ float*                               roll                           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":LocationEntity is a complexType.
///
/// @note struct tt__LocationEntity operations:
/// - tt__LocationEntity* soap_new_tt__LocationEntity(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__LocationEntity(struct soap*, tt__LocationEntity*) default initialize members
/// - int soap_read_tt__LocationEntity(struct soap*, tt__LocationEntity*) deserialize from a source
/// - int soap_write_tt__LocationEntity(struct soap*, tt__LocationEntity*) serialize to a sink
/// - tt__LocationEntity* soap_dup_tt__LocationEntity(struct soap*, tt__LocationEntity* dst, tt__LocationEntity *src) returns deep copy of tt__LocationEntity src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__LocationEntity(tt__LocationEntity*) deep deletes tt__LocationEntity data members, use only on dst after soap_dup_tt__LocationEntity(NULL, tt__LocationEntity *dst, tt__LocationEntity *src) (use soapcpp2 -Ed)
struct tt__LocationEntity
{
/// <PRE><BLOCKQUOTE>
///   Location on earth.
/// </BLOCKQUOTE></PRE>
///
/// Element "GeoLocation" of type "http://www.onvif.org/ver10/schema":GeoLocation.
    struct tt__GeoLocation*              GeoLocation                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Orientation relative to earth.
/// </BLOCKQUOTE></PRE>
///
/// Element "GeoOrientation" of type "http://www.onvif.org/ver10/schema":GeoOrientation.
    struct tt__GeoOrientation*           GeoOrientation                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indoor location offset.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalLocation" of type "http://www.onvif.org/ver10/schema":LocalLocation.
    struct tt__LocalLocation*            LocalLocation                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indoor orientation offset.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalOrientation" of type "http://www.onvif.org/ver10/schema":LocalOrientation.
    struct tt__LocalOrientation*         LocalOrientation               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Entity type the entry refers to, use a value from the tt:Entity enumeration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Entity" of type xs:string.
  @ char*                                Entity                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional entity token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   Token                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If this value is true the entity cannot be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Fixed" of type xs:boolean.
  @ enum xsd__boolean*                   Fixed                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional reference to the XAddr of another devices DeviceManagement service.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoSource" of type xs:anyURI.
  @ xsd__anyURI                          GeoSource                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If set the geo location is obtained internally.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AutoGeo" of type xs:boolean.
  @ enum xsd__boolean*                   AutoGeo                        0;	///< Optional attribute.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":StringItems
// Optimization: complexType "http://www.onvif.org/ver10/schema":StringItems is not used and was removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Message
// Optimization: complexType "http://www.onvif.org/ver10/schema":Message is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":FilterType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Notify is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UseRaw is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Subscribe is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetMessages is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Renew is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":RenewResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

// Optimization: complexType "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":Documentation is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note struct tds__StorageConfiguration operations:
/// - tds__StorageConfiguration* soap_new_tds__StorageConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__StorageConfiguration(struct soap*, tds__StorageConfiguration*) default initialize members
/// - int soap_read_tds__StorageConfiguration(struct soap*, tds__StorageConfiguration*) deserialize from a source
/// - int soap_write_tds__StorageConfiguration(struct soap*, tds__StorageConfiguration*) serialize to a sink
/// - tds__StorageConfiguration* soap_dup_tds__StorageConfiguration(struct soap*, tds__StorageConfiguration* dst, tds__StorageConfiguration *src) returns deep copy of tds__StorageConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__StorageConfiguration(tds__StorageConfiguration*) deep deletes tds__StorageConfiguration data members, use only on dst after soap_dup_tds__StorageConfiguration(NULL, tds__StorageConfiguration *dst, tds__StorageConfiguration *src) (use soapcpp2 -Ed)
struct tds__StorageConfiguration
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   :token                         1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// Element "Data" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    struct tds__StorageConfigurationData*  Data                           1;	///< Required element.
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSource is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioSource is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":JpegOptions2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Mpeg4Options2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":H264Options2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioOutput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterface is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note struct tt__NetworkInterface operations:
/// - tt__NetworkInterface* soap_new_tt__NetworkInterface(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__NetworkInterface(struct soap*, tt__NetworkInterface*) default initialize members
/// - int soap_read_tt__NetworkInterface(struct soap*, tt__NetworkInterface*) deserialize from a source
/// - int soap_write_tt__NetworkInterface(struct soap*, tt__NetworkInterface*) serialize to a sink
/// - tt__NetworkInterface* soap_dup_tt__NetworkInterface(struct soap*, tt__NetworkInterface* dst, tt__NetworkInterface *src) returns deep copy of tt__NetworkInterface src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__NetworkInterface(tt__NetworkInterface*) deep deletes tt__NetworkInterface data members, use only on dst after soap_dup_tt__NetworkInterface(NULL, tt__NetworkInterface *dst, tt__NetworkInterface *src) (use soapcpp2 -Ed)
struct tt__NetworkInterface
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    enum xsd__boolean                    Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface information
/// </BLOCKQUOTE></PRE>
///
/// Element "Info" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo.
    struct tt__NetworkInterfaceInfo*     Info                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Link" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceLink.
    struct tt__NetworkInterfaceLink*     Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4" of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterface.
    struct tt__IPv4NetworkInterface*     IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6" of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterface.
    struct tt__IPv6NetworkInterface*     IPv6                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension.
    struct tt__NetworkInterfaceExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateUsage is a complexType with simpleContent extension of type xs:string.
///
/// @note struct tt__CertificateUsage operations:
/// - tt__CertificateUsage* soap_new_tt__CertificateUsage(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__CertificateUsage(struct soap*, tt__CertificateUsage*) default initialize members
/// - int soap_read_tt__CertificateUsage(struct soap*, tt__CertificateUsage*) deserialize from a source
/// - int soap_write_tt__CertificateUsage(struct soap*, tt__CertificateUsage*) serialize to a sink
/// - tt__CertificateUsage* soap_dup_tt__CertificateUsage(struct soap*, tt__CertificateUsage* dst, tt__CertificateUsage *src) returns deep copy of tt__CertificateUsage src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__CertificateUsage(tt__CertificateUsage*) deep deletes tt__CertificateUsage data members, use only on dst after soap_dup_tt__CertificateUsage(NULL, tt__CertificateUsage *dst, tt__CertificateUsage *src) (use soapcpp2 -Ed)
struct tt__CertificateUsage
{
/// INHERITED FROM tt__CertificateUsage:
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Attribute "Critical" of type xs:boolean.
  @ enum xsd__boolean                    Critical                       1;	///< Required attribute.
//  END OF INHERITED FROM tt__CertificateUsage
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note struct tt__RelayOutput operations:
/// - tt__RelayOutput* soap_new_tt__RelayOutput(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RelayOutput(struct soap*, tt__RelayOutput*) default initialize members
/// - int soap_read_tt__RelayOutput(struct soap*, tt__RelayOutput*) deserialize from a source
/// - int soap_write_tt__RelayOutput(struct soap*, tt__RelayOutput*) serialize to a sink
/// - tt__RelayOutput* soap_dup_tt__RelayOutput(struct soap*, tt__RelayOutput* dst, tt__RelayOutput *src) returns deep copy of tt__RelayOutput src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RelayOutput(tt__RelayOutput*) deep deletes tt__RelayOutput data members, use only on dst after soap_dup_tt__RelayOutput(NULL, tt__RelayOutput *dst, tt__RelayOutput *src) (use soapcpp2 -Ed)
struct tt__RelayOutput
{
/// INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__DeviceEntity
/// Element "Properties" of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    struct tt__RelayOutputSettings*      Properties                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":DigitalInput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZNode is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EventFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngine is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineInput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineControl is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDConfiguration is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":TopicType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":TopicSetType is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDReference is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":Capabilities of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":StringList of type "http://www.onvif.org/ver10/schema":StringList.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntRange of type "http://www.onvif.org/ver10/schema":IntRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntList of type "http://www.onvif.org/ver10/schema":IntList.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":FloatRange of type "http://www.onvif.org/ver10/schema":FloatRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":FloatList of type "http://www.onvif.org/ver10/schema":FloatList.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":DurationRange of type "http://www.onvif.org/ver10/schema":DurationRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntRectangleRange of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polyline of type "http://www.onvif.org/ver10/schema":Polyline.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PolygonOptions of type "http://www.onvif.org/ver10/schema":PolygonOptions.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polygon of type "http://www.onvif.org/ver10/schema":Polygon.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
// Optimization: attribute not used and removed

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
// Optimization: attribute not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Hello of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":HelloType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":HelloResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Probe of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":ProbeResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchesType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Bye of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ByeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":ByeResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap tdn  service name:	RemoteDiscoveryBinding 
//gsoap tdn  service type:	RemoteDiscoveryPort 
//gsoap tdn  service namespace:	http://www.onvif.org/ver10/network/wsdl 
//gsoap tdn  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tds  service name:	DeviceBinding 
//gsoap tds  service type:	Device 
//gsoap tds  service namespace:	http://www.onvif.org/ver10/device/wsdl 
//gsoap tds  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage WSDL Definitions

@section WSDL_bindings Service Bindings

  - @ref RemoteDiscoveryBinding

  - @ref DeviceBinding

@section WSDL_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/** @page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_operations Operations of Binding "RemoteDiscoveryBinding"

  - @ref __tdn__Hello

  - @ref __tdn__Bye

  - @ref __tdn__Probe

@section RemoteDiscoveryBinding_ports Default endpoints of Binding "RemoteDiscoveryBinding"

@note Multiple service bindings collected as one, use wsdl2h option -Nname to produce a separate service for each binding


*/

/** @page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_operations Operations of Binding "DeviceBinding"

  - @ref __tds__GetServices

  - @ref __tds__GetServiceCapabilities

  - @ref __tds__GetDeviceInformation

  - @ref __tds__SetSystemDateAndTime

  - @ref __tds__GetSystemDateAndTime

  - @ref __tds__SetSystemFactoryDefault

  - @ref __tds__UpgradeSystemFirmware

  - @ref __tds__SystemReboot

  - @ref __tds__RestoreSystem

  - @ref __tds__GetSystemBackup

  - @ref __tds__GetSystemLog

  - @ref __tds__GetSystemSupportInformation

  - @ref __tds__GetScopes

  - @ref __tds__SetScopes

  - @ref __tds__AddScopes

  - @ref __tds__RemoveScopes

  - @ref __tds__GetDiscoveryMode

  - @ref __tds__SetDiscoveryMode

  - @ref __tds__GetRemoteDiscoveryMode

  - @ref __tds__SetRemoteDiscoveryMode

  - @ref __tds__GetDPAddresses

  - @ref __tds__GetEndpointReference

  - @ref __tds__GetRemoteUser

  - @ref __tds__SetRemoteUser

  - @ref __tds__GetUsers

  - @ref __tds__CreateUsers

  - @ref __tds__DeleteUsers

  - @ref __tds__SetUser

  - @ref __tds__GetWsdlUrl

  - @ref __tds__GetPasswordComplexityOptions

  - @ref __tds__GetPasswordComplexityConfiguration

  - @ref __tds__SetPasswordComplexityConfiguration

  - @ref __tds__GetPasswordHistoryConfiguration

  - @ref __tds__SetPasswordHistoryConfiguration

  - @ref __tds__GetAuthFailureWarningOptions

  - @ref __tds__GetAuthFailureWarningConfiguration

  - @ref __tds__SetAuthFailureWarningConfiguration

  - @ref __tds__GetCapabilities

  - @ref __tds__SetDPAddresses

  - @ref __tds__GetHostname

  - @ref __tds__SetHostname

  - @ref __tds__SetHostnameFromDHCP

  - @ref __tds__GetDNS

  - @ref __tds__SetDNS

  - @ref __tds__GetNTP

  - @ref __tds__SetNTP

  - @ref __tds__GetDynamicDNS

  - @ref __tds__SetDynamicDNS

  - @ref __tds__GetNetworkInterfaces

  - @ref __tds__SetNetworkInterfaces

  - @ref __tds__GetNetworkProtocols

  - @ref __tds__SetNetworkProtocols

  - @ref __tds__GetNetworkDefaultGateway

  - @ref __tds__SetNetworkDefaultGateway

  - @ref __tds__GetZeroConfiguration

  - @ref __tds__SetZeroConfiguration

  - @ref __tds__GetIPAddressFilter

  - @ref __tds__SetIPAddressFilter

  - @ref __tds__AddIPAddressFilter

  - @ref __tds__RemoveIPAddressFilter

  - @ref __tds__GetAccessPolicy

  - @ref __tds__SetAccessPolicy

  - @ref __tds__CreateCertificate

  - @ref __tds__GetCertificates

  - @ref __tds__GetCertificatesStatus

  - @ref __tds__SetCertificatesStatus

  - @ref __tds__DeleteCertificates

  - @ref __tds__GetPkcs10Request

  - @ref __tds__LoadCertificates

  - @ref __tds__GetClientCertificateMode

  - @ref __tds__SetClientCertificateMode

  - @ref __tds__GetRelayOutputs

  - @ref __tds__SetRelayOutputSettings

  - @ref __tds__SetRelayOutputState

  - @ref __tds__SendAuxiliaryCommand

  - @ref __tds__GetCACertificates

  - @ref __tds__LoadCertificateWithPrivateKey

  - @ref __tds__GetCertificateInformation

  - @ref __tds__LoadCACertificates

  - @ref __tds__CreateDot1XConfiguration

  - @ref __tds__SetDot1XConfiguration

  - @ref __tds__GetDot1XConfiguration

  - @ref __tds__GetDot1XConfigurations

  - @ref __tds__DeleteDot1XConfiguration

  - @ref __tds__GetDot11Capabilities

  - @ref __tds__GetDot11Status

  - @ref __tds__ScanAvailableDot11Networks

  - @ref __tds__GetSystemUris

  - @ref __tds__StartFirmwareUpgrade

  - @ref __tds__StartSystemRestore

  - @ref __tds__GetStorageConfigurations

  - @ref __tds__CreateStorageConfiguration

  - @ref __tds__GetStorageConfiguration

  - @ref __tds__SetStorageConfiguration

  - @ref __tds__DeleteStorageConfiguration

  - @ref __tds__GetGeoLocation

  - @ref __tds__SetGeoLocation

  - @ref __tds__DeleteGeoLocation

@section DeviceBinding_ports Default endpoints of Binding "DeviceBinding"

@note Multiple service bindings collected as one, use wsdl2h option -Nname to produce a separate service for each binding


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   RemoteDiscoveryBinding                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Hello                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Hello" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/network/wsdl/Hello"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Hello"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/HelloResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Hello(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__HelloType                     tdn__Hello,
    // output parameters:
    wsdd__ResolveType                  *tdn__HelloResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Hello(
    struct soap *soap,
    // input parameters:
    wsdd__HelloType                     tdn__Hello,
    // output parameters:
    wsdd__ResolveType                  *tdn__HelloResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Hello SOAP
//gsoap tdn  service method-style:	Hello document
//gsoap tdn  service method-encoding:	Hello literal
//gsoap tdn  service method-input-action:	Hello http://www.onvif.org/ver10/network/wsdl/Hello
//gsoap tdn  service method-output-action:	Hello http://www.onvif.org/ver10/network/wsdl/HelloResponse
int __tdn__Hello(
    wsdd__HelloType                     tdn__Hello,	///< Input parameter
    wsdd__ResolveType                  *tdn__HelloResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Bye                                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Bye" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/network/wsdl/Bye"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Bye"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/ByeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Bye(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__ByeType                       tdn__Bye,
    // output parameters:
    wsdd__ResolveType                  *tdn__ByeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Bye(
    struct soap *soap,
    // input parameters:
    wsdd__ByeType                       tdn__Bye,
    // output parameters:
    wsdd__ResolveType                  *tdn__ByeResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Bye SOAP
//gsoap tdn  service method-style:	Bye document
//gsoap tdn  service method-encoding:	Bye literal
//gsoap tdn  service method-input-action:	Bye http://www.onvif.org/ver10/network/wsdl/Bye
//gsoap tdn  service method-output-action:	Bye http://www.onvif.org/ver10/network/wsdl/ByeResponse
int __tdn__Bye(
    wsdd__ByeType                       tdn__Bye,	///< Input parameter
    wsdd__ResolveType                  *tdn__ByeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Probe                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Probe" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/network/wsdl/Probe"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Probe"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/ProbeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Probe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__ProbeType                     tdn__Probe,
    // output parameters:
    wsdd__ProbeMatchesType             *tdn__ProbeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Probe(
    struct soap *soap,
    // input parameters:
    wsdd__ProbeType                     tdn__Probe,
    // output parameters:
    wsdd__ProbeMatchesType             *tdn__ProbeResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Probe SOAP
//gsoap tdn  service method-style:	Probe document
//gsoap tdn  service method-encoding:	Probe literal
//gsoap tdn  service method-input-action:	Probe http://www.onvif.org/ver10/network/wsdl/Probe
//gsoap tdn  service method-output-action:	Probe http://www.onvif.org/ver10/network/wsdl/ProbeResponse
int __tdn__Probe(
    wsdd__ProbeType                     tdn__Probe,	///< Input parameter
    wsdd__ProbeMatchesType             *tdn__ProbeResponse	///< Output parameter
);

/** @page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_policy_enablers Policy Enablers of Binding "RemoteDiscoveryBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServices                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServices" of service binding "DeviceBinding".
Returns information about services on the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServicesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServices(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetServices*           tds__GetServices,
    // output parameters:
    struct _tds__GetServicesResponse   *tds__GetServicesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServices(
    struct soap *soap,
    // input parameters:
    struct _tds__GetServices*           tds__GetServices,
    // output parameters:
    struct _tds__GetServicesResponse   *tds__GetServicesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetServices SOAP
//gsoap tds  service method-style:	GetServices document
//gsoap tds  service method-encoding:	GetServices literal
//gsoap tds  service method-input-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServices
//gsoap tds  service method-output-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServicesResponse
int __tds__GetServices(
    struct _tds__GetServices*           tds__GetServices,	///< Input parameter
    struct _tds__GetServicesResponse   *tds__GetServicesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServiceCapabilities" of service binding "DeviceBinding".
Returns the capabilities of the device service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,
    // output parameters:
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,
    // output parameters:
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tds  service method-style:	GetServiceCapabilities document
//gsoap tds  service method-encoding:	GetServiceCapabilities literal
//gsoap tds  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities
//gsoap tds  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse
int __tds__GetServiceCapabilities(
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,	///< Input parameter
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDeviceInformation                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDeviceInformation" of service binding "DeviceBinding".
This operation gets basic device information from the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDeviceInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,
    // output parameters:
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDeviceInformation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,
    // output parameters:
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDeviceInformation SOAP
//gsoap tds  service method-style:	GetDeviceInformation document
//gsoap tds  service method-encoding:	GetDeviceInformation literal
//gsoap tds  service method-input-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation
//gsoap tds  service method-output-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse
int __tds__GetDeviceInformation(
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,	///< Input parameter
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemDateAndTime" of service binding "DeviceBinding".
This operation sets the device system date and time. The device shall support the
				configuration of the daylight saving setting and
of the manual system date and time (if
				applicable) or indication of NTP time (if applicable)
through the SetSystemDateAndTime
				command. <br/>
				If system time and date are set manually, the client
shall include UTCDateTime in the request.<br/>
				A TimeZone token which is not formed according to
the rules of IEEE 1003.1 section 8.3 is considered as invalid timezone.<br/>
				The DayLightSavings flag should be set to true to
activate any DST settings of the TimeZone string. 
				Clear the DayLightSavings flag if the DST portion
of the TimeZone settings should be ignored.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetSystemDateAndTime*  tds__SetSystemDateAndTime,
    // output parameters:
    struct _tds__SetSystemDateAndTimeResponse*tds__SetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    struct _tds__SetSystemDateAndTime*  tds__SetSystemDateAndTime,
    // output parameters:
    struct _tds__SetSystemDateAndTimeResponse*tds__SetSystemDateAndTimeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetSystemDateAndTime SOAP
//gsoap tds  service method-style:	SetSystemDateAndTime document
//gsoap tds  service method-encoding:	SetSystemDateAndTime literal
//gsoap tds  service method-input-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime
//gsoap tds  service method-output-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse
int __tds__SetSystemDateAndTime(
    struct _tds__SetSystemDateAndTime*  tds__SetSystemDateAndTime,	///< Input parameter
    struct _tds__SetSystemDateAndTimeResponse*tds__SetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemDateAndTime" of service binding "DeviceBinding".
This operation gets the device system date and time. The device shall support the
return of
				the daylight saving setting and of the manual system
date and time (if applicable) or indication
				of NTP time (if applicable) through the GetSystemDateAndTime
command.<br/>
				A device shall provide the UTCDateTime information.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemDateAndTime*  tds__GetSystemDateAndTime,
    // output parameters:
    struct _tds__GetSystemDateAndTimeResponse*tds__GetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemDateAndTime*  tds__GetSystemDateAndTime,
    // output parameters:
    struct _tds__GetSystemDateAndTimeResponse*tds__GetSystemDateAndTimeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemDateAndTime SOAP
//gsoap tds  service method-style:	GetSystemDateAndTime document
//gsoap tds  service method-encoding:	GetSystemDateAndTime literal
//gsoap tds  service method-input-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime
//gsoap tds  service method-output-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse
int __tds__GetSystemDateAndTime(
    struct _tds__GetSystemDateAndTime*  tds__GetSystemDateAndTime,	///< Input parameter
    struct _tds__GetSystemDateAndTimeResponse*tds__GetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemFactoryDefault                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemFactoryDefault" of service binding "DeviceBinding".
This operation reloads the parameters on the device to their factory default values.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemFactoryDefault(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetSystemFactoryDefault* tds__SetSystemFactoryDefault,
    // output parameters:
    struct _tds__SetSystemFactoryDefaultResponse*tds__SetSystemFactoryDefaultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemFactoryDefault(
    struct soap *soap,
    // input parameters:
    struct _tds__SetSystemFactoryDefault* tds__SetSystemFactoryDefault,
    // output parameters:
    struct _tds__SetSystemFactoryDefaultResponse*tds__SetSystemFactoryDefaultResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetSystemFactoryDefault SOAP
//gsoap tds  service method-style:	SetSystemFactoryDefault document
//gsoap tds  service method-encoding:	SetSystemFactoryDefault literal
//gsoap tds  service method-input-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault
//gsoap tds  service method-output-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse
int __tds__SetSystemFactoryDefault(
    struct _tds__SetSystemFactoryDefault* tds__SetSystemFactoryDefault,	///< Input parameter
    struct _tds__SetSystemFactoryDefaultResponse*tds__SetSystemFactoryDefaultResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__UpgradeSystemFirmware                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__UpgradeSystemFirmware" of service binding "DeviceBinding".
This operation upgrades a device firmware version. After a successful upgrade the
response
				message is sent before the device reboots. The device
should support firmware upgrade
				through the UpgradeSystemFirmware command. The exact
format of the firmware data is
				outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__UpgradeSystemFirmware(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__UpgradeSystemFirmware* tds__UpgradeSystemFirmware,
    // output parameters:
    struct _tds__UpgradeSystemFirmwareResponse*tds__UpgradeSystemFirmwareResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__UpgradeSystemFirmware(
    struct soap *soap,
    // input parameters:
    struct _tds__UpgradeSystemFirmware* tds__UpgradeSystemFirmware,
    // output parameters:
    struct _tds__UpgradeSystemFirmwareResponse*tds__UpgradeSystemFirmwareResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	UpgradeSystemFirmware SOAP
//gsoap tds  service method-style:	UpgradeSystemFirmware document
//gsoap tds  service method-encoding:	UpgradeSystemFirmware literal
//gsoap tds  service method-input-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware
//gsoap tds  service method-output-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse
int __tds__UpgradeSystemFirmware(
    struct _tds__UpgradeSystemFirmware* tds__UpgradeSystemFirmware,	///< Input parameter
    struct _tds__UpgradeSystemFirmwareResponse*tds__UpgradeSystemFirmwareResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SystemReboot                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SystemReboot" of service binding "DeviceBinding".
This operation reboots the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SystemReboot(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SystemReboot*          tds__SystemReboot,
    // output parameters:
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SystemReboot(
    struct soap *soap,
    // input parameters:
    struct _tds__SystemReboot*          tds__SystemReboot,
    // output parameters:
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SystemReboot SOAP
//gsoap tds  service method-style:	SystemReboot document
//gsoap tds  service method-encoding:	SystemReboot literal
//gsoap tds  service method-input-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemReboot
//gsoap tds  service method-output-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse
int __tds__SystemReboot(
    struct _tds__SystemReboot*          tds__SystemReboot,	///< Input parameter
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RestoreSystem                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RestoreSystem" of service binding "DeviceBinding".
This operation restores the system backup configuration files(s) previously retrieved
from a
				device. The device should support restore of backup
configuration file(s) through the
				RestoreSystem command. The exact format of the backup
configuration file(s) is outside the
				scope of this standard. If the command is supported,
it shall accept backup files returned by
				the GetSystemBackup command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RestoreSystem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__RestoreSystem*         tds__RestoreSystem,
    // output parameters:
    struct _tds__RestoreSystemResponse *tds__RestoreSystemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RestoreSystem(
    struct soap *soap,
    // input parameters:
    struct _tds__RestoreSystem*         tds__RestoreSystem,
    // output parameters:
    struct _tds__RestoreSystemResponse *tds__RestoreSystemResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	RestoreSystem SOAP
//gsoap tds  service method-style:	RestoreSystem document
//gsoap tds  service method-encoding:	RestoreSystem literal
//gsoap tds  service method-input-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystem
//gsoap tds  service method-output-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse
int __tds__RestoreSystem(
    struct _tds__RestoreSystem*         tds__RestoreSystem,	///< Input parameter
    struct _tds__RestoreSystemResponse *tds__RestoreSystemResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemBackup                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemBackup" of service binding "DeviceBinding".
This operation is retrieves system backup configuration file(s) from a device. The
device
				should support return of back up configuration file(s)
through the GetSystemBackup command.
				The backup is returned with reference to a name
and mime-type together with binary data.
				The exact format of the backup configuration files
is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemBackup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemBackup*       tds__GetSystemBackup,
    // output parameters:
    struct _tds__GetSystemBackupResponse*tds__GetSystemBackupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemBackup(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemBackup*       tds__GetSystemBackup,
    // output parameters:
    struct _tds__GetSystemBackupResponse*tds__GetSystemBackupResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemBackup SOAP
//gsoap tds  service method-style:	GetSystemBackup document
//gsoap tds  service method-encoding:	GetSystemBackup literal
//gsoap tds  service method-input-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackup
//gsoap tds  service method-output-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse
int __tds__GetSystemBackup(
    struct _tds__GetSystemBackup*       tds__GetSystemBackup,	///< Input parameter
    struct _tds__GetSystemBackupResponse*tds__GetSystemBackupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemLog                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemLog" of service binding "DeviceBinding".
This operation gets a system log from the device. The exact format of the system
logs is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemLog(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemLog*          tds__GetSystemLog,
    // output parameters:
    struct _tds__GetSystemLogResponse  *tds__GetSystemLogResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemLog(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemLog*          tds__GetSystemLog,
    // output parameters:
    struct _tds__GetSystemLogResponse  *tds__GetSystemLogResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemLog SOAP
//gsoap tds  service method-style:	GetSystemLog document
//gsoap tds  service method-encoding:	GetSystemLog literal
//gsoap tds  service method-input-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLog
//gsoap tds  service method-output-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse
int __tds__GetSystemLog(
    struct _tds__GetSystemLog*          tds__GetSystemLog,	///< Input parameter
    struct _tds__GetSystemLogResponse  *tds__GetSystemLogResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemSupportInformation                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemSupportInformation" of service binding "DeviceBinding".
This operation gets arbitary device diagnostics information from the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemSupportInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemSupportInformation* tds__GetSystemSupportInformation,
    // output parameters:
    struct _tds__GetSystemSupportInformationResponse*tds__GetSystemSupportInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemSupportInformation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemSupportInformation* tds__GetSystemSupportInformation,
    // output parameters:
    struct _tds__GetSystemSupportInformationResponse*tds__GetSystemSupportInformationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemSupportInformation SOAP
//gsoap tds  service method-style:	GetSystemSupportInformation document
//gsoap tds  service method-encoding:	GetSystemSupportInformation literal
//gsoap tds  service method-input-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation
//gsoap tds  service method-output-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse
int __tds__GetSystemSupportInformation(
    struct _tds__GetSystemSupportInformation* tds__GetSystemSupportInformation,	///< Input parameter
    struct _tds__GetSystemSupportInformationResponse*tds__GetSystemSupportInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetScopes" of service binding "DeviceBinding".
This operation requests the scope parameters of a device. The scope parameters are
used in
				the device discovery to match a probe message, see
Section 7. The Scope parameters are of
				two different types: <ul>
					<li>Fixed</li>
					<li>Configurable</li>
				</ul>
				Fixed scope parameters are permanent device characteristics
and cannot be removed through the device management interface. 
				The scope type is indicated in the scope list returned
in the get scope parameters response. A device shall support 
				retrieval of discovery scope parameters through
the GetScopes command. As some scope parameters are mandatory, 
				the device shall return a non-empty scope list in
the response.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetScopes*             tds__GetScopes,
    // output parameters:
    struct _tds__GetScopesResponse     *tds__GetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__GetScopes*             tds__GetScopes,
    // output parameters:
    struct _tds__GetScopesResponse     *tds__GetScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetScopes SOAP
//gsoap tds  service method-style:	GetScopes document
//gsoap tds  service method-encoding:	GetScopes literal
//gsoap tds  service method-input-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopes
//gsoap tds  service method-output-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopesResponse
int __tds__GetScopes(
    struct _tds__GetScopes*             tds__GetScopes,	///< Input parameter
    struct _tds__GetScopesResponse     *tds__GetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetScopes" of service binding "DeviceBinding".
This operation sets the scope parameters of a device. The scope parameters are used
in the
				device discovery to match a probe message.
				This operation replaces all existing configurable
scope parameters (not fixed parameters). If
				this shall be avoided, one should use the scope
add command instead. The device shall
				support configuration of discovery scope parameters
through the SetScopes command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetScopes*             tds__SetScopes,
    // output parameters:
    struct _tds__SetScopesResponse     *tds__SetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__SetScopes*             tds__SetScopes,
    // output parameters:
    struct _tds__SetScopesResponse     *tds__SetScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetScopes SOAP
//gsoap tds  service method-style:	SetScopes document
//gsoap tds  service method-encoding:	SetScopes literal
//gsoap tds  service method-input-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopes
//gsoap tds  service method-output-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopesResponse
int __tds__SetScopes(
    struct _tds__SetScopes*             tds__SetScopes,	///< Input parameter
    struct _tds__SetScopesResponse     *tds__SetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddScopes" of service binding "DeviceBinding".
This operation adds new configurable scope parameters to a device. The scope parameters
				are used in the device discovery to match a probe
message. The device shall
				support addition of discovery scope parameters through
the AddScopes command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__AddScopes*             tds__AddScopes,
    // output parameters:
    struct _tds__AddScopesResponse     *tds__AddScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__AddScopes*             tds__AddScopes,
    // output parameters:
    struct _tds__AddScopesResponse     *tds__AddScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	AddScopes SOAP
//gsoap tds  service method-style:	AddScopes document
//gsoap tds  service method-encoding:	AddScopes literal
//gsoap tds  service method-input-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopes
//gsoap tds  service method-output-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopesResponse
int __tds__AddScopes(
    struct _tds__AddScopes*             tds__AddScopes,	///< Input parameter
    struct _tds__AddScopesResponse     *tds__AddScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveScopes                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveScopes" of service binding "DeviceBinding".
This operation deletes scope-configurable scope parameters from a device. The scope
				parameters are used in the device discovery to match
a probe message, see Section 7. The
				device shall support deletion of discovery scope
parameters through the RemoveScopes
				command.
				Table

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__RemoveScopes*          tds__RemoveScopes,
    // output parameters:
    struct _tds__RemoveScopesResponse  *tds__RemoveScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveScopes(
    struct soap *soap,
    // input parameters:
    struct _tds__RemoveScopes*          tds__RemoveScopes,
    // output parameters:
    struct _tds__RemoveScopesResponse  *tds__RemoveScopesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	RemoveScopes SOAP
//gsoap tds  service method-style:	RemoveScopes document
//gsoap tds  service method-encoding:	RemoveScopes literal
//gsoap tds  service method-input-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopes
//gsoap tds  service method-output-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse
int __tds__RemoveScopes(
    struct _tds__RemoveScopes*          tds__RemoveScopes,	///< Input parameter
    struct _tds__RemoveScopesResponse  *tds__RemoveScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDiscoveryMode" of service binding "DeviceBinding".
This operation gets the discovery mode of a device. See Section 7.2 for the definition
of the
				different device discovery modes. The device shall
support retrieval of the discovery mode
				setting through the GetDiscoveryMode command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDiscoveryMode*      tds__GetDiscoveryMode,
    // output parameters:
    struct _tds__GetDiscoveryModeResponse*tds__GetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDiscoveryMode*      tds__GetDiscoveryMode,
    // output parameters:
    struct _tds__GetDiscoveryModeResponse*tds__GetDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDiscoveryMode SOAP
//gsoap tds  service method-style:	GetDiscoveryMode document
//gsoap tds  service method-encoding:	GetDiscoveryMode literal
//gsoap tds  service method-input-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode
//gsoap tds  service method-output-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse
int __tds__GetDiscoveryMode(
    struct _tds__GetDiscoveryMode*      tds__GetDiscoveryMode,	///< Input parameter
    struct _tds__GetDiscoveryModeResponse*tds__GetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDiscoveryMode" of service binding "DeviceBinding".
This operation sets the discovery mode operation of a device. See Section 7.2 for
the
				definition of the different device discovery modes.
The device shall support configuration of
				the discovery mode setting through the SetDiscoveryMode
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDiscoveryMode*      tds__SetDiscoveryMode,
    // output parameters:
    struct _tds__SetDiscoveryModeResponse*tds__SetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDiscoveryMode*      tds__SetDiscoveryMode,
    // output parameters:
    struct _tds__SetDiscoveryModeResponse*tds__SetDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDiscoveryMode SOAP
//gsoap tds  service method-style:	SetDiscoveryMode document
//gsoap tds  service method-encoding:	SetDiscoveryMode literal
//gsoap tds  service method-input-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode
//gsoap tds  service method-output-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse
int __tds__SetDiscoveryMode(
    struct _tds__SetDiscoveryMode*      tds__SetDiscoveryMode,	///< Input parameter
    struct _tds__SetDiscoveryModeResponse*tds__SetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation gets the remote discovery mode of a device. See Section 7.4 for the
definition
				of remote discovery extensions. A device that supports
remote discovery shall support
				retrieval of the remote discovery mode setting through
the GetRemoteDiscoveryMode
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetRemoteDiscoveryMode* tds__GetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__GetRemoteDiscoveryModeResponse*tds__GetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__GetRemoteDiscoveryMode* tds__GetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__GetRemoteDiscoveryModeResponse*tds__GetRemoteDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	GetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	GetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse
int __tds__GetRemoteDiscoveryMode(
    struct _tds__GetRemoteDiscoveryMode* tds__GetRemoteDiscoveryMode,	///< Input parameter
    struct _tds__GetRemoteDiscoveryModeResponse*tds__GetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation sets the remote discovery mode of operation of a device. See Section
7.4 for
				the definition of remote discovery remote extensions.
A device that supports remote discovery
				shall support configuration of the discovery mode
setting through the
				SetRemoteDiscoveryMode command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRemoteDiscoveryMode* tds__SetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__SetRemoteDiscoveryModeResponse*tds__SetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRemoteDiscoveryMode* tds__SetRemoteDiscoveryMode,
    // output parameters:
    struct _tds__SetRemoteDiscoveryModeResponse*tds__SetRemoteDiscoveryModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	SetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	SetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse
int __tds__SetRemoteDiscoveryMode(
    struct _tds__SetRemoteDiscoveryMode* tds__SetRemoteDiscoveryMode,	///< Input parameter
    struct _tds__SetRemoteDiscoveryModeResponse*tds__SetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDPAddresses" of service binding "DeviceBinding".
This operation gets the remote DP address or addresses from a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support retrieval of the remote
				DP address(es) through the GetDPAddresses command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDPAddresses*        tds__GetDPAddresses,
    // output parameters:
    struct _tds__GetDPAddressesResponse*tds__GetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDPAddresses(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDPAddresses*        tds__GetDPAddresses,
    // output parameters:
    struct _tds__GetDPAddressesResponse*tds__GetDPAddressesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDPAddresses SOAP
//gsoap tds  service method-style:	GetDPAddresses document
//gsoap tds  service method-encoding:	GetDPAddresses literal
//gsoap tds  service method-input-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddresses
//gsoap tds  service method-output-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse
int __tds__GetDPAddresses(
    struct _tds__GetDPAddresses*        tds__GetDPAddresses,	///< Input parameter
    struct _tds__GetDPAddressesResponse*tds__GetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetEndpointReference                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetEndpointReference" of service binding "DeviceBinding".
A client can ask for the device service endpoint reference address property that
can be used
				to derive the password equivalent for remote user
operation. The device shall support the
				GetEndpointReference command returning the address
property of the device service
				endpoint reference.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetEndpointReference(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetEndpointReference*  tds__GetEndpointReference,
    // output parameters:
    struct _tds__GetEndpointReferenceResponse*tds__GetEndpointReferenceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetEndpointReference(
    struct soap *soap,
    // input parameters:
    struct _tds__GetEndpointReference*  tds__GetEndpointReference,
    // output parameters:
    struct _tds__GetEndpointReferenceResponse*tds__GetEndpointReferenceResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetEndpointReference SOAP
//gsoap tds  service method-style:	GetEndpointReference document
//gsoap tds  service method-encoding:	GetEndpointReference literal
//gsoap tds  service method-input-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReference
//gsoap tds  service method-output-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse
int __tds__GetEndpointReference(
    struct _tds__GetEndpointReference*  tds__GetEndpointReference,	///< Input parameter
    struct _tds__GetEndpointReferenceResponse*tds__GetEndpointReferenceResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteUser" of service binding "DeviceBinding".
This operation returns the configured remote user (if any). A device supporting
remote user
				handling shall support this operation. The user
is only valid for the WS-UserToken profile or
				as a HTTP / RTSP user.<br/>
				The algorithm to use for deriving the password is
described in section 5.12.2.1 of the core specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetRemoteUser*         tds__GetRemoteUser,
    // output parameters:
    struct _tds__GetRemoteUserResponse *tds__GetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteUser(
    struct soap *soap,
    // input parameters:
    struct _tds__GetRemoteUser*         tds__GetRemoteUser,
    // output parameters:
    struct _tds__GetRemoteUserResponse *tds__GetRemoteUserResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetRemoteUser SOAP
//gsoap tds  service method-style:	GetRemoteUser document
//gsoap tds  service method-encoding:	GetRemoteUser literal
//gsoap tds  service method-input-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUser
//gsoap tds  service method-output-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse
int __tds__GetRemoteUser(
    struct _tds__GetRemoteUser*         tds__GetRemoteUser,	///< Input parameter
    struct _tds__GetRemoteUserResponse *tds__GetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteUser" of service binding "DeviceBinding".
This operation sets the remote user. A device supporting remote user handling shall
support this
				operation. The user is only valid for the WS-UserToken
profile or as a HTTP / RTSP user.<br/>
				The password that is set shall always be the original
(not derived) password.<br/>
				If UseDerivedPassword is set password derivation
shall be done by the device when connecting to a
				remote device.The algorithm to use for deriving
the password is described in section 5.12.2.1 of the core specification.<br/>
				To remove the remote user SetRemoteUser should be
called without the RemoteUser parameter.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRemoteUser*         tds__SetRemoteUser,
    // output parameters:
    struct _tds__SetRemoteUserResponse *tds__SetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteUser(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRemoteUser*         tds__SetRemoteUser,
    // output parameters:
    struct _tds__SetRemoteUserResponse *tds__SetRemoteUserResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRemoteUser SOAP
//gsoap tds  service method-style:	SetRemoteUser document
//gsoap tds  service method-encoding:	SetRemoteUser literal
//gsoap tds  service method-input-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUser
//gsoap tds  service method-output-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse
int __tds__SetRemoteUser(
    struct _tds__SetRemoteUser*         tds__SetRemoteUser,	///< Input parameter
    struct _tds__SetRemoteUserResponse *tds__SetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetUsers                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetUsers" of service binding "DeviceBinding".
This operation lists the registered users and corresponding credentials on a device.
The
				device shall support retrieval of registered device
users and their credentials for the user
				token through the GetUsers command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetUsers*              tds__GetUsers,
    // output parameters:
    struct _tds__GetUsersResponse      *tds__GetUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetUsers(
    struct soap *soap,
    // input parameters:
    struct _tds__GetUsers*              tds__GetUsers,
    // output parameters:
    struct _tds__GetUsersResponse      *tds__GetUsersResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetUsers SOAP
//gsoap tds  service method-style:	GetUsers document
//gsoap tds  service method-encoding:	GetUsers literal
//gsoap tds  service method-input-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsers
//gsoap tds  service method-output-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsersResponse
int __tds__GetUsers(
    struct _tds__GetUsers*              tds__GetUsers,	///< Input parameter
    struct _tds__GetUsersResponse      *tds__GetUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateUsers" of service binding "DeviceBinding".
This operation creates new device users and corresponding credentials on a device
for authentication purposes. 
				The device shall support creation of device users
and their credentials through the CreateUsers
				command. Either all users are created successfully
or a fault message shall be returned
				without creating any user.<br/>
				ONVIF compliant devices are recommended to support
password length of at least 28 bytes,
				as clients may follow the password derivation mechanism
which results in 'password
				equivalent' of length 28 bytes, as described in
section 3.1.2 of the ONVIF security white paper.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateUsers*           tds__CreateUsers,
    // output parameters:
    struct _tds__CreateUsersResponse   *tds__CreateUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateUsers(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateUsers*           tds__CreateUsers,
    // output parameters:
    struct _tds__CreateUsersResponse   *tds__CreateUsersResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateUsers SOAP
//gsoap tds  service method-style:	CreateUsers document
//gsoap tds  service method-encoding:	CreateUsers literal
//gsoap tds  service method-input-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsers
//gsoap tds  service method-output-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse
int __tds__CreateUsers(
    struct _tds__CreateUsers*           tds__CreateUsers,	///< Input parameter
    struct _tds__CreateUsersResponse   *tds__CreateUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteUsers" of service binding "DeviceBinding".
This operation deletes users on a device. The device shall support deletion of device
users and their credentials 
				through the DeleteUsers command. A device may have
one or more fixed users
				that cannot be deleted to ensure access to the unit.
Either all users are deleted successfully or a
				fault message shall be returned and no users be
deleted.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteUsers*           tds__DeleteUsers,
    // output parameters:
    struct _tds__DeleteUsersResponse   *tds__DeleteUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteUsers(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteUsers*           tds__DeleteUsers,
    // output parameters:
    struct _tds__DeleteUsersResponse   *tds__DeleteUsersResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteUsers SOAP
//gsoap tds  service method-style:	DeleteUsers document
//gsoap tds  service method-encoding:	DeleteUsers literal
//gsoap tds  service method-input-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsers
//gsoap tds  service method-output-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse
int __tds__DeleteUsers(
    struct _tds__DeleteUsers*           tds__DeleteUsers,	///< Input parameter
    struct _tds__DeleteUsersResponse   *tds__DeleteUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetUser                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetUser" of service binding "DeviceBinding".
This operation updates the settings for one or several users on a device for authentication
purposes.
				The device shall support update of device users
and their credentials through the SetUser command. 
				Either all change requests are processed successfully
or a fault message shall be returned and no change requests be processed.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetUser*               tds__SetUser,
    // output parameters:
    struct _tds__SetUserResponse       *tds__SetUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetUser(
    struct soap *soap,
    // input parameters:
    struct _tds__SetUser*               tds__SetUser,
    // output parameters:
    struct _tds__SetUserResponse       *tds__SetUserResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetUser SOAP
//gsoap tds  service method-style:	SetUser document
//gsoap tds  service method-encoding:	SetUser literal
//gsoap tds  service method-input-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUser
//gsoap tds  service method-output-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUserResponse
int __tds__SetUser(
    struct _tds__SetUser*               tds__SetUser,	///< Input parameter
    struct _tds__SetUserResponse       *tds__SetUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetWsdlUrl                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetWsdlUrl" of service binding "DeviceBinding".
This method allows to provide a URL where product specific WSDL and schema definitions
can be retrieved. This method is deprecated.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetWsdlUrl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetWsdlUrl*            tds__GetWsdlUrl,
    // output parameters:
    struct _tds__GetWsdlUrlResponse    *tds__GetWsdlUrlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetWsdlUrl(
    struct soap *soap,
    // input parameters:
    struct _tds__GetWsdlUrl*            tds__GetWsdlUrl,
    // output parameters:
    struct _tds__GetWsdlUrlResponse    *tds__GetWsdlUrlResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetWsdlUrl SOAP
//gsoap tds  service method-style:	GetWsdlUrl document
//gsoap tds  service method-encoding:	GetWsdlUrl literal
//gsoap tds  service method-input-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl
//gsoap tds  service method-output-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse
int __tds__GetWsdlUrl(
    struct _tds__GetWsdlUrl*            tds__GetWsdlUrl,	///< Input parameter
    struct _tds__GetWsdlUrlResponse    *tds__GetWsdlUrlResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPasswordComplexityOptions                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetPasswordComplexityOptions" of service binding "DeviceBinding".
This method allows retrieval of all the available parameters and their valid ranges
for the password complexity configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityOptions"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityOptions"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPasswordComplexityOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetPasswordComplexityOptions* tds__GetPasswordComplexityOptions,
    // output parameters:
    struct _tds__GetPasswordComplexityOptionsResponse*tds__GetPasswordComplexityOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPasswordComplexityOptions(
    struct soap *soap,
    // input parameters:
    struct _tds__GetPasswordComplexityOptions* tds__GetPasswordComplexityOptions,
    // output parameters:
    struct _tds__GetPasswordComplexityOptionsResponse*tds__GetPasswordComplexityOptionsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetPasswordComplexityOptions SOAP
//gsoap tds  service method-style:	GetPasswordComplexityOptions document
//gsoap tds  service method-encoding:	GetPasswordComplexityOptions literal
//gsoap tds  service method-input-action:	GetPasswordComplexityOptions http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityOptions
//gsoap tds  service method-output-action:	GetPasswordComplexityOptions http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityOptionsResponse
int __tds__GetPasswordComplexityOptions(
    struct _tds__GetPasswordComplexityOptions* tds__GetPasswordComplexityOptions,	///< Input parameter
    struct _tds__GetPasswordComplexityOptionsResponse*tds__GetPasswordComplexityOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPasswordComplexityConfiguration                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetPasswordComplexityConfiguration" of service binding "DeviceBinding".
This method allows retrieval of the current password complexity configuration settings.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPasswordComplexityConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetPasswordComplexityConfiguration* tds__GetPasswordComplexityConfiguration,
    // output parameters:
    struct _tds__GetPasswordComplexityConfigurationResponse*tds__GetPasswordComplexityConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPasswordComplexityConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetPasswordComplexityConfiguration* tds__GetPasswordComplexityConfiguration,
    // output parameters:
    struct _tds__GetPasswordComplexityConfigurationResponse*tds__GetPasswordComplexityConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetPasswordComplexityConfiguration SOAP
//gsoap tds  service method-style:	GetPasswordComplexityConfiguration document
//gsoap tds  service method-encoding:	GetPasswordComplexityConfiguration literal
//gsoap tds  service method-input-action:	GetPasswordComplexityConfiguration http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityConfiguration
//gsoap tds  service method-output-action:	GetPasswordComplexityConfiguration http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityConfigurationResponse
int __tds__GetPasswordComplexityConfiguration(
    struct _tds__GetPasswordComplexityConfiguration* tds__GetPasswordComplexityConfiguration,	///< Input parameter
    struct _tds__GetPasswordComplexityConfigurationResponse*tds__GetPasswordComplexityConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetPasswordComplexityConfiguration                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetPasswordComplexityConfiguration" of service binding "DeviceBinding".
This method allows setting of the password complexity configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetPasswordComplexityConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetPasswordComplexityConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetPasswordComplexityConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetPasswordComplexityConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetPasswordComplexityConfiguration* tds__SetPasswordComplexityConfiguration,
    // output parameters:
    struct _tds__SetPasswordComplexityConfigurationResponse*tds__SetPasswordComplexityConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetPasswordComplexityConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetPasswordComplexityConfiguration* tds__SetPasswordComplexityConfiguration,
    // output parameters:
    struct _tds__SetPasswordComplexityConfigurationResponse*tds__SetPasswordComplexityConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetPasswordComplexityConfiguration SOAP
//gsoap tds  service method-style:	SetPasswordComplexityConfiguration document
//gsoap tds  service method-encoding:	SetPasswordComplexityConfiguration literal
//gsoap tds  service method-input-action:	SetPasswordComplexityConfiguration http://www.onvif.org/ver10/device/wsdl/SetPasswordComplexityConfiguration
//gsoap tds  service method-output-action:	SetPasswordComplexityConfiguration http://www.onvif.org/ver10/device/wsdl/SetPasswordComplexityConfigurationResponse
int __tds__SetPasswordComplexityConfiguration(
    struct _tds__SetPasswordComplexityConfiguration* tds__SetPasswordComplexityConfiguration,	///< Input parameter
    struct _tds__SetPasswordComplexityConfigurationResponse*tds__SetPasswordComplexityConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPasswordHistoryConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetPasswordHistoryConfiguration" of service binding "DeviceBinding".
This method allows retrieval of the current password history configuration settings.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetPasswordHistoryConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPasswordHistoryConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPasswordHistoryConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPasswordHistoryConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetPasswordHistoryConfiguration* tds__GetPasswordHistoryConfiguration,
    // output parameters:
    struct _tds__GetPasswordHistoryConfigurationResponse*tds__GetPasswordHistoryConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPasswordHistoryConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetPasswordHistoryConfiguration* tds__GetPasswordHistoryConfiguration,
    // output parameters:
    struct _tds__GetPasswordHistoryConfigurationResponse*tds__GetPasswordHistoryConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetPasswordHistoryConfiguration SOAP
//gsoap tds  service method-style:	GetPasswordHistoryConfiguration document
//gsoap tds  service method-encoding:	GetPasswordHistoryConfiguration literal
//gsoap tds  service method-input-action:	GetPasswordHistoryConfiguration http://www.onvif.org/ver10/device/wsdl/GetPasswordHistoryConfiguration
//gsoap tds  service method-output-action:	GetPasswordHistoryConfiguration http://www.onvif.org/ver10/device/wsdl/GetPasswordHistoryConfigurationResponse
int __tds__GetPasswordHistoryConfiguration(
    struct _tds__GetPasswordHistoryConfiguration* tds__GetPasswordHistoryConfiguration,	///< Input parameter
    struct _tds__GetPasswordHistoryConfigurationResponse*tds__GetPasswordHistoryConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetPasswordHistoryConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetPasswordHistoryConfiguration" of service binding "DeviceBinding".
This method allows setting of the password history configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetPasswordHistoryConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetPasswordHistoryConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetPasswordHistoryConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetPasswordHistoryConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetPasswordHistoryConfiguration* tds__SetPasswordHistoryConfiguration,
    // output parameters:
    struct _tds__SetPasswordHistoryConfigurationResponse*tds__SetPasswordHistoryConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetPasswordHistoryConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetPasswordHistoryConfiguration* tds__SetPasswordHistoryConfiguration,
    // output parameters:
    struct _tds__SetPasswordHistoryConfigurationResponse*tds__SetPasswordHistoryConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetPasswordHistoryConfiguration SOAP
//gsoap tds  service method-style:	SetPasswordHistoryConfiguration document
//gsoap tds  service method-encoding:	SetPasswordHistoryConfiguration literal
//gsoap tds  service method-input-action:	SetPasswordHistoryConfiguration http://www.onvif.org/ver10/device/wsdl/SetPasswordHistoryConfiguration
//gsoap tds  service method-output-action:	SetPasswordHistoryConfiguration http://www.onvif.org/ver10/device/wsdl/SetPasswordHistoryConfigurationResponse
int __tds__SetPasswordHistoryConfiguration(
    struct _tds__SetPasswordHistoryConfiguration* tds__SetPasswordHistoryConfiguration,	///< Input parameter
    struct _tds__SetPasswordHistoryConfigurationResponse*tds__SetPasswordHistoryConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetAuthFailureWarningOptions                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetAuthFailureWarningOptions" of service binding "DeviceBinding".
This method allows retrieval of all the available parameters and their valid ranges
for the authentication failure warning configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningOptions"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningOptions"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetAuthFailureWarningOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetAuthFailureWarningOptions* tds__GetAuthFailureWarningOptions,
    // output parameters:
    struct _tds__GetAuthFailureWarningOptionsResponse*tds__GetAuthFailureWarningOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetAuthFailureWarningOptions(
    struct soap *soap,
    // input parameters:
    struct _tds__GetAuthFailureWarningOptions* tds__GetAuthFailureWarningOptions,
    // output parameters:
    struct _tds__GetAuthFailureWarningOptionsResponse*tds__GetAuthFailureWarningOptionsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetAuthFailureWarningOptions SOAP
//gsoap tds  service method-style:	GetAuthFailureWarningOptions document
//gsoap tds  service method-encoding:	GetAuthFailureWarningOptions literal
//gsoap tds  service method-input-action:	GetAuthFailureWarningOptions http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningOptions
//gsoap tds  service method-output-action:	GetAuthFailureWarningOptions http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningOptionsResponse
int __tds__GetAuthFailureWarningOptions(
    struct _tds__GetAuthFailureWarningOptions* tds__GetAuthFailureWarningOptions,	///< Input parameter
    struct _tds__GetAuthFailureWarningOptionsResponse*tds__GetAuthFailureWarningOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetAuthFailureWarningConfiguration                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetAuthFailureWarningConfiguration" of service binding "DeviceBinding".
This method allows retrieval of the current authentication failure warning configuration
settings.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetAuthFailureWarningConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetAuthFailureWarningConfiguration* tds__GetAuthFailureWarningConfiguration,
    // output parameters:
    struct _tds__GetAuthFailureWarningConfigurationResponse*tds__GetAuthFailureWarningConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetAuthFailureWarningConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetAuthFailureWarningConfiguration* tds__GetAuthFailureWarningConfiguration,
    // output parameters:
    struct _tds__GetAuthFailureWarningConfigurationResponse*tds__GetAuthFailureWarningConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetAuthFailureWarningConfiguration SOAP
//gsoap tds  service method-style:	GetAuthFailureWarningConfiguration document
//gsoap tds  service method-encoding:	GetAuthFailureWarningConfiguration literal
//gsoap tds  service method-input-action:	GetAuthFailureWarningConfiguration http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningConfiguration
//gsoap tds  service method-output-action:	GetAuthFailureWarningConfiguration http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningConfigurationResponse
int __tds__GetAuthFailureWarningConfiguration(
    struct _tds__GetAuthFailureWarningConfiguration* tds__GetAuthFailureWarningConfiguration,	///< Input parameter
    struct _tds__GetAuthFailureWarningConfigurationResponse*tds__GetAuthFailureWarningConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetAuthFailureWarningConfiguration                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetAuthFailureWarningConfiguration" of service binding "DeviceBinding".
This method allows setting of the authentication failure warning configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetAuthFailureWarningConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetAuthFailureWarningConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetAuthFailureWarningConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetAuthFailureWarningConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetAuthFailureWarningConfiguration* tds__SetAuthFailureWarningConfiguration,
    // output parameters:
    struct _tds__SetAuthFailureWarningConfigurationResponse*tds__SetAuthFailureWarningConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetAuthFailureWarningConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetAuthFailureWarningConfiguration* tds__SetAuthFailureWarningConfiguration,
    // output parameters:
    struct _tds__SetAuthFailureWarningConfigurationResponse*tds__SetAuthFailureWarningConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetAuthFailureWarningConfiguration SOAP
//gsoap tds  service method-style:	SetAuthFailureWarningConfiguration document
//gsoap tds  service method-encoding:	SetAuthFailureWarningConfiguration literal
//gsoap tds  service method-input-action:	SetAuthFailureWarningConfiguration http://www.onvif.org/ver10/device/wsdl/SetAuthFailureWarningConfiguration
//gsoap tds  service method-output-action:	SetAuthFailureWarningConfiguration http://www.onvif.org/ver10/device/wsdl/SetAuthFailureWarningConfigurationResponse
int __tds__SetAuthFailureWarningConfiguration(
    struct _tds__SetAuthFailureWarningConfiguration* tds__SetAuthFailureWarningConfiguration,	///< Input parameter
    struct _tds__SetAuthFailureWarningConfigurationResponse*tds__SetAuthFailureWarningConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCapabilities                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCapabilities" of service binding "DeviceBinding".
This method has been replaced by the more generic GetServices method.
			 For capabilities of individual services refer to the GetServiceCapabilities
methods.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCapabilities*       tds__GetCapabilities,
    // output parameters:
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCapabilities*       tds__GetCapabilities,
    // output parameters:
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCapabilities SOAP
//gsoap tds  service method-style:	GetCapabilities document
//gsoap tds  service method-encoding:	GetCapabilities literal
//gsoap tds  service method-input-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilities
//gsoap tds  service method-output-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse
int __tds__GetCapabilities(
    struct _tds__GetCapabilities*       tds__GetCapabilities,	///< Input parameter
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDPAddresses" of service binding "DeviceBinding".
This operation sets the remote DP address or addresses on a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support configuration of the
				remote DP address(es) through the SetDPAddresses
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDPAddresses*        tds__SetDPAddresses,
    // output parameters:
    struct _tds__SetDPAddressesResponse*tds__SetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDPAddresses(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDPAddresses*        tds__SetDPAddresses,
    // output parameters:
    struct _tds__SetDPAddressesResponse*tds__SetDPAddressesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDPAddresses SOAP
//gsoap tds  service method-style:	SetDPAddresses document
//gsoap tds  service method-encoding:	SetDPAddresses literal
//gsoap tds  service method-input-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddresses
//gsoap tds  service method-output-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse
int __tds__SetDPAddresses(
    struct _tds__SetDPAddresses*        tds__SetDPAddresses,	///< Input parameter
    struct _tds__SetDPAddressesResponse*tds__SetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetHostname" of service binding "DeviceBinding".
This operation is used by an endpoint to get the hostname from a device. The device
shall
				return its hostname configurations through the GetHostname
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetHostname*           tds__GetHostname,
    // output parameters:
    struct _tds__GetHostnameResponse   *tds__GetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetHostname(
    struct soap *soap,
    // input parameters:
    struct _tds__GetHostname*           tds__GetHostname,
    // output parameters:
    struct _tds__GetHostnameResponse   *tds__GetHostnameResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetHostname SOAP
//gsoap tds  service method-style:	GetHostname document
//gsoap tds  service method-encoding:	GetHostname literal
//gsoap tds  service method-input-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostname
//gsoap tds  service method-output-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse
int __tds__GetHostname(
    struct _tds__GetHostname*           tds__GetHostname,	///< Input parameter
    struct _tds__GetHostnameResponse   *tds__GetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostname" of service binding "DeviceBinding".
This operation sets the hostname on a device. It shall be possible to set the device
hostname
				configurations through the SetHostname command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.

			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetHostname*           tds__SetHostname,
    // output parameters:
    struct _tds__SetHostnameResponse   *tds__SetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostname(
    struct soap *soap,
    // input parameters:
    struct _tds__SetHostname*           tds__SetHostname,
    // output parameters:
    struct _tds__SetHostnameResponse   *tds__SetHostnameResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetHostname SOAP
//gsoap tds  service method-style:	SetHostname document
//gsoap tds  service method-encoding:	SetHostname literal
//gsoap tds  service method-input-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostname
//gsoap tds  service method-output-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse
int __tds__SetHostname(
    struct _tds__SetHostname*           tds__SetHostname,	///< Input parameter
    struct _tds__SetHostnameResponse   *tds__SetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostnameFromDHCP                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostnameFromDHCP" of service binding "DeviceBinding".
This operation controls whether the hostname is set manually or retrieved via DHCP.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostnameFromDHCP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetHostnameFromDHCP*   tds__SetHostnameFromDHCP,
    // output parameters:
    struct _tds__SetHostnameFromDHCPResponse*tds__SetHostnameFromDHCPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostnameFromDHCP(
    struct soap *soap,
    // input parameters:
    struct _tds__SetHostnameFromDHCP*   tds__SetHostnameFromDHCP,
    // output parameters:
    struct _tds__SetHostnameFromDHCPResponse*tds__SetHostnameFromDHCPResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetHostnameFromDHCP SOAP
//gsoap tds  service method-style:	SetHostnameFromDHCP document
//gsoap tds  service method-encoding:	SetHostnameFromDHCP literal
//gsoap tds  service method-input-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP
//gsoap tds  service method-output-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse
int __tds__SetHostnameFromDHCP(
    struct _tds__SetHostnameFromDHCP*   tds__SetHostnameFromDHCP,	///< Input parameter
    struct _tds__SetHostnameFromDHCPResponse*tds__SetHostnameFromDHCPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDNS" of service binding "DeviceBinding".
This operation gets the DNS settings from a device. The device shall return its
DNS
				configurations through the GetDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDNS*                tds__GetDNS,
    // output parameters:
    struct _tds__GetDNSResponse        *tds__GetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDNS*                tds__GetDNS,
    // output parameters:
    struct _tds__GetDNSResponse        *tds__GetDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDNS SOAP
//gsoap tds  service method-style:	GetDNS document
//gsoap tds  service method-encoding:	GetDNS literal
//gsoap tds  service method-input-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNS
//gsoap tds  service method-output-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNSResponse
int __tds__GetDNS(
    struct _tds__GetDNS*                tds__GetDNS,	///< Input parameter
    struct _tds__GetDNSResponse        *tds__GetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDNS" of service binding "DeviceBinding".
This operation sets the DNS settings on a device. It shall be possible to set the
device DNS
				configurations through the SetDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDNS*                tds__SetDNS,
    // output parameters:
    struct _tds__SetDNSResponse        *tds__SetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDNS*                tds__SetDNS,
    // output parameters:
    struct _tds__SetDNSResponse        *tds__SetDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDNS SOAP
//gsoap tds  service method-style:	SetDNS document
//gsoap tds  service method-encoding:	SetDNS literal
//gsoap tds  service method-input-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNS
//gsoap tds  service method-output-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNSResponse
int __tds__SetDNS(
    struct _tds__SetDNS*                tds__SetDNS,	///< Input parameter
    struct _tds__SetDNSResponse        *tds__SetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNTP" of service binding "DeviceBinding".
This operation gets the NTP settings from a device. If the device supports NTP,
it shall be
				possible to get the NTP server settings through
the GetNTP command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNTP*                tds__GetNTP,
    // output parameters:
    struct _tds__GetNTPResponse        *tds__GetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNTP(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNTP*                tds__GetNTP,
    // output parameters:
    struct _tds__GetNTPResponse        *tds__GetNTPResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNTP SOAP
//gsoap tds  service method-style:	GetNTP document
//gsoap tds  service method-encoding:	GetNTP literal
//gsoap tds  service method-input-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTP
//gsoap tds  service method-output-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTPResponse
int __tds__GetNTP(
    struct _tds__GetNTP*                tds__GetNTP,	///< Input parameter
    struct _tds__GetNTPResponse        *tds__GetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNTP" of service binding "DeviceBinding".
This operation sets the NTP settings on a device. If the device supports NTP, it
shall be
				possible to set the NTP server settings through
the SetNTP command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.
<br/>
				Changes to the NTP server list will not affect the
clock mode DateTimeType. Use SetSystemDateAndTime to activate NTP operation.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNTP*                tds__SetNTP,
    // output parameters:
    struct _tds__SetNTPResponse        *tds__SetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNTP(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNTP*                tds__SetNTP,
    // output parameters:
    struct _tds__SetNTPResponse        *tds__SetNTPResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNTP SOAP
//gsoap tds  service method-style:	SetNTP document
//gsoap tds  service method-encoding:	SetNTP literal
//gsoap tds  service method-input-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTP
//gsoap tds  service method-output-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTPResponse
int __tds__SetNTP(
    struct _tds__SetNTP*                tds__SetNTP,	///< Input parameter
    struct _tds__SetNTPResponse        *tds__SetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDynamicDNS" of service binding "DeviceBinding".
This operation gets the dynamic DNS settings from a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to get the type, name
				and TTL through the GetDynamicDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDynamicDNS*         tds__GetDynamicDNS,
    // output parameters:
    struct _tds__GetDynamicDNSResponse *tds__GetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDynamicDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDynamicDNS*         tds__GetDynamicDNS,
    // output parameters:
    struct _tds__GetDynamicDNSResponse *tds__GetDynamicDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDynamicDNS SOAP
//gsoap tds  service method-style:	GetDynamicDNS document
//gsoap tds  service method-encoding:	GetDynamicDNS literal
//gsoap tds  service method-input-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS
//gsoap tds  service method-output-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse
int __tds__GetDynamicDNS(
    struct _tds__GetDynamicDNS*         tds__GetDynamicDNS,	///< Input parameter
    struct _tds__GetDynamicDNSResponse *tds__GetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDynamicDNS" of service binding "DeviceBinding".
This operation sets the dynamic DNS settings on a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to set the type, name
				and TTL through the SetDynamicDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDynamicDNS*         tds__SetDynamicDNS,
    // output parameters:
    struct _tds__SetDynamicDNSResponse *tds__SetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDynamicDNS(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDynamicDNS*         tds__SetDynamicDNS,
    // output parameters:
    struct _tds__SetDynamicDNSResponse *tds__SetDynamicDNSResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDynamicDNS SOAP
//gsoap tds  service method-style:	SetDynamicDNS document
//gsoap tds  service method-encoding:	SetDynamicDNS literal
//gsoap tds  service method-input-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS
//gsoap tds  service method-output-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse
int __tds__SetDynamicDNS(
    struct _tds__SetDynamicDNS*         tds__SetDynamicDNS,	///< Input parameter
    struct _tds__SetDynamicDNSResponse *tds__SetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkInterfaces" of service binding "DeviceBinding".
This operation gets the network interface configuration from a device. The device
shall
				support return of network interface configuration
settings as defined by the NetworkInterface
				type through the GetNetworkInterfaces command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNetworkInterfaces*  tds__GetNetworkInterfaces,
    // output parameters:
    struct _tds__GetNetworkInterfacesResponse*tds__GetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNetworkInterfaces*  tds__GetNetworkInterfaces,
    // output parameters:
    struct _tds__GetNetworkInterfacesResponse*tds__GetNetworkInterfacesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNetworkInterfaces SOAP
//gsoap tds  service method-style:	GetNetworkInterfaces document
//gsoap tds  service method-encoding:	GetNetworkInterfaces literal
//gsoap tds  service method-input-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces
//gsoap tds  service method-output-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse
int __tds__GetNetworkInterfaces(
    struct _tds__GetNetworkInterfaces*  tds__GetNetworkInterfaces,	///< Input parameter
    struct _tds__GetNetworkInterfacesResponse*tds__GetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkInterfaces" of service binding "DeviceBinding".
This operation sets the network interface configuration on a device. The device
shall support
				network configuration of supported network interfaces
through the SetNetworkInterfaces
				command.<br/>
				For interoperability with a client unaware of the
IEEE 802.11 extension a device shall retain
				its IEEE 802.11 configuration if the IEEE 802.11
configuration element isnt present in the
				request.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNetworkInterfaces*  tds__SetNetworkInterfaces,
    // output parameters:
    struct _tds__SetNetworkInterfacesResponse*tds__SetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNetworkInterfaces*  tds__SetNetworkInterfaces,
    // output parameters:
    struct _tds__SetNetworkInterfacesResponse*tds__SetNetworkInterfacesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNetworkInterfaces SOAP
//gsoap tds  service method-style:	SetNetworkInterfaces document
//gsoap tds  service method-encoding:	SetNetworkInterfaces literal
//gsoap tds  service method-input-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces
//gsoap tds  service method-output-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse
int __tds__SetNetworkInterfaces(
    struct _tds__SetNetworkInterfaces*  tds__SetNetworkInterfaces,	///< Input parameter
    struct _tds__SetNetworkInterfacesResponse*tds__SetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkProtocols" of service binding "DeviceBinding".
This operation gets defined network protocols from a device. The device shall support
the
				GetNetworkProtocols command returning configured
network protocols.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNetworkProtocols*   tds__GetNetworkProtocols,
    // output parameters:
    struct _tds__GetNetworkProtocolsResponse*tds__GetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNetworkProtocols*   tds__GetNetworkProtocols,
    // output parameters:
    struct _tds__GetNetworkProtocolsResponse*tds__GetNetworkProtocolsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNetworkProtocols SOAP
//gsoap tds  service method-style:	GetNetworkProtocols document
//gsoap tds  service method-encoding:	GetNetworkProtocols literal
//gsoap tds  service method-input-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols
//gsoap tds  service method-output-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse
int __tds__GetNetworkProtocols(
    struct _tds__GetNetworkProtocols*   tds__GetNetworkProtocols,	///< Input parameter
    struct _tds__GetNetworkProtocolsResponse*tds__GetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkProtocols" of service binding "DeviceBinding".
This operation configures defined network protocols on a device. The device shall
support
				configuration of defined network protocols through
the SetNetworkProtocols command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNetworkProtocols*   tds__SetNetworkProtocols,
    // output parameters:
    struct _tds__SetNetworkProtocolsResponse*tds__SetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNetworkProtocols*   tds__SetNetworkProtocols,
    // output parameters:
    struct _tds__SetNetworkProtocolsResponse*tds__SetNetworkProtocolsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNetworkProtocols SOAP
//gsoap tds  service method-style:	SetNetworkProtocols document
//gsoap tds  service method-encoding:	SetNetworkProtocols literal
//gsoap tds  service method-input-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols
//gsoap tds  service method-output-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse
int __tds__SetNetworkProtocols(
    struct _tds__SetNetworkProtocols*   tds__SetNetworkProtocols,	///< Input parameter
    struct _tds__SetNetworkProtocolsResponse*tds__SetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation gets the default gateway settings from a device. The device shall
support the
				GetNetworkDefaultGateway command returning configured
default gateway address(es).

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetNetworkDefaultGateway* tds__GetNetworkDefaultGateway,
    // output parameters:
    struct _tds__GetNetworkDefaultGatewayResponse*tds__GetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    struct _tds__GetNetworkDefaultGateway* tds__GetNetworkDefaultGateway,
    // output parameters:
    struct _tds__GetNetworkDefaultGatewayResponse*tds__GetNetworkDefaultGatewayResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	GetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	GetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway
//gsoap tds  service method-output-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse
int __tds__GetNetworkDefaultGateway(
    struct _tds__GetNetworkDefaultGateway* tds__GetNetworkDefaultGateway,	///< Input parameter
    struct _tds__GetNetworkDefaultGatewayResponse*tds__GetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation sets the default gateway settings on a device. The device shall support
				configuration of default gateway through the SetNetworkDefaultGateway
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetNetworkDefaultGateway* tds__SetNetworkDefaultGateway,
    // output parameters:
    struct _tds__SetNetworkDefaultGatewayResponse*tds__SetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    struct _tds__SetNetworkDefaultGateway* tds__SetNetworkDefaultGateway,
    // output parameters:
    struct _tds__SetNetworkDefaultGatewayResponse*tds__SetNetworkDefaultGatewayResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	SetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	SetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway
//gsoap tds  service method-output-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse
int __tds__SetNetworkDefaultGateway(
    struct _tds__SetNetworkDefaultGateway* tds__SetNetworkDefaultGateway,	///< Input parameter
    struct _tds__SetNetworkDefaultGatewayResponse*tds__SetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetZeroConfiguration" of service binding "DeviceBinding".
This operation gets the zero-configuration from a device. If the device supports
dynamic IP
				configuration according to [RFC3927], it shall support
the return of IPv4 zero configuration
				address and status through the GetZeroConfiguration
command.<br/>
			Devices supporting zero configuration on more than one interface
shall use the extension to list the additional interface settings.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetZeroConfiguration*  tds__GetZeroConfiguration,
    // output parameters:
    struct _tds__GetZeroConfigurationResponse*tds__GetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetZeroConfiguration*  tds__GetZeroConfiguration,
    // output parameters:
    struct _tds__GetZeroConfigurationResponse*tds__GetZeroConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetZeroConfiguration SOAP
//gsoap tds  service method-style:	GetZeroConfiguration document
//gsoap tds  service method-encoding:	GetZeroConfiguration literal
//gsoap tds  service method-input-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration
//gsoap tds  service method-output-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse
int __tds__GetZeroConfiguration(
    struct _tds__GetZeroConfiguration*  tds__GetZeroConfiguration,	///< Input parameter
    struct _tds__GetZeroConfigurationResponse*tds__GetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetZeroConfiguration" of service binding "DeviceBinding".
This operation sets the zero-configuration. Use GetCapalities to get if zero-zero-configuration
is supported or not.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetZeroConfiguration*  tds__SetZeroConfiguration,
    // output parameters:
    struct _tds__SetZeroConfigurationResponse*tds__SetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetZeroConfiguration*  tds__SetZeroConfiguration,
    // output parameters:
    struct _tds__SetZeroConfigurationResponse*tds__SetZeroConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetZeroConfiguration SOAP
//gsoap tds  service method-style:	SetZeroConfiguration document
//gsoap tds  service method-encoding:	SetZeroConfiguration literal
//gsoap tds  service method-input-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration
//gsoap tds  service method-output-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse
int __tds__SetZeroConfiguration(
    struct _tds__SetZeroConfiguration*  tds__SetZeroConfiguration,	///< Input parameter
    struct _tds__SetZeroConfigurationResponse*tds__SetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetIPAddressFilter" of service binding "DeviceBinding".
This operation gets the IP address filter settings from a device. If the device
supports device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support the GetIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetIPAddressFilter*    tds__GetIPAddressFilter,
    // output parameters:
    struct _tds__GetIPAddressFilterResponse*tds__GetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__GetIPAddressFilter*    tds__GetIPAddressFilter,
    // output parameters:
    struct _tds__GetIPAddressFilterResponse*tds__GetIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetIPAddressFilter SOAP
//gsoap tds  service method-style:	GetIPAddressFilter document
//gsoap tds  service method-encoding:	GetIPAddressFilter literal
//gsoap tds  service method-input-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter
//gsoap tds  service method-output-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse
int __tds__GetIPAddressFilter(
    struct _tds__GetIPAddressFilter*    tds__GetIPAddressFilter,	///< Input parameter
    struct _tds__GetIPAddressFilterResponse*tds__GetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetIPAddressFilter" of service binding "DeviceBinding".
This operation sets the IP address filter settings on a device. If the device supports
device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support configuration of IP filtering
rules through the SetIPAddressFilter
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetIPAddressFilter*    tds__SetIPAddressFilter,
    // output parameters:
    struct _tds__SetIPAddressFilterResponse*tds__SetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__SetIPAddressFilter*    tds__SetIPAddressFilter,
    // output parameters:
    struct _tds__SetIPAddressFilterResponse*tds__SetIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetIPAddressFilter SOAP
//gsoap tds  service method-style:	SetIPAddressFilter document
//gsoap tds  service method-encoding:	SetIPAddressFilter literal
//gsoap tds  service method-input-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter
//gsoap tds  service method-output-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse
int __tds__SetIPAddressFilter(
    struct _tds__SetIPAddressFilter*    tds__SetIPAddressFilter,	///< Input parameter
    struct _tds__SetIPAddressFilterResponse*tds__SetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddIPAddressFilter" of service binding "DeviceBinding".
This operation adds an IP filter address to a device. If the device supports device
access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support adding of IP filtering addresses through
the AddIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__AddIPAddressFilter*    tds__AddIPAddressFilter,
    // output parameters:
    struct _tds__AddIPAddressFilterResponse*tds__AddIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__AddIPAddressFilter*    tds__AddIPAddressFilter,
    // output parameters:
    struct _tds__AddIPAddressFilterResponse*tds__AddIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	AddIPAddressFilter SOAP
//gsoap tds  service method-style:	AddIPAddressFilter document
//gsoap tds  service method-encoding:	AddIPAddressFilter literal
//gsoap tds  service method-input-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter
//gsoap tds  service method-output-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse
int __tds__AddIPAddressFilter(
    struct _tds__AddIPAddressFilter*    tds__AddIPAddressFilter,	///< Input parameter
    struct _tds__AddIPAddressFilterResponse*tds__AddIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveIPAddressFilter                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveIPAddressFilter" of service binding "DeviceBinding".
This operation deletes an IP filter address from a device. If the device supports
device access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support deletion of IP filtering addresses
through the RemoveIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__RemoveIPAddressFilter* tds__RemoveIPAddressFilter,
    // output parameters:
    struct _tds__RemoveIPAddressFilterResponse*tds__RemoveIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveIPAddressFilter(
    struct soap *soap,
    // input parameters:
    struct _tds__RemoveIPAddressFilter* tds__RemoveIPAddressFilter,
    // output parameters:
    struct _tds__RemoveIPAddressFilterResponse*tds__RemoveIPAddressFilterResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	RemoveIPAddressFilter SOAP
//gsoap tds  service method-style:	RemoveIPAddressFilter document
//gsoap tds  service method-encoding:	RemoveIPAddressFilter literal
//gsoap tds  service method-input-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter
//gsoap tds  service method-output-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse
int __tds__RemoveIPAddressFilter(
    struct _tds__RemoveIPAddressFilter* tds__RemoveIPAddressFilter,	///< Input parameter
    struct _tds__RemoveIPAddressFilterResponse*tds__RemoveIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetAccessPolicy" of service binding "DeviceBinding".
Access to different services and sub-sets of services should be subject to access
control. The
				WS-Security framework gives the prerequisite for
end-point authentication. Authorization
				decisions can then be taken using an access security
policy. This standard does not mandate
				any particular policy description format or security
policy but this is up to the device
				manufacturer or system provider to choose policy
and policy description format of choice.
				However, an access policy (in arbitrary format)
can be requested using this command. If the
				device supports access policy settings based on
WS-Security authentication, then the device
				shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetAccessPolicy*       tds__GetAccessPolicy,
    // output parameters:
    struct _tds__GetAccessPolicyResponse*tds__GetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetAccessPolicy(
    struct soap *soap,
    // input parameters:
    struct _tds__GetAccessPolicy*       tds__GetAccessPolicy,
    // output parameters:
    struct _tds__GetAccessPolicyResponse*tds__GetAccessPolicyResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetAccessPolicy SOAP
//gsoap tds  service method-style:	GetAccessPolicy document
//gsoap tds  service method-encoding:	GetAccessPolicy literal
//gsoap tds  service method-input-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy
//gsoap tds  service method-output-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse
int __tds__GetAccessPolicy(
    struct _tds__GetAccessPolicy*       tds__GetAccessPolicy,	///< Input parameter
    struct _tds__GetAccessPolicyResponse*tds__GetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetAccessPolicy" of service binding "DeviceBinding".
This command sets the device access security policy (for more details on the access
security
				policy see the Get command). If the device supports
access policy settings
				based on WS-Security authentication, then the device
shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetAccessPolicy*       tds__SetAccessPolicy,
    // output parameters:
    struct _tds__SetAccessPolicyResponse*tds__SetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetAccessPolicy(
    struct soap *soap,
    // input parameters:
    struct _tds__SetAccessPolicy*       tds__SetAccessPolicy,
    // output parameters:
    struct _tds__SetAccessPolicyResponse*tds__SetAccessPolicyResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetAccessPolicy SOAP
//gsoap tds  service method-style:	SetAccessPolicy document
//gsoap tds  service method-encoding:	SetAccessPolicy literal
//gsoap tds  service method-input-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy
//gsoap tds  service method-output-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse
int __tds__SetAccessPolicy(
    struct _tds__SetAccessPolicy*       tds__SetAccessPolicy,	///< Input parameter
    struct _tds__SetAccessPolicyResponse*tds__SetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateCertificate                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateCertificate" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateCertificate*     tds__CreateCertificate,
    // output parameters:
    struct _tds__CreateCertificateResponse*tds__CreateCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateCertificate(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateCertificate*     tds__CreateCertificate,
    // output parameters:
    struct _tds__CreateCertificateResponse*tds__CreateCertificateResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateCertificate SOAP
//gsoap tds  service method-style:	CreateCertificate document
//gsoap tds  service method-encoding:	CreateCertificate literal
//gsoap tds  service method-input-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificate
//gsoap tds  service method-output-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse
int __tds__CreateCertificate(
    struct _tds__CreateCertificate*     tds__CreateCertificate,	///< Input parameter
    struct _tds__CreateCertificateResponse*tds__CreateCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificates                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCertificates*       tds__GetCertificates,
    // output parameters:
    struct _tds__GetCertificatesResponse*tds__GetCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCertificates*       tds__GetCertificates,
    // output parameters:
    struct _tds__GetCertificatesResponse*tds__GetCertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCertificates SOAP
//gsoap tds  service method-style:	GetCertificates document
//gsoap tds  service method-encoding:	GetCertificates literal
//gsoap tds  service method-input-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificates
//gsoap tds  service method-output-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse
int __tds__GetCertificates(
    struct _tds__GetCertificates*       tds__GetCertificates,	///< Input parameter
    struct _tds__GetCertificatesResponse*tds__GetCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificatesStatus" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCertificatesStatus* tds__GetCertificatesStatus,
    // output parameters:
    struct _tds__GetCertificatesStatusResponse*tds__GetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCertificatesStatus* tds__GetCertificatesStatus,
    // output parameters:
    struct _tds__GetCertificatesStatusResponse*tds__GetCertificatesStatusResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCertificatesStatus SOAP
//gsoap tds  service method-style:	GetCertificatesStatus document
//gsoap tds  service method-encoding:	GetCertificatesStatus literal
//gsoap tds  service method-input-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus
//gsoap tds  service method-output-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse
int __tds__GetCertificatesStatus(
    struct _tds__GetCertificatesStatus* tds__GetCertificatesStatus,	///< Input parameter
    struct _tds__GetCertificatesStatusResponse*tds__GetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetCertificatesStatus" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetCertificatesStatus* tds__SetCertificatesStatus,
    // output parameters:
    struct _tds__SetCertificatesStatusResponse*tds__SetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    struct _tds__SetCertificatesStatus* tds__SetCertificatesStatus,
    // output parameters:
    struct _tds__SetCertificatesStatusResponse*tds__SetCertificatesStatusResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetCertificatesStatus SOAP
//gsoap tds  service method-style:	SetCertificatesStatus document
//gsoap tds  service method-encoding:	SetCertificatesStatus literal
//gsoap tds  service method-input-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus
//gsoap tds  service method-output-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse
int __tds__SetCertificatesStatus(
    struct _tds__SetCertificatesStatus* tds__SetCertificatesStatus,	///< Input parameter
    struct _tds__SetCertificatesStatusResponse*tds__SetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteCertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteCertificates*    tds__DeleteCertificates,
    // output parameters:
    struct _tds__DeleteCertificatesResponse*tds__DeleteCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteCertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteCertificates*    tds__DeleteCertificates,
    // output parameters:
    struct _tds__DeleteCertificatesResponse*tds__DeleteCertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteCertificates SOAP
//gsoap tds  service method-style:	DeleteCertificates document
//gsoap tds  service method-encoding:	DeleteCertificates literal
//gsoap tds  service method-input-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificates
//gsoap tds  service method-output-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse
int __tds__DeleteCertificates(
    struct _tds__DeleteCertificates*    tds__DeleteCertificates,	///< Input parameter
    struct _tds__DeleteCertificatesResponse*tds__DeleteCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPkcs10Request                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetPkcs10Request" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPkcs10Request(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetPkcs10Request*      tds__GetPkcs10Request,
    // output parameters:
    struct _tds__GetPkcs10RequestResponse*tds__GetPkcs10RequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPkcs10Request(
    struct soap *soap,
    // input parameters:
    struct _tds__GetPkcs10Request*      tds__GetPkcs10Request,
    // output parameters:
    struct _tds__GetPkcs10RequestResponse*tds__GetPkcs10RequestResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetPkcs10Request SOAP
//gsoap tds  service method-style:	GetPkcs10Request document
//gsoap tds  service method-encoding:	GetPkcs10Request literal
//gsoap tds  service method-input-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request
//gsoap tds  service method-output-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse
int __tds__GetPkcs10Request(
    struct _tds__GetPkcs10Request*      tds__GetPkcs10Request,	///< Input parameter
    struct _tds__GetPkcs10RequestResponse*tds__GetPkcs10RequestResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificates                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__LoadCertificates*      tds__LoadCertificates,
    // output parameters:
    struct _tds__LoadCertificatesResponse*tds__LoadCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__LoadCertificates*      tds__LoadCertificates,
    // output parameters:
    struct _tds__LoadCertificatesResponse*tds__LoadCertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	LoadCertificates SOAP
//gsoap tds  service method-style:	LoadCertificates document
//gsoap tds  service method-encoding:	LoadCertificates literal
//gsoap tds  service method-input-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificates
//gsoap tds  service method-output-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse
int __tds__LoadCertificates(
    struct _tds__LoadCertificates*      tds__LoadCertificates,	///< Input parameter
    struct _tds__LoadCertificatesResponse*tds__LoadCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetClientCertificateMode" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetClientCertificateMode* tds__GetClientCertificateMode,
    // output parameters:
    struct _tds__GetClientCertificateModeResponse*tds__GetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    struct _tds__GetClientCertificateMode* tds__GetClientCertificateMode,
    // output parameters:
    struct _tds__GetClientCertificateModeResponse*tds__GetClientCertificateModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetClientCertificateMode SOAP
//gsoap tds  service method-style:	GetClientCertificateMode document
//gsoap tds  service method-encoding:	GetClientCertificateMode literal
//gsoap tds  service method-input-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode
//gsoap tds  service method-output-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse
int __tds__GetClientCertificateMode(
    struct _tds__GetClientCertificateMode* tds__GetClientCertificateMode,	///< Input parameter
    struct _tds__GetClientCertificateModeResponse*tds__GetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetClientCertificateMode" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetClientCertificateMode* tds__SetClientCertificateMode,
    // output parameters:
    struct _tds__SetClientCertificateModeResponse*tds__SetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    struct _tds__SetClientCertificateMode* tds__SetClientCertificateMode,
    // output parameters:
    struct _tds__SetClientCertificateModeResponse*tds__SetClientCertificateModeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetClientCertificateMode SOAP
//gsoap tds  service method-style:	SetClientCertificateMode document
//gsoap tds  service method-encoding:	SetClientCertificateMode literal
//gsoap tds  service method-input-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode
//gsoap tds  service method-output-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse
int __tds__SetClientCertificateMode(
    struct _tds__SetClientCertificateMode* tds__SetClientCertificateMode,	///< Input parameter
    struct _tds__SetClientCertificateModeResponse*tds__SetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRelayOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRelayOutputs" of service binding "DeviceBinding".
This operation gets a list of all available relay outputs and their settings.<br/>
				This method has been depricated with version 2.0.
Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRelayOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,
    // output parameters:
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRelayOutputs(
    struct soap *soap,
    // input parameters:
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,
    // output parameters:
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetRelayOutputs SOAP
//gsoap tds  service method-style:	GetRelayOutputs document
//gsoap tds  service method-encoding:	GetRelayOutputs literal
//gsoap tds  service method-input-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs
//gsoap tds  service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse
int __tds__GetRelayOutputs(
    struct _tds__GetRelayOutputs*       tds__GetRelayOutputs,	///< Input parameter
    struct _tds__GetRelayOutputsResponse*tds__GetRelayOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputSettings                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputSettings" of service binding "DeviceBinding".
This operation sets the settings of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRelayOutputSettings* tds__SetRelayOutputSettings,
    // output parameters:
    struct _tds__SetRelayOutputSettingsResponse*tds__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputSettings(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRelayOutputSettings* tds__SetRelayOutputSettings,
    // output parameters:
    struct _tds__SetRelayOutputSettingsResponse*tds__SetRelayOutputSettingsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRelayOutputSettings SOAP
//gsoap tds  service method-style:	SetRelayOutputSettings document
//gsoap tds  service method-encoding:	SetRelayOutputSettings literal
//gsoap tds  service method-input-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings
//gsoap tds  service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse
int __tds__SetRelayOutputSettings(
    struct _tds__SetRelayOutputSettings* tds__SetRelayOutputSettings,	///< Input parameter
    struct _tds__SetRelayOutputSettingsResponse*tds__SetRelayOutputSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputState                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputState" of service binding "DeviceBinding".
This operation sets the state of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,
    // output parameters:
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputState(
    struct soap *soap,
    // input parameters:
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,
    // output parameters:
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetRelayOutputState SOAP
//gsoap tds  service method-style:	SetRelayOutputState document
//gsoap tds  service method-encoding:	SetRelayOutputState literal
//gsoap tds  service method-input-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState
//gsoap tds  service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse
int __tds__SetRelayOutputState(
    struct _tds__SetRelayOutputState*   tds__SetRelayOutputState,	///< Input parameter
    struct _tds__SetRelayOutputStateResponse*tds__SetRelayOutputStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SendAuxiliaryCommand                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SendAuxiliaryCommand" of service binding "DeviceBinding".
Manage auxiliary commands supported by a device, such as controlling an Infrared
(IR) lamp, 
				a heater or a wiper or a thermometer that is connected
to the device.<br/>
				The supported commands can be retrieved via the
AuxiliaryCommands capability.<br/>
				Although the name of the auxiliary commands can
be freely defined, commands starting with the prefix tt: are 
				reserved to define frequently used commands and
these reserved commands shall all share the "tt:command|parameter" syntax.
				<ul>
					<li>tt:Wiper|On  Request to start the
wiper.</li>
					<li>tt:Wiper|Off  Request to stop the
wiper.</li>
					<li>tt:Washer|On  Request to start the
washer.</li>
					<li>tt:Washer|Off  Request to stop the
washer.</li>
					<li>tt:WashingProcedure|On  Request to
start the washing procedure.</li>
					<li>tt: WashingProcedure |Off  Request
to stop the washing procedure.</li>
					<li>tt:IRLamp|On  Request to turn ON
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Off  Request to turn OFF
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Auto  Request to configure
an IR illuminator attached to the unit so that it automatically turns ON and OFF.</li>
				</ul>
				A device that indicates auxiliary service capability
shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SendAuxiliaryCommand*  tds__SendAuxiliaryCommand,
    // output parameters:
    struct _tds__SendAuxiliaryCommandResponse*tds__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SendAuxiliaryCommand(
    struct soap *soap,
    // input parameters:
    struct _tds__SendAuxiliaryCommand*  tds__SendAuxiliaryCommand,
    // output parameters:
    struct _tds__SendAuxiliaryCommandResponse*tds__SendAuxiliaryCommandResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tds  service method-style:	SendAuxiliaryCommand document
//gsoap tds  service method-encoding:	SendAuxiliaryCommand literal
//gsoap tds  service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand
//gsoap tds  service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse
int __tds__SendAuxiliaryCommand(
    struct _tds__SendAuxiliaryCommand*  tds__SendAuxiliaryCommand,	///< Input parameter
    struct _tds__SendAuxiliaryCommandResponse*tds__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCACertificates                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCACertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCACertificates*     tds__GetCACertificates,
    // output parameters:
    struct _tds__GetCACertificatesResponse*tds__GetCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCACertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCACertificates*     tds__GetCACertificates,
    // output parameters:
    struct _tds__GetCACertificatesResponse*tds__GetCACertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCACertificates SOAP
//gsoap tds  service method-style:	GetCACertificates document
//gsoap tds  service method-encoding:	GetCACertificates literal
//gsoap tds  service method-input-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificates
//gsoap tds  service method-output-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse
int __tds__GetCACertificates(
    struct _tds__GetCACertificates*     tds__GetCACertificates,	///< Input parameter
    struct _tds__GetCACertificatesResponse*tds__GetCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificateWithPrivateKey                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificateWithPrivateKey" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    struct _tds__LoadCertificateWithPrivateKeyResponse*tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    // input parameters:
    struct _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    struct _tds__LoadCertificateWithPrivateKeyResponse*tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	LoadCertificateWithPrivateKey SOAP
//gsoap tds  service method-style:	LoadCertificateWithPrivateKey document
//gsoap tds  service method-encoding:	LoadCertificateWithPrivateKey literal
//gsoap tds  service method-input-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey
//gsoap tds  service method-output-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse
int __tds__LoadCertificateWithPrivateKey(
    struct _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,	///< Input parameter
    struct _tds__LoadCertificateWithPrivateKeyResponse*tds__LoadCertificateWithPrivateKeyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificateInformation                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificateInformation" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificateInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCertificateInformation* tds__GetCertificateInformation,
    // output parameters:
    struct _tds__GetCertificateInformationResponse*tds__GetCertificateInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificateInformation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCertificateInformation* tds__GetCertificateInformation,
    // output parameters:
    struct _tds__GetCertificateInformationResponse*tds__GetCertificateInformationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCertificateInformation SOAP
//gsoap tds  service method-style:	GetCertificateInformation document
//gsoap tds  service method-encoding:	GetCertificateInformation literal
//gsoap tds  service method-input-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation
//gsoap tds  service method-output-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse
int __tds__GetCertificateInformation(
    struct _tds__GetCertificateInformation* tds__GetCertificateInformation,	///< Input parameter
    struct _tds__GetCertificateInformationResponse*tds__GetCertificateInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCACertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCACertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__LoadCACertificates*    tds__LoadCACertificates,
    // output parameters:
    struct _tds__LoadCACertificatesResponse*tds__LoadCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCACertificates(
    struct soap *soap,
    // input parameters:
    struct _tds__LoadCACertificates*    tds__LoadCACertificates,
    // output parameters:
    struct _tds__LoadCACertificatesResponse*tds__LoadCACertificatesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	LoadCACertificates SOAP
//gsoap tds  service method-style:	LoadCACertificates document
//gsoap tds  service method-encoding:	LoadCACertificates literal
//gsoap tds  service method-input-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificates
//gsoap tds  service method-output-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse
int __tds__LoadCACertificates(
    struct _tds__LoadCACertificates*    tds__LoadCACertificates,	///< Input parameter
    struct _tds__LoadCACertificatesResponse*tds__LoadCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateDot1XConfiguration* tds__CreateDot1XConfiguration,
    // output parameters:
    struct _tds__CreateDot1XConfigurationResponse*tds__CreateDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateDot1XConfiguration* tds__CreateDot1XConfiguration,
    // output parameters:
    struct _tds__CreateDot1XConfigurationResponse*tds__CreateDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateDot1XConfiguration SOAP
//gsoap tds  service method-style:	CreateDot1XConfiguration document
//gsoap tds  service method-encoding:	CreateDot1XConfiguration literal
//gsoap tds  service method-input-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration
//gsoap tds  service method-output-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse
int __tds__CreateDot1XConfiguration(
    struct _tds__CreateDot1XConfiguration* tds__CreateDot1XConfiguration,	///< Input parameter
    struct _tds__CreateDot1XConfigurationResponse*tds__CreateDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetDot1XConfiguration* tds__SetDot1XConfiguration,
    // output parameters:
    struct _tds__SetDot1XConfigurationResponse*tds__SetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetDot1XConfiguration* tds__SetDot1XConfiguration,
    // output parameters:
    struct _tds__SetDot1XConfigurationResponse*tds__SetDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetDot1XConfiguration SOAP
//gsoap tds  service method-style:	SetDot1XConfiguration document
//gsoap tds  service method-encoding:	SetDot1XConfiguration literal
//gsoap tds  service method-input-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration
//gsoap tds  service method-output-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse
int __tds__SetDot1XConfiguration(
    struct _tds__SetDot1XConfiguration* tds__SetDot1XConfiguration,	///< Input parameter
    struct _tds__SetDot1XConfigurationResponse*tds__SetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot1XConfiguration* tds__GetDot1XConfiguration,
    // output parameters:
    struct _tds__GetDot1XConfigurationResponse*tds__GetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot1XConfiguration* tds__GetDot1XConfiguration,
    // output parameters:
    struct _tds__GetDot1XConfigurationResponse*tds__GetDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot1XConfiguration SOAP
//gsoap tds  service method-style:	GetDot1XConfiguration document
//gsoap tds  service method-encoding:	GetDot1XConfiguration literal
//gsoap tds  service method-input-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration
//gsoap tds  service method-output-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse
int __tds__GetDot1XConfiguration(
    struct _tds__GetDot1XConfiguration* tds__GetDot1XConfiguration,	///< Input parameter
    struct _tds__GetDot1XConfigurationResponse*tds__GetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfigurations                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfigurations" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot1XConfigurations* tds__GetDot1XConfigurations,
    // output parameters:
    struct _tds__GetDot1XConfigurationsResponse*tds__GetDot1XConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot1XConfigurations* tds__GetDot1XConfigurations,
    // output parameters:
    struct _tds__GetDot1XConfigurationsResponse*tds__GetDot1XConfigurationsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot1XConfigurations SOAP
//gsoap tds  service method-style:	GetDot1XConfigurations document
//gsoap tds  service method-encoding:	GetDot1XConfigurations literal
//gsoap tds  service method-input-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations
//gsoap tds  service method-output-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse
int __tds__GetDot1XConfigurations(
    struct _tds__GetDot1XConfigurations* tds__GetDot1XConfigurations,	///< Input parameter
    struct _tds__GetDot1XConfigurationsResponse*tds__GetDot1XConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteDot1XConfiguration* tds__DeleteDot1XConfiguration,
    // output parameters:
    struct _tds__DeleteDot1XConfigurationResponse*tds__DeleteDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteDot1XConfiguration* tds__DeleteDot1XConfiguration,
    // output parameters:
    struct _tds__DeleteDot1XConfigurationResponse*tds__DeleteDot1XConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteDot1XConfiguration SOAP
//gsoap tds  service method-style:	DeleteDot1XConfiguration document
//gsoap tds  service method-encoding:	DeleteDot1XConfiguration literal
//gsoap tds  service method-input-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration
//gsoap tds  service method-output-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse
int __tds__DeleteDot1XConfiguration(
    struct _tds__DeleteDot1XConfiguration* tds__DeleteDot1XConfiguration,	///< Input parameter
    struct _tds__DeleteDot1XConfigurationResponse*tds__DeleteDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Capabilities                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Capabilities" of service binding "DeviceBinding".
This operation returns the IEEE802.11 capabilities. The device shall support
				this operation.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Capabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot11Capabilities*  tds__GetDot11Capabilities,
    // output parameters:
    struct _tds__GetDot11CapabilitiesResponse*tds__GetDot11CapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Capabilities(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot11Capabilities*  tds__GetDot11Capabilities,
    // output parameters:
    struct _tds__GetDot11CapabilitiesResponse*tds__GetDot11CapabilitiesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot11Capabilities SOAP
//gsoap tds  service method-style:	GetDot11Capabilities document
//gsoap tds  service method-encoding:	GetDot11Capabilities literal
//gsoap tds  service method-input-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities
//gsoap tds  service method-output-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse
int __tds__GetDot11Capabilities(
    struct _tds__GetDot11Capabilities*  tds__GetDot11Capabilities,	///< Input parameter
    struct _tds__GetDot11CapabilitiesResponse*tds__GetDot11CapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Status                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Status" of service binding "DeviceBinding".
This operation returns the status of a wireless network interface. The device shall
support this
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Status(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDot11Status*        tds__GetDot11Status,
    // output parameters:
    struct _tds__GetDot11StatusResponse*tds__GetDot11StatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Status(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDot11Status*        tds__GetDot11Status,
    // output parameters:
    struct _tds__GetDot11StatusResponse*tds__GetDot11StatusResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDot11Status SOAP
//gsoap tds  service method-style:	GetDot11Status document
//gsoap tds  service method-encoding:	GetDot11Status literal
//gsoap tds  service method-input-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11Status
//gsoap tds  service method-output-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse
int __tds__GetDot11Status(
    struct _tds__GetDot11Status*        tds__GetDot11Status,	///< Input parameter
    struct _tds__GetDot11StatusResponse*tds__GetDot11StatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__ScanAvailableDot11Networks                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__ScanAvailableDot11Networks" of service binding "DeviceBinding".
This operation returns a lists of the wireless networks in range of the device.
A device should
				support this operation.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__ScanAvailableDot11Networks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__ScanAvailableDot11Networks* tds__ScanAvailableDot11Networks,
    // output parameters:
    struct _tds__ScanAvailableDot11NetworksResponse*tds__ScanAvailableDot11NetworksResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__ScanAvailableDot11Networks(
    struct soap *soap,
    // input parameters:
    struct _tds__ScanAvailableDot11Networks* tds__ScanAvailableDot11Networks,
    // output parameters:
    struct _tds__ScanAvailableDot11NetworksResponse*tds__ScanAvailableDot11NetworksResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	ScanAvailableDot11Networks SOAP
//gsoap tds  service method-style:	ScanAvailableDot11Networks document
//gsoap tds  service method-encoding:	ScanAvailableDot11Networks literal
//gsoap tds  service method-input-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks
//gsoap tds  service method-output-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse
int __tds__ScanAvailableDot11Networks(
    struct _tds__ScanAvailableDot11Networks* tds__ScanAvailableDot11Networks,	///< Input parameter
    struct _tds__ScanAvailableDot11NetworksResponse*tds__ScanAvailableDot11NetworksResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemUris                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemUris" of service binding "DeviceBinding".
This operation is used to retrieve URIs from which system information may be downloaded
				using HTTP. URIs may be returned for the following
system information:<br/>
				System Logs. Multiple system logs may be returned,
of different types. The exact format of
				the system logs is outside the scope of this specification.<br/>
				Support Information. This consists of arbitrary
device diagnostics information from a device.
				The exact format of the diagnostic information is
outside the scope of this specification.<br/>
				System Backup. The received file is a backup file
that can be used to restore the current
				device configuration at a later date. The exact
format of the backup configuration file is
				outside the scope of this specification.<br/>
				If the device allows retrieval of system logs, support
information or system backup data, it
				should make them available via HTTP GET. If it does,
it shall support the GetSystemUris
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemUris(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetSystemUris*         tds__GetSystemUris,
    // output parameters:
    struct _tds__GetSystemUrisResponse *tds__GetSystemUrisResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemUris(
    struct soap *soap,
    // input parameters:
    struct _tds__GetSystemUris*         tds__GetSystemUris,
    // output parameters:
    struct _tds__GetSystemUrisResponse *tds__GetSystemUrisResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetSystemUris SOAP
//gsoap tds  service method-style:	GetSystemUris document
//gsoap tds  service method-encoding:	GetSystemUris literal
//gsoap tds  service method-input-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUris
//gsoap tds  service method-output-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse
int __tds__GetSystemUris(
    struct _tds__GetSystemUris*         tds__GetSystemUris,	///< Input parameter
    struct _tds__GetSystemUrisResponse *tds__GetSystemUrisResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartFirmwareUpgrade                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartFirmwareUpgrade" of service binding "DeviceBinding".
This operation initiates a firmware upgrade using the HTTP POST mechanism. The response
				to the command includes an HTTP URL to which the
upgrade file may be uploaded. The
				actual upgrade takes place as soon as the HTTP POST
operation has completed. The device
				should support firmware upgrade through the StartFirmwareUpgrade
command. The exact
				format of the firmware data is outside the scope
of this specification.
				Firmware upgrade over HTTP may be achieved using
the following steps:<ol>
					<li>Client calls StartFirmwareUpgrade.</li>
					<li>Server responds with upload URI and
optional delay value.</li>
					<li>Client waits for delay duration if specified
by server.</li>
					<li>Client transmits the firmware image
to the upload URI using HTTP POST.</li>
					<li>Server reprograms itself using the uploaded
image, then reboots.</li>
				</ol>
				If the firmware upgrade fails because the upgrade
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
firmware upgrade fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartFirmwareUpgrade(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__StartFirmwareUpgrade*  tds__StartFirmwareUpgrade,
    // output parameters:
    struct _tds__StartFirmwareUpgradeResponse*tds__StartFirmwareUpgradeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartFirmwareUpgrade(
    struct soap *soap,
    // input parameters:
    struct _tds__StartFirmwareUpgrade*  tds__StartFirmwareUpgrade,
    // output parameters:
    struct _tds__StartFirmwareUpgradeResponse*tds__StartFirmwareUpgradeResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	StartFirmwareUpgrade SOAP
//gsoap tds  service method-style:	StartFirmwareUpgrade document
//gsoap tds  service method-encoding:	StartFirmwareUpgrade literal
//gsoap tds  service method-input-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade
//gsoap tds  service method-output-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse
int __tds__StartFirmwareUpgrade(
    struct _tds__StartFirmwareUpgrade*  tds__StartFirmwareUpgrade,	///< Input parameter
    struct _tds__StartFirmwareUpgradeResponse*tds__StartFirmwareUpgradeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartSystemRestore                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartSystemRestore" of service binding "DeviceBinding".
This operation initiates a system restore from backed up configuration data using
the HTTP
				POST mechanism. The response to the command includes
an HTTP URL to which the backup
				file may be uploaded. The actual restore takes place
as soon as the HTTP POST operation
				has completed. Devices should support system restore
through the StartSystemRestore
				command. The exact format of the backup configuration
data is outside the scope of this
				specification.<br/>
				System restore over HTTP may be achieved using the
following steps:<ol>
					<li>Client calls StartSystemRestore.</li>
					<li>Server responds with upload URI.</li>
					<li>Client transmits the configuration data
to the upload URI using HTTP POST.</li>
					<li>Server applies the uploaded configuration,
then reboots if necessary.</li>
				</ol>
				If the system restore fails because the uploaded
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
system restore fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartSystemRestore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__StartSystemRestore*    tds__StartSystemRestore,
    // output parameters:
    struct _tds__StartSystemRestoreResponse*tds__StartSystemRestoreResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartSystemRestore(
    struct soap *soap,
    // input parameters:
    struct _tds__StartSystemRestore*    tds__StartSystemRestore,
    // output parameters:
    struct _tds__StartSystemRestoreResponse*tds__StartSystemRestoreResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	StartSystemRestore SOAP
//gsoap tds  service method-style:	StartSystemRestore document
//gsoap tds  service method-encoding:	StartSystemRestore literal
//gsoap tds  service method-input-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestore
//gsoap tds  service method-output-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse
int __tds__StartSystemRestore(
    struct _tds__StartSystemRestore*    tds__StartSystemRestore,	///< Input parameter
    struct _tds__StartSystemRestoreResponse*tds__StartSystemRestoreResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfigurations                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetStorageConfigurations" of service binding "DeviceBinding".
			This operation lists all existing storage configurations
for the device. 
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetStorageConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetStorageConfigurations* tds__GetStorageConfigurations,
    // output parameters:
    struct _tds__GetStorageConfigurationsResponse*tds__GetStorageConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetStorageConfigurations(
    struct soap *soap,
    // input parameters:
    struct _tds__GetStorageConfigurations* tds__GetStorageConfigurations,
    // output parameters:
    struct _tds__GetStorageConfigurationsResponse*tds__GetStorageConfigurationsResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetStorageConfigurations SOAP
//gsoap tds  service method-style:	GetStorageConfigurations document
//gsoap tds  service method-encoding:	GetStorageConfigurations literal
//gsoap tds  service method-input-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations
//gsoap tds  service method-output-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse
int __tds__GetStorageConfigurations(
    struct _tds__GetStorageConfigurations* tds__GetStorageConfigurations,	///< Input parameter
    struct _tds__GetStorageConfigurationsResponse*tds__GetStorageConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateStorageConfiguration" of service binding "DeviceBinding".
			This operation creates a new storage configuration. 
			The configuration data shall be created in the device and
shall be persistent (remain after reboot).
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__CreateStorageConfiguration* tds__CreateStorageConfiguration,
    // output parameters:
    struct _tds__CreateStorageConfigurationResponse*tds__CreateStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__CreateStorageConfiguration* tds__CreateStorageConfiguration,
    // output parameters:
    struct _tds__CreateStorageConfigurationResponse*tds__CreateStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	CreateStorageConfiguration SOAP
//gsoap tds  service method-style:	CreateStorageConfiguration document
//gsoap tds  service method-encoding:	CreateStorageConfiguration literal
//gsoap tds  service method-input-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration
//gsoap tds  service method-output-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse
int __tds__CreateStorageConfiguration(
    struct _tds__CreateStorageConfiguration* tds__CreateStorageConfiguration,	///< Input parameter
    struct _tds__CreateStorageConfigurationResponse*tds__CreateStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetStorageConfiguration" of service binding "DeviceBinding".
			This operation retrieves the Storage configuration associated
with the given storage configuration token.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetStorageConfiguration* tds__GetStorageConfiguration,
    // output parameters:
    struct _tds__GetStorageConfigurationResponse*tds__GetStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__GetStorageConfiguration* tds__GetStorageConfiguration,
    // output parameters:
    struct _tds__GetStorageConfigurationResponse*tds__GetStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetStorageConfiguration SOAP
//gsoap tds  service method-style:	GetStorageConfiguration document
//gsoap tds  service method-encoding:	GetStorageConfiguration literal
//gsoap tds  service method-input-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration
//gsoap tds  service method-output-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse
int __tds__GetStorageConfiguration(
    struct _tds__GetStorageConfiguration* tds__GetStorageConfiguration,	///< Input parameter
    struct _tds__GetStorageConfigurationResponse*tds__GetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetStorageConfiguration" of service binding "DeviceBinding".
			This operation modifies an existing Storage configuration.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetStorageConfiguration* tds__SetStorageConfiguration,
    // output parameters:
    struct _tds__SetStorageConfigurationResponse*tds__SetStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__SetStorageConfiguration* tds__SetStorageConfiguration,
    // output parameters:
    struct _tds__SetStorageConfigurationResponse*tds__SetStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetStorageConfiguration SOAP
//gsoap tds  service method-style:	SetStorageConfiguration document
//gsoap tds  service method-encoding:	SetStorageConfiguration literal
//gsoap tds  service method-input-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration
//gsoap tds  service method-output-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse
int __tds__SetStorageConfiguration(
    struct _tds__SetStorageConfiguration* tds__SetStorageConfiguration,	///< Input parameter
    struct _tds__SetStorageConfigurationResponse*tds__SetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteStorageConfiguration" of service binding "DeviceBinding".
			This operation deletes the given storage configuration and
configuration change shall always be persistent.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteStorageConfiguration* tds__DeleteStorageConfiguration,
    // output parameters:
    struct _tds__DeleteStorageConfigurationResponse*tds__DeleteStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteStorageConfiguration(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteStorageConfiguration* tds__DeleteStorageConfiguration,
    // output parameters:
    struct _tds__DeleteStorageConfigurationResponse*tds__DeleteStorageConfigurationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteStorageConfiguration SOAP
//gsoap tds  service method-style:	DeleteStorageConfiguration document
//gsoap tds  service method-encoding:	DeleteStorageConfiguration literal
//gsoap tds  service method-input-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration
//gsoap tds  service method-output-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse
int __tds__DeleteStorageConfiguration(
    struct _tds__DeleteStorageConfiguration* tds__DeleteStorageConfiguration,	///< Input parameter
    struct _tds__DeleteStorageConfigurationResponse*tds__DeleteStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetGeoLocation                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetGeoLocation" of service binding "DeviceBinding".
				This operation lists all existing geo location configurations
for the device. 
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetGeoLocation*        tds__GetGeoLocation,
    // output parameters:
    struct _tds__GetGeoLocationResponse*tds__GetGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetGeoLocation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetGeoLocation*        tds__GetGeoLocation,
    // output parameters:
    struct _tds__GetGeoLocationResponse*tds__GetGeoLocationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetGeoLocation SOAP
//gsoap tds  service method-style:	GetGeoLocation document
//gsoap tds  service method-encoding:	GetGeoLocation literal
//gsoap tds  service method-input-action:	GetGeoLocation http://www.onvif.org/ver10/device/wsdl/GetGeoLocation
//gsoap tds  service method-output-action:	GetGeoLocation http://www.onvif.org/ver10/device/wsdl/GetGeoLocationResponse
int __tds__GetGeoLocation(
    struct _tds__GetGeoLocation*        tds__GetGeoLocation,	///< Input parameter
    struct _tds__GetGeoLocationResponse*tds__GetGeoLocationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetGeoLocation                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetGeoLocation" of service binding "DeviceBinding".
				This operation allows to modify one or more geo
configuration entries.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SetGeoLocation*        tds__SetGeoLocation,
    // output parameters:
    struct _tds__SetGeoLocationResponse*tds__SetGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetGeoLocation(
    struct soap *soap,
    // input parameters:
    struct _tds__SetGeoLocation*        tds__SetGeoLocation,
    // output parameters:
    struct _tds__SetGeoLocationResponse*tds__SetGeoLocationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SetGeoLocation SOAP
//gsoap tds  service method-style:	SetGeoLocation document
//gsoap tds  service method-encoding:	SetGeoLocation literal
//gsoap tds  service method-input-action:	SetGeoLocation http://www.onvif.org/ver10/device/wsdl/SetGeoLocation
//gsoap tds  service method-output-action:	SetGeoLocation http://www.onvif.org/ver10/device/wsdl/SetGeoLocationResponse
int __tds__SetGeoLocation(
    struct _tds__SetGeoLocation*        tds__SetGeoLocation,	///< Input parameter
    struct _tds__SetGeoLocationResponse*tds__SetGeoLocationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteGeoLocation                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteGeoLocation" of service binding "DeviceBinding".
				This operation deletes the given geo location entries.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__DeleteGeoLocation*     tds__DeleteGeoLocation,
    // output parameters:
    struct _tds__DeleteGeoLocationResponse*tds__DeleteGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteGeoLocation(
    struct soap *soap,
    // input parameters:
    struct _tds__DeleteGeoLocation*     tds__DeleteGeoLocation,
    // output parameters:
    struct _tds__DeleteGeoLocationResponse*tds__DeleteGeoLocationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	DeleteGeoLocation SOAP
//gsoap tds  service method-style:	DeleteGeoLocation document
//gsoap tds  service method-encoding:	DeleteGeoLocation literal
//gsoap tds  service method-input-action:	DeleteGeoLocation http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation
//gsoap tds  service method-output-action:	DeleteGeoLocation http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocationResponse
int __tds__DeleteGeoLocation(
    struct _tds__DeleteGeoLocation*     tds__DeleteGeoLocation,	///< Input parameter
    struct _tds__DeleteGeoLocationResponse*tds__DeleteGeoLocationResponse	///< Output parameter
);

/** @page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_policy_enablers Policy Enablers of Binding "DeviceBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/** @page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings that are contractually bound by WSDLs and
are auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data
bindings are adopted from XML schemas as part of the WSDL types section or when
running wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

@note The following readers and writers are C/C++ data type (de)serializers
auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

@note Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

@note Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

@note The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_set_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_set_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


*/

/**

@section tds Top-level root elements of schema "http://www.onvif.org/ver10/device/wsdl"

  - <tds:GetServices> @ref _tds__GetServices
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServices(struct soap*, struct _tds__GetServices*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServices(struct soap*, struct _tds__GetServices*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServices(struct soap*, const char *URL, struct _tds__GetServices*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServices(struct soap*, const char *URL, struct _tds__GetServices*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServices(struct soap*, const char *URL, struct _tds__GetServices*);
    soap_POST_recv__tds__GetServices(struct soap*, struct _tds__GetServices*);
    @endcode

  - <tds:GetServicesResponse> @ref _tds__GetServicesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServicesResponse(struct soap*, const char *URL, struct _tds__GetServicesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServicesResponse(struct soap*, const char *URL, struct _tds__GetServicesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServicesResponse(struct soap*, const char *URL, struct _tds__GetServicesResponse*);
    soap_POST_recv__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse*);
    @endcode

  - <tds:GetServiceCapabilities> @ref _tds__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServiceCapabilities(struct soap*, const char *URL, struct _tds__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServiceCapabilities(struct soap*, const char *URL, struct _tds__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServiceCapabilities(struct soap*, const char *URL, struct _tds__GetServiceCapabilities*);
    soap_POST_recv__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities*);
    @endcode

  - <tds:GetServiceCapabilitiesResponse> @ref _tds__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetServiceCapabilitiesResponse*);
    soap_POST_recv__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse*);
    @endcode

  - <tds:Capabilities> (use wsdl2h option -g to auto-generate type _tds__Capabilities)

  - <tds:GetDeviceInformation> @ref _tds__GetDeviceInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDeviceInformation(struct soap*, const char *URL, struct _tds__GetDeviceInformation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDeviceInformation(struct soap*, const char *URL, struct _tds__GetDeviceInformation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDeviceInformation(struct soap*, const char *URL, struct _tds__GetDeviceInformation*);
    soap_POST_recv__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation*);
    @endcode

  - <tds:GetDeviceInformationResponse> @ref _tds__GetDeviceInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDeviceInformationResponse(struct soap*, const char *URL, struct _tds__GetDeviceInformationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDeviceInformationResponse(struct soap*, const char *URL, struct _tds__GetDeviceInformationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDeviceInformationResponse(struct soap*, const char *URL, struct _tds__GetDeviceInformationResponse*);
    soap_POST_recv__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse*);
    @endcode

  - <tds:SetSystemDateAndTime> @ref _tds__SetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTime(struct soap*, struct _tds__SetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTime(struct soap*, struct _tds__SetSystemDateAndTime*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemDateAndTime(struct soap*, const char *URL, struct _tds__SetSystemDateAndTime*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemDateAndTime(struct soap*, const char *URL, struct _tds__SetSystemDateAndTime*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemDateAndTime(struct soap*, const char *URL, struct _tds__SetSystemDateAndTime*);
    soap_POST_recv__tds__SetSystemDateAndTime(struct soap*, struct _tds__SetSystemDateAndTime*);
    @endcode

  - <tds:SetSystemDateAndTimeResponse> @ref _tds__SetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTimeResponse(struct soap*, struct _tds__SetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTimeResponse(struct soap*, struct _tds__SetSystemDateAndTimeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemDateAndTimeResponse(struct soap*, const char *URL, struct _tds__SetSystemDateAndTimeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemDateAndTimeResponse(struct soap*, const char *URL, struct _tds__SetSystemDateAndTimeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemDateAndTimeResponse(struct soap*, const char *URL, struct _tds__SetSystemDateAndTimeResponse*);
    soap_POST_recv__tds__SetSystemDateAndTimeResponse(struct soap*, struct _tds__SetSystemDateAndTimeResponse*);
    @endcode

  - <tds:GetSystemDateAndTime> @ref _tds__GetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTime(struct soap*, struct _tds__GetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTime(struct soap*, struct _tds__GetSystemDateAndTime*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemDateAndTime(struct soap*, const char *URL, struct _tds__GetSystemDateAndTime*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemDateAndTime(struct soap*, const char *URL, struct _tds__GetSystemDateAndTime*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemDateAndTime(struct soap*, const char *URL, struct _tds__GetSystemDateAndTime*);
    soap_POST_recv__tds__GetSystemDateAndTime(struct soap*, struct _tds__GetSystemDateAndTime*);
    @endcode

  - <tds:GetSystemDateAndTimeResponse> @ref _tds__GetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTimeResponse(struct soap*, struct _tds__GetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTimeResponse(struct soap*, struct _tds__GetSystemDateAndTimeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemDateAndTimeResponse(struct soap*, const char *URL, struct _tds__GetSystemDateAndTimeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemDateAndTimeResponse(struct soap*, const char *URL, struct _tds__GetSystemDateAndTimeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemDateAndTimeResponse(struct soap*, const char *URL, struct _tds__GetSystemDateAndTimeResponse*);
    soap_POST_recv__tds__GetSystemDateAndTimeResponse(struct soap*, struct _tds__GetSystemDateAndTimeResponse*);
    @endcode

  - <tds:SetSystemFactoryDefault> @ref _tds__SetSystemFactoryDefault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefault(struct soap*, struct _tds__SetSystemFactoryDefault*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefault(struct soap*, struct _tds__SetSystemFactoryDefault*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemFactoryDefault(struct soap*, const char *URL, struct _tds__SetSystemFactoryDefault*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemFactoryDefault(struct soap*, const char *URL, struct _tds__SetSystemFactoryDefault*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemFactoryDefault(struct soap*, const char *URL, struct _tds__SetSystemFactoryDefault*);
    soap_POST_recv__tds__SetSystemFactoryDefault(struct soap*, struct _tds__SetSystemFactoryDefault*);
    @endcode

  - <tds:SetSystemFactoryDefaultResponse> @ref _tds__SetSystemFactoryDefaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefaultResponse(struct soap*, struct _tds__SetSystemFactoryDefaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefaultResponse(struct soap*, struct _tds__SetSystemFactoryDefaultResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemFactoryDefaultResponse(struct soap*, const char *URL, struct _tds__SetSystemFactoryDefaultResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemFactoryDefaultResponse(struct soap*, const char *URL, struct _tds__SetSystemFactoryDefaultResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemFactoryDefaultResponse(struct soap*, const char *URL, struct _tds__SetSystemFactoryDefaultResponse*);
    soap_POST_recv__tds__SetSystemFactoryDefaultResponse(struct soap*, struct _tds__SetSystemFactoryDefaultResponse*);
    @endcode

  - <tds:UpgradeSystemFirmware> @ref _tds__UpgradeSystemFirmware
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmware(struct soap*, struct _tds__UpgradeSystemFirmware*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmware(struct soap*, struct _tds__UpgradeSystemFirmware*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__UpgradeSystemFirmware(struct soap*, const char *URL, struct _tds__UpgradeSystemFirmware*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__UpgradeSystemFirmware(struct soap*, const char *URL, struct _tds__UpgradeSystemFirmware*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__UpgradeSystemFirmware(struct soap*, const char *URL, struct _tds__UpgradeSystemFirmware*);
    soap_POST_recv__tds__UpgradeSystemFirmware(struct soap*, struct _tds__UpgradeSystemFirmware*);
    @endcode

  - <tds:UpgradeSystemFirmwareResponse> @ref _tds__UpgradeSystemFirmwareResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmwareResponse(struct soap*, struct _tds__UpgradeSystemFirmwareResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmwareResponse(struct soap*, struct _tds__UpgradeSystemFirmwareResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__UpgradeSystemFirmwareResponse(struct soap*, const char *URL, struct _tds__UpgradeSystemFirmwareResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__UpgradeSystemFirmwareResponse(struct soap*, const char *URL, struct _tds__UpgradeSystemFirmwareResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__UpgradeSystemFirmwareResponse(struct soap*, const char *URL, struct _tds__UpgradeSystemFirmwareResponse*);
    soap_POST_recv__tds__UpgradeSystemFirmwareResponse(struct soap*, struct _tds__UpgradeSystemFirmwareResponse*);
    @endcode

  - <tds:SystemReboot> @ref _tds__SystemReboot
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemReboot(struct soap*, struct _tds__SystemReboot*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemReboot(struct soap*, struct _tds__SystemReboot*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SystemReboot(struct soap*, const char *URL, struct _tds__SystemReboot*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SystemReboot(struct soap*, const char *URL, struct _tds__SystemReboot*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SystemReboot(struct soap*, const char *URL, struct _tds__SystemReboot*);
    soap_POST_recv__tds__SystemReboot(struct soap*, struct _tds__SystemReboot*);
    @endcode

  - <tds:SystemRebootResponse> @ref _tds__SystemRebootResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SystemRebootResponse(struct soap*, const char *URL, struct _tds__SystemRebootResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SystemRebootResponse(struct soap*, const char *URL, struct _tds__SystemRebootResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SystemRebootResponse(struct soap*, const char *URL, struct _tds__SystemRebootResponse*);
    soap_POST_recv__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse*);
    @endcode

  - <tds:RestoreSystem> @ref _tds__RestoreSystem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystem(struct soap*, struct _tds__RestoreSystem*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystem(struct soap*, struct _tds__RestoreSystem*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RestoreSystem(struct soap*, const char *URL, struct _tds__RestoreSystem*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RestoreSystem(struct soap*, const char *URL, struct _tds__RestoreSystem*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RestoreSystem(struct soap*, const char *URL, struct _tds__RestoreSystem*);
    soap_POST_recv__tds__RestoreSystem(struct soap*, struct _tds__RestoreSystem*);
    @endcode

  - <tds:RestoreSystemResponse> @ref _tds__RestoreSystemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystemResponse(struct soap*, struct _tds__RestoreSystemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystemResponse(struct soap*, struct _tds__RestoreSystemResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RestoreSystemResponse(struct soap*, const char *URL, struct _tds__RestoreSystemResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RestoreSystemResponse(struct soap*, const char *URL, struct _tds__RestoreSystemResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RestoreSystemResponse(struct soap*, const char *URL, struct _tds__RestoreSystemResponse*);
    soap_POST_recv__tds__RestoreSystemResponse(struct soap*, struct _tds__RestoreSystemResponse*);
    @endcode

  - <tds:GetSystemBackup> @ref _tds__GetSystemBackup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackup(struct soap*, struct _tds__GetSystemBackup*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackup(struct soap*, struct _tds__GetSystemBackup*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemBackup(struct soap*, const char *URL, struct _tds__GetSystemBackup*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemBackup(struct soap*, const char *URL, struct _tds__GetSystemBackup*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemBackup(struct soap*, const char *URL, struct _tds__GetSystemBackup*);
    soap_POST_recv__tds__GetSystemBackup(struct soap*, struct _tds__GetSystemBackup*);
    @endcode

  - <tds:GetSystemBackupResponse> @ref _tds__GetSystemBackupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackupResponse(struct soap*, struct _tds__GetSystemBackupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackupResponse(struct soap*, struct _tds__GetSystemBackupResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemBackupResponse(struct soap*, const char *URL, struct _tds__GetSystemBackupResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemBackupResponse(struct soap*, const char *URL, struct _tds__GetSystemBackupResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemBackupResponse(struct soap*, const char *URL, struct _tds__GetSystemBackupResponse*);
    soap_POST_recv__tds__GetSystemBackupResponse(struct soap*, struct _tds__GetSystemBackupResponse*);
    @endcode

  - <tds:GetSystemSupportInformation> @ref _tds__GetSystemSupportInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformation(struct soap*, struct _tds__GetSystemSupportInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformation(struct soap*, struct _tds__GetSystemSupportInformation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemSupportInformation(struct soap*, const char *URL, struct _tds__GetSystemSupportInformation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemSupportInformation(struct soap*, const char *URL, struct _tds__GetSystemSupportInformation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemSupportInformation(struct soap*, const char *URL, struct _tds__GetSystemSupportInformation*);
    soap_POST_recv__tds__GetSystemSupportInformation(struct soap*, struct _tds__GetSystemSupportInformation*);
    @endcode

  - <tds:GetSystemSupportInformationResponse> @ref _tds__GetSystemSupportInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformationResponse(struct soap*, struct _tds__GetSystemSupportInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformationResponse(struct soap*, struct _tds__GetSystemSupportInformationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemSupportInformationResponse(struct soap*, const char *URL, struct _tds__GetSystemSupportInformationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemSupportInformationResponse(struct soap*, const char *URL, struct _tds__GetSystemSupportInformationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemSupportInformationResponse(struct soap*, const char *URL, struct _tds__GetSystemSupportInformationResponse*);
    soap_POST_recv__tds__GetSystemSupportInformationResponse(struct soap*, struct _tds__GetSystemSupportInformationResponse*);
    @endcode

  - <tds:GetSystemLog> @ref _tds__GetSystemLog
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLog(struct soap*, struct _tds__GetSystemLog*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLog(struct soap*, struct _tds__GetSystemLog*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemLog(struct soap*, const char *URL, struct _tds__GetSystemLog*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemLog(struct soap*, const char *URL, struct _tds__GetSystemLog*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemLog(struct soap*, const char *URL, struct _tds__GetSystemLog*);
    soap_POST_recv__tds__GetSystemLog(struct soap*, struct _tds__GetSystemLog*);
    @endcode

  - <tds:GetSystemLogResponse> @ref _tds__GetSystemLogResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLogResponse(struct soap*, struct _tds__GetSystemLogResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLogResponse(struct soap*, struct _tds__GetSystemLogResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemLogResponse(struct soap*, const char *URL, struct _tds__GetSystemLogResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemLogResponse(struct soap*, const char *URL, struct _tds__GetSystemLogResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemLogResponse(struct soap*, const char *URL, struct _tds__GetSystemLogResponse*);
    soap_POST_recv__tds__GetSystemLogResponse(struct soap*, struct _tds__GetSystemLogResponse*);
    @endcode

  - <tds:GetScopes> @ref _tds__GetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopes(struct soap*, struct _tds__GetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopes(struct soap*, struct _tds__GetScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetScopes(struct soap*, const char *URL, struct _tds__GetScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetScopes(struct soap*, const char *URL, struct _tds__GetScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetScopes(struct soap*, const char *URL, struct _tds__GetScopes*);
    soap_POST_recv__tds__GetScopes(struct soap*, struct _tds__GetScopes*);
    @endcode

  - <tds:GetScopesResponse> @ref _tds__GetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopesResponse(struct soap*, struct _tds__GetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopesResponse(struct soap*, struct _tds__GetScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetScopesResponse(struct soap*, const char *URL, struct _tds__GetScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetScopesResponse(struct soap*, const char *URL, struct _tds__GetScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetScopesResponse(struct soap*, const char *URL, struct _tds__GetScopesResponse*);
    soap_POST_recv__tds__GetScopesResponse(struct soap*, struct _tds__GetScopesResponse*);
    @endcode

  - <tds:SetScopes> @ref _tds__SetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopes(struct soap*, struct _tds__SetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopes(struct soap*, struct _tds__SetScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetScopes(struct soap*, const char *URL, struct _tds__SetScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetScopes(struct soap*, const char *URL, struct _tds__SetScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetScopes(struct soap*, const char *URL, struct _tds__SetScopes*);
    soap_POST_recv__tds__SetScopes(struct soap*, struct _tds__SetScopes*);
    @endcode

  - <tds:SetScopesResponse> @ref _tds__SetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopesResponse(struct soap*, struct _tds__SetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopesResponse(struct soap*, struct _tds__SetScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetScopesResponse(struct soap*, const char *URL, struct _tds__SetScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetScopesResponse(struct soap*, const char *URL, struct _tds__SetScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetScopesResponse(struct soap*, const char *URL, struct _tds__SetScopesResponse*);
    soap_POST_recv__tds__SetScopesResponse(struct soap*, struct _tds__SetScopesResponse*);
    @endcode

  - <tds:AddScopes> @ref _tds__AddScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopes(struct soap*, struct _tds__AddScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopes(struct soap*, struct _tds__AddScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddScopes(struct soap*, const char *URL, struct _tds__AddScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddScopes(struct soap*, const char *URL, struct _tds__AddScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddScopes(struct soap*, const char *URL, struct _tds__AddScopes*);
    soap_POST_recv__tds__AddScopes(struct soap*, struct _tds__AddScopes*);
    @endcode

  - <tds:AddScopesResponse> @ref _tds__AddScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopesResponse(struct soap*, struct _tds__AddScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopesResponse(struct soap*, struct _tds__AddScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddScopesResponse(struct soap*, const char *URL, struct _tds__AddScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddScopesResponse(struct soap*, const char *URL, struct _tds__AddScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddScopesResponse(struct soap*, const char *URL, struct _tds__AddScopesResponse*);
    soap_POST_recv__tds__AddScopesResponse(struct soap*, struct _tds__AddScopesResponse*);
    @endcode

  - <tds:RemoveScopes> @ref _tds__RemoveScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopes(struct soap*, struct _tds__RemoveScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopes(struct soap*, struct _tds__RemoveScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveScopes(struct soap*, const char *URL, struct _tds__RemoveScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveScopes(struct soap*, const char *URL, struct _tds__RemoveScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveScopes(struct soap*, const char *URL, struct _tds__RemoveScopes*);
    soap_POST_recv__tds__RemoveScopes(struct soap*, struct _tds__RemoveScopes*);
    @endcode

  - <tds:RemoveScopesResponse> @ref _tds__RemoveScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopesResponse(struct soap*, struct _tds__RemoveScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopesResponse(struct soap*, struct _tds__RemoveScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveScopesResponse(struct soap*, const char *URL, struct _tds__RemoveScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveScopesResponse(struct soap*, const char *URL, struct _tds__RemoveScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveScopesResponse(struct soap*, const char *URL, struct _tds__RemoveScopesResponse*);
    soap_POST_recv__tds__RemoveScopesResponse(struct soap*, struct _tds__RemoveScopesResponse*);
    @endcode

  - <tds:GetDiscoveryMode> @ref _tds__GetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryMode(struct soap*, struct _tds__GetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryMode(struct soap*, struct _tds__GetDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDiscoveryMode(struct soap*, const char *URL, struct _tds__GetDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDiscoveryMode(struct soap*, const char *URL, struct _tds__GetDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDiscoveryMode(struct soap*, const char *URL, struct _tds__GetDiscoveryMode*);
    soap_POST_recv__tds__GetDiscoveryMode(struct soap*, struct _tds__GetDiscoveryMode*);
    @endcode

  - <tds:GetDiscoveryModeResponse> @ref _tds__GetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryModeResponse(struct soap*, struct _tds__GetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryModeResponse(struct soap*, struct _tds__GetDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__GetDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__GetDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__GetDiscoveryModeResponse*);
    soap_POST_recv__tds__GetDiscoveryModeResponse(struct soap*, struct _tds__GetDiscoveryModeResponse*);
    @endcode

  - <tds:SetDiscoveryMode> @ref _tds__SetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryMode(struct soap*, struct _tds__SetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryMode(struct soap*, struct _tds__SetDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDiscoveryMode(struct soap*, const char *URL, struct _tds__SetDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDiscoveryMode(struct soap*, const char *URL, struct _tds__SetDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDiscoveryMode(struct soap*, const char *URL, struct _tds__SetDiscoveryMode*);
    soap_POST_recv__tds__SetDiscoveryMode(struct soap*, struct _tds__SetDiscoveryMode*);
    @endcode

  - <tds:SetDiscoveryModeResponse> @ref _tds__SetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryModeResponse(struct soap*, struct _tds__SetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryModeResponse(struct soap*, struct _tds__SetDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__SetDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__SetDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__SetDiscoveryModeResponse*);
    soap_POST_recv__tds__SetDiscoveryModeResponse(struct soap*, struct _tds__SetDiscoveryModeResponse*);
    @endcode

  - <tds:GetRemoteDiscoveryMode> @ref _tds__GetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryMode(struct soap*, struct _tds__GetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryMode(struct soap*, struct _tds__GetRemoteDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteDiscoveryMode(struct soap*, const char *URL, struct _tds__GetRemoteDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteDiscoveryMode(struct soap*, const char *URL, struct _tds__GetRemoteDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteDiscoveryMode(struct soap*, const char *URL, struct _tds__GetRemoteDiscoveryMode*);
    soap_POST_recv__tds__GetRemoteDiscoveryMode(struct soap*, struct _tds__GetRemoteDiscoveryMode*);
    @endcode

  - <tds:GetRemoteDiscoveryModeResponse> @ref _tds__GetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryModeResponse(struct soap*, struct _tds__GetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryModeResponse(struct soap*, struct _tds__GetRemoteDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__GetRemoteDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__GetRemoteDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__GetRemoteDiscoveryModeResponse*);
    soap_POST_recv__tds__GetRemoteDiscoveryModeResponse(struct soap*, struct _tds__GetRemoteDiscoveryModeResponse*);
    @endcode

  - <tds:SetRemoteDiscoveryMode> @ref _tds__SetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryMode(struct soap*, struct _tds__SetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryMode(struct soap*, struct _tds__SetRemoteDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteDiscoveryMode(struct soap*, const char *URL, struct _tds__SetRemoteDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteDiscoveryMode(struct soap*, const char *URL, struct _tds__SetRemoteDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteDiscoveryMode(struct soap*, const char *URL, struct _tds__SetRemoteDiscoveryMode*);
    soap_POST_recv__tds__SetRemoteDiscoveryMode(struct soap*, struct _tds__SetRemoteDiscoveryMode*);
    @endcode

  - <tds:SetRemoteDiscoveryModeResponse> @ref _tds__SetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryModeResponse(struct soap*, struct _tds__SetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryModeResponse(struct soap*, struct _tds__SetRemoteDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__SetRemoteDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__SetRemoteDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char *URL, struct _tds__SetRemoteDiscoveryModeResponse*);
    soap_POST_recv__tds__SetRemoteDiscoveryModeResponse(struct soap*, struct _tds__SetRemoteDiscoveryModeResponse*);
    @endcode

  - <tds:GetDPAddresses> @ref _tds__GetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddresses(struct soap*, struct _tds__GetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddresses(struct soap*, struct _tds__GetDPAddresses*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDPAddresses(struct soap*, const char *URL, struct _tds__GetDPAddresses*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDPAddresses(struct soap*, const char *URL, struct _tds__GetDPAddresses*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDPAddresses(struct soap*, const char *URL, struct _tds__GetDPAddresses*);
    soap_POST_recv__tds__GetDPAddresses(struct soap*, struct _tds__GetDPAddresses*);
    @endcode

  - <tds:GetDPAddressesResponse> @ref _tds__GetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddressesResponse(struct soap*, struct _tds__GetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddressesResponse(struct soap*, struct _tds__GetDPAddressesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDPAddressesResponse(struct soap*, const char *URL, struct _tds__GetDPAddressesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDPAddressesResponse(struct soap*, const char *URL, struct _tds__GetDPAddressesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDPAddressesResponse(struct soap*, const char *URL, struct _tds__GetDPAddressesResponse*);
    soap_POST_recv__tds__GetDPAddressesResponse(struct soap*, struct _tds__GetDPAddressesResponse*);
    @endcode

  - <tds:SetDPAddresses> @ref _tds__SetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddresses(struct soap*, struct _tds__SetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddresses(struct soap*, struct _tds__SetDPAddresses*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDPAddresses(struct soap*, const char *URL, struct _tds__SetDPAddresses*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDPAddresses(struct soap*, const char *URL, struct _tds__SetDPAddresses*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDPAddresses(struct soap*, const char *URL, struct _tds__SetDPAddresses*);
    soap_POST_recv__tds__SetDPAddresses(struct soap*, struct _tds__SetDPAddresses*);
    @endcode

  - <tds:SetDPAddressesResponse> @ref _tds__SetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddressesResponse(struct soap*, struct _tds__SetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddressesResponse(struct soap*, struct _tds__SetDPAddressesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDPAddressesResponse(struct soap*, const char *URL, struct _tds__SetDPAddressesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDPAddressesResponse(struct soap*, const char *URL, struct _tds__SetDPAddressesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDPAddressesResponse(struct soap*, const char *URL, struct _tds__SetDPAddressesResponse*);
    soap_POST_recv__tds__SetDPAddressesResponse(struct soap*, struct _tds__SetDPAddressesResponse*);
    @endcode

  - <tds:GetEndpointReference> @ref _tds__GetEndpointReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReference(struct soap*, struct _tds__GetEndpointReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReference(struct soap*, struct _tds__GetEndpointReference*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetEndpointReference(struct soap*, const char *URL, struct _tds__GetEndpointReference*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetEndpointReference(struct soap*, const char *URL, struct _tds__GetEndpointReference*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetEndpointReference(struct soap*, const char *URL, struct _tds__GetEndpointReference*);
    soap_POST_recv__tds__GetEndpointReference(struct soap*, struct _tds__GetEndpointReference*);
    @endcode

  - <tds:GetEndpointReferenceResponse> @ref _tds__GetEndpointReferenceResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReferenceResponse(struct soap*, struct _tds__GetEndpointReferenceResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReferenceResponse(struct soap*, struct _tds__GetEndpointReferenceResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetEndpointReferenceResponse(struct soap*, const char *URL, struct _tds__GetEndpointReferenceResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetEndpointReferenceResponse(struct soap*, const char *URL, struct _tds__GetEndpointReferenceResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetEndpointReferenceResponse(struct soap*, const char *URL, struct _tds__GetEndpointReferenceResponse*);
    soap_POST_recv__tds__GetEndpointReferenceResponse(struct soap*, struct _tds__GetEndpointReferenceResponse*);
    @endcode

  - <tds:GetRemoteUser> @ref _tds__GetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUser(struct soap*, struct _tds__GetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUser(struct soap*, struct _tds__GetRemoteUser*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteUser(struct soap*, const char *URL, struct _tds__GetRemoteUser*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteUser(struct soap*, const char *URL, struct _tds__GetRemoteUser*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteUser(struct soap*, const char *URL, struct _tds__GetRemoteUser*);
    soap_POST_recv__tds__GetRemoteUser(struct soap*, struct _tds__GetRemoteUser*);
    @endcode

  - <tds:GetRemoteUserResponse> @ref _tds__GetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUserResponse(struct soap*, struct _tds__GetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUserResponse(struct soap*, struct _tds__GetRemoteUserResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteUserResponse(struct soap*, const char *URL, struct _tds__GetRemoteUserResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteUserResponse(struct soap*, const char *URL, struct _tds__GetRemoteUserResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteUserResponse(struct soap*, const char *URL, struct _tds__GetRemoteUserResponse*);
    soap_POST_recv__tds__GetRemoteUserResponse(struct soap*, struct _tds__GetRemoteUserResponse*);
    @endcode

  - <tds:SetRemoteUser> @ref _tds__SetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUser(struct soap*, struct _tds__SetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUser(struct soap*, struct _tds__SetRemoteUser*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteUser(struct soap*, const char *URL, struct _tds__SetRemoteUser*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteUser(struct soap*, const char *URL, struct _tds__SetRemoteUser*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteUser(struct soap*, const char *URL, struct _tds__SetRemoteUser*);
    soap_POST_recv__tds__SetRemoteUser(struct soap*, struct _tds__SetRemoteUser*);
    @endcode

  - <tds:SetRemoteUserResponse> @ref _tds__SetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUserResponse(struct soap*, struct _tds__SetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUserResponse(struct soap*, struct _tds__SetRemoteUserResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteUserResponse(struct soap*, const char *URL, struct _tds__SetRemoteUserResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteUserResponse(struct soap*, const char *URL, struct _tds__SetRemoteUserResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteUserResponse(struct soap*, const char *URL, struct _tds__SetRemoteUserResponse*);
    soap_POST_recv__tds__SetRemoteUserResponse(struct soap*, struct _tds__SetRemoteUserResponse*);
    @endcode

  - <tds:GetUsers> @ref _tds__GetUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsers(struct soap*, struct _tds__GetUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsers(struct soap*, struct _tds__GetUsers*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetUsers(struct soap*, const char *URL, struct _tds__GetUsers*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetUsers(struct soap*, const char *URL, struct _tds__GetUsers*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetUsers(struct soap*, const char *URL, struct _tds__GetUsers*);
    soap_POST_recv__tds__GetUsers(struct soap*, struct _tds__GetUsers*);
    @endcode

  - <tds:GetUsersResponse> @ref _tds__GetUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsersResponse(struct soap*, struct _tds__GetUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsersResponse(struct soap*, struct _tds__GetUsersResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetUsersResponse(struct soap*, const char *URL, struct _tds__GetUsersResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetUsersResponse(struct soap*, const char *URL, struct _tds__GetUsersResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetUsersResponse(struct soap*, const char *URL, struct _tds__GetUsersResponse*);
    soap_POST_recv__tds__GetUsersResponse(struct soap*, struct _tds__GetUsersResponse*);
    @endcode

  - <tds:CreateUsers> @ref _tds__CreateUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsers(struct soap*, struct _tds__CreateUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsers(struct soap*, struct _tds__CreateUsers*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateUsers(struct soap*, const char *URL, struct _tds__CreateUsers*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateUsers(struct soap*, const char *URL, struct _tds__CreateUsers*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateUsers(struct soap*, const char *URL, struct _tds__CreateUsers*);
    soap_POST_recv__tds__CreateUsers(struct soap*, struct _tds__CreateUsers*);
    @endcode

  - <tds:CreateUsersResponse> @ref _tds__CreateUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsersResponse(struct soap*, struct _tds__CreateUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsersResponse(struct soap*, struct _tds__CreateUsersResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateUsersResponse(struct soap*, const char *URL, struct _tds__CreateUsersResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateUsersResponse(struct soap*, const char *URL, struct _tds__CreateUsersResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateUsersResponse(struct soap*, const char *URL, struct _tds__CreateUsersResponse*);
    soap_POST_recv__tds__CreateUsersResponse(struct soap*, struct _tds__CreateUsersResponse*);
    @endcode

  - <tds:DeleteUsers> @ref _tds__DeleteUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsers(struct soap*, struct _tds__DeleteUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsers(struct soap*, struct _tds__DeleteUsers*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteUsers(struct soap*, const char *URL, struct _tds__DeleteUsers*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteUsers(struct soap*, const char *URL, struct _tds__DeleteUsers*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteUsers(struct soap*, const char *URL, struct _tds__DeleteUsers*);
    soap_POST_recv__tds__DeleteUsers(struct soap*, struct _tds__DeleteUsers*);
    @endcode

  - <tds:DeleteUsersResponse> @ref _tds__DeleteUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsersResponse(struct soap*, struct _tds__DeleteUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsersResponse(struct soap*, struct _tds__DeleteUsersResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteUsersResponse(struct soap*, const char *URL, struct _tds__DeleteUsersResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteUsersResponse(struct soap*, const char *URL, struct _tds__DeleteUsersResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteUsersResponse(struct soap*, const char *URL, struct _tds__DeleteUsersResponse*);
    soap_POST_recv__tds__DeleteUsersResponse(struct soap*, struct _tds__DeleteUsersResponse*);
    @endcode

  - <tds:SetUser> @ref _tds__SetUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUser(struct soap*, struct _tds__SetUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUser(struct soap*, struct _tds__SetUser*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetUser(struct soap*, const char *URL, struct _tds__SetUser*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetUser(struct soap*, const char *URL, struct _tds__SetUser*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetUser(struct soap*, const char *URL, struct _tds__SetUser*);
    soap_POST_recv__tds__SetUser(struct soap*, struct _tds__SetUser*);
    @endcode

  - <tds:SetUserResponse> @ref _tds__SetUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUserResponse(struct soap*, struct _tds__SetUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUserResponse(struct soap*, struct _tds__SetUserResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetUserResponse(struct soap*, const char *URL, struct _tds__SetUserResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetUserResponse(struct soap*, const char *URL, struct _tds__SetUserResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetUserResponse(struct soap*, const char *URL, struct _tds__SetUserResponse*);
    soap_POST_recv__tds__SetUserResponse(struct soap*, struct _tds__SetUserResponse*);
    @endcode

  - <tds:GetWsdlUrl> @ref _tds__GetWsdlUrl
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrl(struct soap*, struct _tds__GetWsdlUrl*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrl(struct soap*, struct _tds__GetWsdlUrl*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetWsdlUrl(struct soap*, const char *URL, struct _tds__GetWsdlUrl*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetWsdlUrl(struct soap*, const char *URL, struct _tds__GetWsdlUrl*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetWsdlUrl(struct soap*, const char *URL, struct _tds__GetWsdlUrl*);
    soap_POST_recv__tds__GetWsdlUrl(struct soap*, struct _tds__GetWsdlUrl*);
    @endcode

  - <tds:GetWsdlUrlResponse> @ref _tds__GetWsdlUrlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrlResponse(struct soap*, struct _tds__GetWsdlUrlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrlResponse(struct soap*, struct _tds__GetWsdlUrlResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetWsdlUrlResponse(struct soap*, const char *URL, struct _tds__GetWsdlUrlResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetWsdlUrlResponse(struct soap*, const char *URL, struct _tds__GetWsdlUrlResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetWsdlUrlResponse(struct soap*, const char *URL, struct _tds__GetWsdlUrlResponse*);
    soap_POST_recv__tds__GetWsdlUrlResponse(struct soap*, struct _tds__GetWsdlUrlResponse*);
    @endcode

  - <tds:GetPasswordComplexityOptions> @ref _tds__GetPasswordComplexityOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPasswordComplexityOptions(struct soap*, struct _tds__GetPasswordComplexityOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPasswordComplexityOptions(struct soap*, struct _tds__GetPasswordComplexityOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPasswordComplexityOptions(struct soap*, const char *URL, struct _tds__GetPasswordComplexityOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPasswordComplexityOptions(struct soap*, const char *URL, struct _tds__GetPasswordComplexityOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPasswordComplexityOptions(struct soap*, const char *URL, struct _tds__GetPasswordComplexityOptions*);
    soap_POST_recv__tds__GetPasswordComplexityOptions(struct soap*, struct _tds__GetPasswordComplexityOptions*);
    @endcode

  - <tds:GetPasswordComplexityOptionsResponse> @ref _tds__GetPasswordComplexityOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPasswordComplexityOptionsResponse(struct soap*, struct _tds__GetPasswordComplexityOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPasswordComplexityOptionsResponse(struct soap*, struct _tds__GetPasswordComplexityOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPasswordComplexityOptionsResponse(struct soap*, const char *URL, struct _tds__GetPasswordComplexityOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPasswordComplexityOptionsResponse(struct soap*, const char *URL, struct _tds__GetPasswordComplexityOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPasswordComplexityOptionsResponse(struct soap*, const char *URL, struct _tds__GetPasswordComplexityOptionsResponse*);
    soap_POST_recv__tds__GetPasswordComplexityOptionsResponse(struct soap*, struct _tds__GetPasswordComplexityOptionsResponse*);
    @endcode

  - <tds:GetPasswordComplexityConfiguration> @ref _tds__GetPasswordComplexityConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPasswordComplexityConfiguration(struct soap*, struct _tds__GetPasswordComplexityConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPasswordComplexityConfiguration(struct soap*, struct _tds__GetPasswordComplexityConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPasswordComplexityConfiguration(struct soap*, const char *URL, struct _tds__GetPasswordComplexityConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPasswordComplexityConfiguration(struct soap*, const char *URL, struct _tds__GetPasswordComplexityConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPasswordComplexityConfiguration(struct soap*, const char *URL, struct _tds__GetPasswordComplexityConfiguration*);
    soap_POST_recv__tds__GetPasswordComplexityConfiguration(struct soap*, struct _tds__GetPasswordComplexityConfiguration*);
    @endcode

  - <tds:GetPasswordComplexityConfigurationResponse> @ref _tds__GetPasswordComplexityConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPasswordComplexityConfigurationResponse(struct soap*, struct _tds__GetPasswordComplexityConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPasswordComplexityConfigurationResponse(struct soap*, struct _tds__GetPasswordComplexityConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPasswordComplexityConfigurationResponse(struct soap*, const char *URL, struct _tds__GetPasswordComplexityConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPasswordComplexityConfigurationResponse(struct soap*, const char *URL, struct _tds__GetPasswordComplexityConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPasswordComplexityConfigurationResponse(struct soap*, const char *URL, struct _tds__GetPasswordComplexityConfigurationResponse*);
    soap_POST_recv__tds__GetPasswordComplexityConfigurationResponse(struct soap*, struct _tds__GetPasswordComplexityConfigurationResponse*);
    @endcode

  - <tds:SetPasswordComplexityConfiguration> @ref _tds__SetPasswordComplexityConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetPasswordComplexityConfiguration(struct soap*, struct _tds__SetPasswordComplexityConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetPasswordComplexityConfiguration(struct soap*, struct _tds__SetPasswordComplexityConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetPasswordComplexityConfiguration(struct soap*, const char *URL, struct _tds__SetPasswordComplexityConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetPasswordComplexityConfiguration(struct soap*, const char *URL, struct _tds__SetPasswordComplexityConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetPasswordComplexityConfiguration(struct soap*, const char *URL, struct _tds__SetPasswordComplexityConfiguration*);
    soap_POST_recv__tds__SetPasswordComplexityConfiguration(struct soap*, struct _tds__SetPasswordComplexityConfiguration*);
    @endcode

  - <tds:SetPasswordComplexityConfigurationResponse> @ref _tds__SetPasswordComplexityConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetPasswordComplexityConfigurationResponse(struct soap*, struct _tds__SetPasswordComplexityConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetPasswordComplexityConfigurationResponse(struct soap*, struct _tds__SetPasswordComplexityConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetPasswordComplexityConfigurationResponse(struct soap*, const char *URL, struct _tds__SetPasswordComplexityConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetPasswordComplexityConfigurationResponse(struct soap*, const char *URL, struct _tds__SetPasswordComplexityConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetPasswordComplexityConfigurationResponse(struct soap*, const char *URL, struct _tds__SetPasswordComplexityConfigurationResponse*);
    soap_POST_recv__tds__SetPasswordComplexityConfigurationResponse(struct soap*, struct _tds__SetPasswordComplexityConfigurationResponse*);
    @endcode

  - <tds:GetPasswordHistoryConfiguration> @ref _tds__GetPasswordHistoryConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPasswordHistoryConfiguration(struct soap*, struct _tds__GetPasswordHistoryConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPasswordHistoryConfiguration(struct soap*, struct _tds__GetPasswordHistoryConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPasswordHistoryConfiguration(struct soap*, const char *URL, struct _tds__GetPasswordHistoryConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPasswordHistoryConfiguration(struct soap*, const char *URL, struct _tds__GetPasswordHistoryConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPasswordHistoryConfiguration(struct soap*, const char *URL, struct _tds__GetPasswordHistoryConfiguration*);
    soap_POST_recv__tds__GetPasswordHistoryConfiguration(struct soap*, struct _tds__GetPasswordHistoryConfiguration*);
    @endcode

  - <tds:GetPasswordHistoryConfigurationResponse> @ref _tds__GetPasswordHistoryConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPasswordHistoryConfigurationResponse(struct soap*, struct _tds__GetPasswordHistoryConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPasswordHistoryConfigurationResponse(struct soap*, struct _tds__GetPasswordHistoryConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPasswordHistoryConfigurationResponse(struct soap*, const char *URL, struct _tds__GetPasswordHistoryConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPasswordHistoryConfigurationResponse(struct soap*, const char *URL, struct _tds__GetPasswordHistoryConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPasswordHistoryConfigurationResponse(struct soap*, const char *URL, struct _tds__GetPasswordHistoryConfigurationResponse*);
    soap_POST_recv__tds__GetPasswordHistoryConfigurationResponse(struct soap*, struct _tds__GetPasswordHistoryConfigurationResponse*);
    @endcode

  - <tds:SetPasswordHistoryConfiguration> @ref _tds__SetPasswordHistoryConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetPasswordHistoryConfiguration(struct soap*, struct _tds__SetPasswordHistoryConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetPasswordHistoryConfiguration(struct soap*, struct _tds__SetPasswordHistoryConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetPasswordHistoryConfiguration(struct soap*, const char *URL, struct _tds__SetPasswordHistoryConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetPasswordHistoryConfiguration(struct soap*, const char *URL, struct _tds__SetPasswordHistoryConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetPasswordHistoryConfiguration(struct soap*, const char *URL, struct _tds__SetPasswordHistoryConfiguration*);
    soap_POST_recv__tds__SetPasswordHistoryConfiguration(struct soap*, struct _tds__SetPasswordHistoryConfiguration*);
    @endcode

  - <tds:SetPasswordHistoryConfigurationResponse> @ref _tds__SetPasswordHistoryConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetPasswordHistoryConfigurationResponse(struct soap*, struct _tds__SetPasswordHistoryConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetPasswordHistoryConfigurationResponse(struct soap*, struct _tds__SetPasswordHistoryConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetPasswordHistoryConfigurationResponse(struct soap*, const char *URL, struct _tds__SetPasswordHistoryConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetPasswordHistoryConfigurationResponse(struct soap*, const char *URL, struct _tds__SetPasswordHistoryConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetPasswordHistoryConfigurationResponse(struct soap*, const char *URL, struct _tds__SetPasswordHistoryConfigurationResponse*);
    soap_POST_recv__tds__SetPasswordHistoryConfigurationResponse(struct soap*, struct _tds__SetPasswordHistoryConfigurationResponse*);
    @endcode

  - <tds:GetAuthFailureWarningOptions> @ref _tds__GetAuthFailureWarningOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAuthFailureWarningOptions(struct soap*, struct _tds__GetAuthFailureWarningOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAuthFailureWarningOptions(struct soap*, struct _tds__GetAuthFailureWarningOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAuthFailureWarningOptions(struct soap*, const char *URL, struct _tds__GetAuthFailureWarningOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAuthFailureWarningOptions(struct soap*, const char *URL, struct _tds__GetAuthFailureWarningOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAuthFailureWarningOptions(struct soap*, const char *URL, struct _tds__GetAuthFailureWarningOptions*);
    soap_POST_recv__tds__GetAuthFailureWarningOptions(struct soap*, struct _tds__GetAuthFailureWarningOptions*);
    @endcode

  - <tds:GetAuthFailureWarningOptionsResponse> @ref _tds__GetAuthFailureWarningOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAuthFailureWarningOptionsResponse(struct soap*, struct _tds__GetAuthFailureWarningOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAuthFailureWarningOptionsResponse(struct soap*, struct _tds__GetAuthFailureWarningOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAuthFailureWarningOptionsResponse(struct soap*, const char *URL, struct _tds__GetAuthFailureWarningOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAuthFailureWarningOptionsResponse(struct soap*, const char *URL, struct _tds__GetAuthFailureWarningOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAuthFailureWarningOptionsResponse(struct soap*, const char *URL, struct _tds__GetAuthFailureWarningOptionsResponse*);
    soap_POST_recv__tds__GetAuthFailureWarningOptionsResponse(struct soap*, struct _tds__GetAuthFailureWarningOptionsResponse*);
    @endcode

  - <tds:GetAuthFailureWarningConfiguration> @ref _tds__GetAuthFailureWarningConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAuthFailureWarningConfiguration(struct soap*, struct _tds__GetAuthFailureWarningConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAuthFailureWarningConfiguration(struct soap*, struct _tds__GetAuthFailureWarningConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAuthFailureWarningConfiguration(struct soap*, const char *URL, struct _tds__GetAuthFailureWarningConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAuthFailureWarningConfiguration(struct soap*, const char *URL, struct _tds__GetAuthFailureWarningConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAuthFailureWarningConfiguration(struct soap*, const char *URL, struct _tds__GetAuthFailureWarningConfiguration*);
    soap_POST_recv__tds__GetAuthFailureWarningConfiguration(struct soap*, struct _tds__GetAuthFailureWarningConfiguration*);
    @endcode

  - <tds:GetAuthFailureWarningConfigurationResponse> @ref _tds__GetAuthFailureWarningConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, struct _tds__GetAuthFailureWarningConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, struct _tds__GetAuthFailureWarningConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, const char *URL, struct _tds__GetAuthFailureWarningConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, const char *URL, struct _tds__GetAuthFailureWarningConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, const char *URL, struct _tds__GetAuthFailureWarningConfigurationResponse*);
    soap_POST_recv__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, struct _tds__GetAuthFailureWarningConfigurationResponse*);
    @endcode

  - <tds:SetAuthFailureWarningConfiguration> @ref _tds__SetAuthFailureWarningConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAuthFailureWarningConfiguration(struct soap*, struct _tds__SetAuthFailureWarningConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAuthFailureWarningConfiguration(struct soap*, struct _tds__SetAuthFailureWarningConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetAuthFailureWarningConfiguration(struct soap*, const char *URL, struct _tds__SetAuthFailureWarningConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetAuthFailureWarningConfiguration(struct soap*, const char *URL, struct _tds__SetAuthFailureWarningConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetAuthFailureWarningConfiguration(struct soap*, const char *URL, struct _tds__SetAuthFailureWarningConfiguration*);
    soap_POST_recv__tds__SetAuthFailureWarningConfiguration(struct soap*, struct _tds__SetAuthFailureWarningConfiguration*);
    @endcode

  - <tds:SetAuthFailureWarningConfigurationResponse> @ref _tds__SetAuthFailureWarningConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, struct _tds__SetAuthFailureWarningConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, struct _tds__SetAuthFailureWarningConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, const char *URL, struct _tds__SetAuthFailureWarningConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, const char *URL, struct _tds__SetAuthFailureWarningConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, const char *URL, struct _tds__SetAuthFailureWarningConfigurationResponse*);
    soap_POST_recv__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, struct _tds__SetAuthFailureWarningConfigurationResponse*);
    @endcode

  - <tds:GetCapabilities> @ref _tds__GetCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCapabilities(struct soap*, const char *URL, struct _tds__GetCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCapabilities(struct soap*, const char *URL, struct _tds__GetCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCapabilities(struct soap*, const char *URL, struct _tds__GetCapabilities*);
    soap_POST_recv__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities*);
    @endcode

  - <tds:GetCapabilitiesResponse> @ref _tds__GetCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetCapabilitiesResponse*);
    soap_POST_recv__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse*);
    @endcode

  - <tds:GetHostname> @ref _tds__GetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostname(struct soap*, struct _tds__GetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostname(struct soap*, struct _tds__GetHostname*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetHostname(struct soap*, const char *URL, struct _tds__GetHostname*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetHostname(struct soap*, const char *URL, struct _tds__GetHostname*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetHostname(struct soap*, const char *URL, struct _tds__GetHostname*);
    soap_POST_recv__tds__GetHostname(struct soap*, struct _tds__GetHostname*);
    @endcode

  - <tds:GetHostnameResponse> @ref _tds__GetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostnameResponse(struct soap*, struct _tds__GetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostnameResponse(struct soap*, struct _tds__GetHostnameResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetHostnameResponse(struct soap*, const char *URL, struct _tds__GetHostnameResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetHostnameResponse(struct soap*, const char *URL, struct _tds__GetHostnameResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetHostnameResponse(struct soap*, const char *URL, struct _tds__GetHostnameResponse*);
    soap_POST_recv__tds__GetHostnameResponse(struct soap*, struct _tds__GetHostnameResponse*);
    @endcode

  - <tds:SetHostname> @ref _tds__SetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostname(struct soap*, struct _tds__SetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostname(struct soap*, struct _tds__SetHostname*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostname(struct soap*, const char *URL, struct _tds__SetHostname*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostname(struct soap*, const char *URL, struct _tds__SetHostname*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostname(struct soap*, const char *URL, struct _tds__SetHostname*);
    soap_POST_recv__tds__SetHostname(struct soap*, struct _tds__SetHostname*);
    @endcode

  - <tds:SetHostnameResponse> @ref _tds__SetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameResponse(struct soap*, struct _tds__SetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameResponse(struct soap*, struct _tds__SetHostnameResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostnameResponse(struct soap*, const char *URL, struct _tds__SetHostnameResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostnameResponse(struct soap*, const char *URL, struct _tds__SetHostnameResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostnameResponse(struct soap*, const char *URL, struct _tds__SetHostnameResponse*);
    soap_POST_recv__tds__SetHostnameResponse(struct soap*, struct _tds__SetHostnameResponse*);
    @endcode

  - <tds:SetHostnameFromDHCP> @ref _tds__SetHostnameFromDHCP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCP(struct soap*, struct _tds__SetHostnameFromDHCP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCP(struct soap*, struct _tds__SetHostnameFromDHCP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostnameFromDHCP(struct soap*, const char *URL, struct _tds__SetHostnameFromDHCP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostnameFromDHCP(struct soap*, const char *URL, struct _tds__SetHostnameFromDHCP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostnameFromDHCP(struct soap*, const char *URL, struct _tds__SetHostnameFromDHCP*);
    soap_POST_recv__tds__SetHostnameFromDHCP(struct soap*, struct _tds__SetHostnameFromDHCP*);
    @endcode

  - <tds:SetHostnameFromDHCPResponse> @ref _tds__SetHostnameFromDHCPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCPResponse(struct soap*, struct _tds__SetHostnameFromDHCPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCPResponse(struct soap*, struct _tds__SetHostnameFromDHCPResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostnameFromDHCPResponse(struct soap*, const char *URL, struct _tds__SetHostnameFromDHCPResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostnameFromDHCPResponse(struct soap*, const char *URL, struct _tds__SetHostnameFromDHCPResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostnameFromDHCPResponse(struct soap*, const char *URL, struct _tds__SetHostnameFromDHCPResponse*);
    soap_POST_recv__tds__SetHostnameFromDHCPResponse(struct soap*, struct _tds__SetHostnameFromDHCPResponse*);
    @endcode

  - <tds:GetDNS> @ref _tds__GetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNS(struct soap*, struct _tds__GetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNS(struct soap*, struct _tds__GetDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDNS(struct soap*, const char *URL, struct _tds__GetDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDNS(struct soap*, const char *URL, struct _tds__GetDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDNS(struct soap*, const char *URL, struct _tds__GetDNS*);
    soap_POST_recv__tds__GetDNS(struct soap*, struct _tds__GetDNS*);
    @endcode

  - <tds:GetDNSResponse> @ref _tds__GetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNSResponse(struct soap*, struct _tds__GetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNSResponse(struct soap*, struct _tds__GetDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDNSResponse(struct soap*, const char *URL, struct _tds__GetDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDNSResponse(struct soap*, const char *URL, struct _tds__GetDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDNSResponse(struct soap*, const char *URL, struct _tds__GetDNSResponse*);
    soap_POST_recv__tds__GetDNSResponse(struct soap*, struct _tds__GetDNSResponse*);
    @endcode

  - <tds:SetDNS> @ref _tds__SetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNS(struct soap*, struct _tds__SetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNS(struct soap*, struct _tds__SetDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDNS(struct soap*, const char *URL, struct _tds__SetDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDNS(struct soap*, const char *URL, struct _tds__SetDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDNS(struct soap*, const char *URL, struct _tds__SetDNS*);
    soap_POST_recv__tds__SetDNS(struct soap*, struct _tds__SetDNS*);
    @endcode

  - <tds:SetDNSResponse> @ref _tds__SetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNSResponse(struct soap*, struct _tds__SetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNSResponse(struct soap*, struct _tds__SetDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDNSResponse(struct soap*, const char *URL, struct _tds__SetDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDNSResponse(struct soap*, const char *URL, struct _tds__SetDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDNSResponse(struct soap*, const char *URL, struct _tds__SetDNSResponse*);
    soap_POST_recv__tds__SetDNSResponse(struct soap*, struct _tds__SetDNSResponse*);
    @endcode

  - <tds:GetNTP> @ref _tds__GetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTP(struct soap*, struct _tds__GetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTP(struct soap*, struct _tds__GetNTP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNTP(struct soap*, const char *URL, struct _tds__GetNTP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNTP(struct soap*, const char *URL, struct _tds__GetNTP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNTP(struct soap*, const char *URL, struct _tds__GetNTP*);
    soap_POST_recv__tds__GetNTP(struct soap*, struct _tds__GetNTP*);
    @endcode

  - <tds:GetNTPResponse> @ref _tds__GetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTPResponse(struct soap*, struct _tds__GetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTPResponse(struct soap*, struct _tds__GetNTPResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNTPResponse(struct soap*, const char *URL, struct _tds__GetNTPResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNTPResponse(struct soap*, const char *URL, struct _tds__GetNTPResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNTPResponse(struct soap*, const char *URL, struct _tds__GetNTPResponse*);
    soap_POST_recv__tds__GetNTPResponse(struct soap*, struct _tds__GetNTPResponse*);
    @endcode

  - <tds:SetNTP> @ref _tds__SetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTP(struct soap*, struct _tds__SetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTP(struct soap*, struct _tds__SetNTP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNTP(struct soap*, const char *URL, struct _tds__SetNTP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNTP(struct soap*, const char *URL, struct _tds__SetNTP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNTP(struct soap*, const char *URL, struct _tds__SetNTP*);
    soap_POST_recv__tds__SetNTP(struct soap*, struct _tds__SetNTP*);
    @endcode

  - <tds:SetNTPResponse> @ref _tds__SetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTPResponse(struct soap*, struct _tds__SetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTPResponse(struct soap*, struct _tds__SetNTPResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNTPResponse(struct soap*, const char *URL, struct _tds__SetNTPResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNTPResponse(struct soap*, const char *URL, struct _tds__SetNTPResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNTPResponse(struct soap*, const char *URL, struct _tds__SetNTPResponse*);
    soap_POST_recv__tds__SetNTPResponse(struct soap*, struct _tds__SetNTPResponse*);
    @endcode

  - <tds:GetDynamicDNS> @ref _tds__GetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNS(struct soap*, struct _tds__GetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNS(struct soap*, struct _tds__GetDynamicDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDynamicDNS(struct soap*, const char *URL, struct _tds__GetDynamicDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDynamicDNS(struct soap*, const char *URL, struct _tds__GetDynamicDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDynamicDNS(struct soap*, const char *URL, struct _tds__GetDynamicDNS*);
    soap_POST_recv__tds__GetDynamicDNS(struct soap*, struct _tds__GetDynamicDNS*);
    @endcode

  - <tds:GetDynamicDNSResponse> @ref _tds__GetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNSResponse(struct soap*, struct _tds__GetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNSResponse(struct soap*, struct _tds__GetDynamicDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDynamicDNSResponse(struct soap*, const char *URL, struct _tds__GetDynamicDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDynamicDNSResponse(struct soap*, const char *URL, struct _tds__GetDynamicDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDynamicDNSResponse(struct soap*, const char *URL, struct _tds__GetDynamicDNSResponse*);
    soap_POST_recv__tds__GetDynamicDNSResponse(struct soap*, struct _tds__GetDynamicDNSResponse*);
    @endcode

  - <tds:SetDynamicDNS> @ref _tds__SetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNS(struct soap*, struct _tds__SetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNS(struct soap*, struct _tds__SetDynamicDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDynamicDNS(struct soap*, const char *URL, struct _tds__SetDynamicDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDynamicDNS(struct soap*, const char *URL, struct _tds__SetDynamicDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDynamicDNS(struct soap*, const char *URL, struct _tds__SetDynamicDNS*);
    soap_POST_recv__tds__SetDynamicDNS(struct soap*, struct _tds__SetDynamicDNS*);
    @endcode

  - <tds:SetDynamicDNSResponse> @ref _tds__SetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNSResponse(struct soap*, struct _tds__SetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNSResponse(struct soap*, struct _tds__SetDynamicDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDynamicDNSResponse(struct soap*, const char *URL, struct _tds__SetDynamicDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDynamicDNSResponse(struct soap*, const char *URL, struct _tds__SetDynamicDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDynamicDNSResponse(struct soap*, const char *URL, struct _tds__SetDynamicDNSResponse*);
    soap_POST_recv__tds__SetDynamicDNSResponse(struct soap*, struct _tds__SetDynamicDNSResponse*);
    @endcode

  - <tds:GetNetworkInterfaces> @ref _tds__GetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfaces(struct soap*, struct _tds__GetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfaces(struct soap*, struct _tds__GetNetworkInterfaces*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkInterfaces(struct soap*, const char *URL, struct _tds__GetNetworkInterfaces*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkInterfaces(struct soap*, const char *URL, struct _tds__GetNetworkInterfaces*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkInterfaces(struct soap*, const char *URL, struct _tds__GetNetworkInterfaces*);
    soap_POST_recv__tds__GetNetworkInterfaces(struct soap*, struct _tds__GetNetworkInterfaces*);
    @endcode

  - <tds:GetNetworkInterfacesResponse> @ref _tds__GetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfacesResponse(struct soap*, struct _tds__GetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfacesResponse(struct soap*, struct _tds__GetNetworkInterfacesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkInterfacesResponse(struct soap*, const char *URL, struct _tds__GetNetworkInterfacesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkInterfacesResponse(struct soap*, const char *URL, struct _tds__GetNetworkInterfacesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkInterfacesResponse(struct soap*, const char *URL, struct _tds__GetNetworkInterfacesResponse*);
    soap_POST_recv__tds__GetNetworkInterfacesResponse(struct soap*, struct _tds__GetNetworkInterfacesResponse*);
    @endcode

  - <tds:SetNetworkInterfaces> @ref _tds__SetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfaces(struct soap*, struct _tds__SetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfaces(struct soap*, struct _tds__SetNetworkInterfaces*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkInterfaces(struct soap*, const char *URL, struct _tds__SetNetworkInterfaces*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkInterfaces(struct soap*, const char *URL, struct _tds__SetNetworkInterfaces*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkInterfaces(struct soap*, const char *URL, struct _tds__SetNetworkInterfaces*);
    soap_POST_recv__tds__SetNetworkInterfaces(struct soap*, struct _tds__SetNetworkInterfaces*);
    @endcode

  - <tds:SetNetworkInterfacesResponse> @ref _tds__SetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfacesResponse(struct soap*, struct _tds__SetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfacesResponse(struct soap*, struct _tds__SetNetworkInterfacesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkInterfacesResponse(struct soap*, const char *URL, struct _tds__SetNetworkInterfacesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkInterfacesResponse(struct soap*, const char *URL, struct _tds__SetNetworkInterfacesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkInterfacesResponse(struct soap*, const char *URL, struct _tds__SetNetworkInterfacesResponse*);
    soap_POST_recv__tds__SetNetworkInterfacesResponse(struct soap*, struct _tds__SetNetworkInterfacesResponse*);
    @endcode

  - <tds:GetNetworkProtocols> @ref _tds__GetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocols(struct soap*, struct _tds__GetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocols(struct soap*, struct _tds__GetNetworkProtocols*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkProtocols(struct soap*, const char *URL, struct _tds__GetNetworkProtocols*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkProtocols(struct soap*, const char *URL, struct _tds__GetNetworkProtocols*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkProtocols(struct soap*, const char *URL, struct _tds__GetNetworkProtocols*);
    soap_POST_recv__tds__GetNetworkProtocols(struct soap*, struct _tds__GetNetworkProtocols*);
    @endcode

  - <tds:GetNetworkProtocolsResponse> @ref _tds__GetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocolsResponse(struct soap*, struct _tds__GetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocolsResponse(struct soap*, struct _tds__GetNetworkProtocolsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkProtocolsResponse(struct soap*, const char *URL, struct _tds__GetNetworkProtocolsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkProtocolsResponse(struct soap*, const char *URL, struct _tds__GetNetworkProtocolsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkProtocolsResponse(struct soap*, const char *URL, struct _tds__GetNetworkProtocolsResponse*);
    soap_POST_recv__tds__GetNetworkProtocolsResponse(struct soap*, struct _tds__GetNetworkProtocolsResponse*);
    @endcode

  - <tds:SetNetworkProtocols> @ref _tds__SetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocols(struct soap*, struct _tds__SetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocols(struct soap*, struct _tds__SetNetworkProtocols*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkProtocols(struct soap*, const char *URL, struct _tds__SetNetworkProtocols*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkProtocols(struct soap*, const char *URL, struct _tds__SetNetworkProtocols*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkProtocols(struct soap*, const char *URL, struct _tds__SetNetworkProtocols*);
    soap_POST_recv__tds__SetNetworkProtocols(struct soap*, struct _tds__SetNetworkProtocols*);
    @endcode

  - <tds:SetNetworkProtocolsResponse> @ref _tds__SetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocolsResponse(struct soap*, struct _tds__SetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocolsResponse(struct soap*, struct _tds__SetNetworkProtocolsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkProtocolsResponse(struct soap*, const char *URL, struct _tds__SetNetworkProtocolsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkProtocolsResponse(struct soap*, const char *URL, struct _tds__SetNetworkProtocolsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkProtocolsResponse(struct soap*, const char *URL, struct _tds__SetNetworkProtocolsResponse*);
    soap_POST_recv__tds__SetNetworkProtocolsResponse(struct soap*, struct _tds__SetNetworkProtocolsResponse*);
    @endcode

  - <tds:GetNetworkDefaultGateway> @ref _tds__GetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGateway(struct soap*, struct _tds__GetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGateway(struct soap*, struct _tds__GetNetworkDefaultGateway*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkDefaultGateway(struct soap*, const char *URL, struct _tds__GetNetworkDefaultGateway*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkDefaultGateway(struct soap*, const char *URL, struct _tds__GetNetworkDefaultGateway*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkDefaultGateway(struct soap*, const char *URL, struct _tds__GetNetworkDefaultGateway*);
    soap_POST_recv__tds__GetNetworkDefaultGateway(struct soap*, struct _tds__GetNetworkDefaultGateway*);
    @endcode

  - <tds:GetNetworkDefaultGatewayResponse> @ref _tds__GetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGatewayResponse(struct soap*, struct _tds__GetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGatewayResponse(struct soap*, struct _tds__GetNetworkDefaultGatewayResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char *URL, struct _tds__GetNetworkDefaultGatewayResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char *URL, struct _tds__GetNetworkDefaultGatewayResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char *URL, struct _tds__GetNetworkDefaultGatewayResponse*);
    soap_POST_recv__tds__GetNetworkDefaultGatewayResponse(struct soap*, struct _tds__GetNetworkDefaultGatewayResponse*);
    @endcode

  - <tds:SetNetworkDefaultGateway> @ref _tds__SetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGateway(struct soap*, struct _tds__SetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGateway(struct soap*, struct _tds__SetNetworkDefaultGateway*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkDefaultGateway(struct soap*, const char *URL, struct _tds__SetNetworkDefaultGateway*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkDefaultGateway(struct soap*, const char *URL, struct _tds__SetNetworkDefaultGateway*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkDefaultGateway(struct soap*, const char *URL, struct _tds__SetNetworkDefaultGateway*);
    soap_POST_recv__tds__SetNetworkDefaultGateway(struct soap*, struct _tds__SetNetworkDefaultGateway*);
    @endcode

  - <tds:SetNetworkDefaultGatewayResponse> @ref _tds__SetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGatewayResponse(struct soap*, struct _tds__SetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGatewayResponse(struct soap*, struct _tds__SetNetworkDefaultGatewayResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char *URL, struct _tds__SetNetworkDefaultGatewayResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char *URL, struct _tds__SetNetworkDefaultGatewayResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char *URL, struct _tds__SetNetworkDefaultGatewayResponse*);
    soap_POST_recv__tds__SetNetworkDefaultGatewayResponse(struct soap*, struct _tds__SetNetworkDefaultGatewayResponse*);
    @endcode

  - <tds:GetZeroConfiguration> @ref _tds__GetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfiguration(struct soap*, struct _tds__GetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfiguration(struct soap*, struct _tds__GetZeroConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetZeroConfiguration(struct soap*, const char *URL, struct _tds__GetZeroConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetZeroConfiguration(struct soap*, const char *URL, struct _tds__GetZeroConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetZeroConfiguration(struct soap*, const char *URL, struct _tds__GetZeroConfiguration*);
    soap_POST_recv__tds__GetZeroConfiguration(struct soap*, struct _tds__GetZeroConfiguration*);
    @endcode

  - <tds:GetZeroConfigurationResponse> @ref _tds__GetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfigurationResponse(struct soap*, struct _tds__GetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfigurationResponse(struct soap*, struct _tds__GetZeroConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetZeroConfigurationResponse(struct soap*, const char *URL, struct _tds__GetZeroConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetZeroConfigurationResponse(struct soap*, const char *URL, struct _tds__GetZeroConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetZeroConfigurationResponse(struct soap*, const char *URL, struct _tds__GetZeroConfigurationResponse*);
    soap_POST_recv__tds__GetZeroConfigurationResponse(struct soap*, struct _tds__GetZeroConfigurationResponse*);
    @endcode

  - <tds:SetZeroConfiguration> @ref _tds__SetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfiguration(struct soap*, struct _tds__SetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfiguration(struct soap*, struct _tds__SetZeroConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetZeroConfiguration(struct soap*, const char *URL, struct _tds__SetZeroConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetZeroConfiguration(struct soap*, const char *URL, struct _tds__SetZeroConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetZeroConfiguration(struct soap*, const char *URL, struct _tds__SetZeroConfiguration*);
    soap_POST_recv__tds__SetZeroConfiguration(struct soap*, struct _tds__SetZeroConfiguration*);
    @endcode

  - <tds:SetZeroConfigurationResponse> @ref _tds__SetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfigurationResponse(struct soap*, struct _tds__SetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfigurationResponse(struct soap*, struct _tds__SetZeroConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetZeroConfigurationResponse(struct soap*, const char *URL, struct _tds__SetZeroConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetZeroConfigurationResponse(struct soap*, const char *URL, struct _tds__SetZeroConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetZeroConfigurationResponse(struct soap*, const char *URL, struct _tds__SetZeroConfigurationResponse*);
    soap_POST_recv__tds__SetZeroConfigurationResponse(struct soap*, struct _tds__SetZeroConfigurationResponse*);
    @endcode

  - <tds:GetIPAddressFilter> @ref _tds__GetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilter(struct soap*, struct _tds__GetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilter(struct soap*, struct _tds__GetIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetIPAddressFilter(struct soap*, const char *URL, struct _tds__GetIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetIPAddressFilter(struct soap*, const char *URL, struct _tds__GetIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetIPAddressFilter(struct soap*, const char *URL, struct _tds__GetIPAddressFilter*);
    soap_POST_recv__tds__GetIPAddressFilter(struct soap*, struct _tds__GetIPAddressFilter*);
    @endcode

  - <tds:GetIPAddressFilterResponse> @ref _tds__GetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilterResponse(struct soap*, struct _tds__GetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilterResponse(struct soap*, struct _tds__GetIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__GetIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__GetIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__GetIPAddressFilterResponse*);
    soap_POST_recv__tds__GetIPAddressFilterResponse(struct soap*, struct _tds__GetIPAddressFilterResponse*);
    @endcode

  - <tds:SetIPAddressFilter> @ref _tds__SetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilter(struct soap*, struct _tds__SetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilter(struct soap*, struct _tds__SetIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetIPAddressFilter(struct soap*, const char *URL, struct _tds__SetIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetIPAddressFilter(struct soap*, const char *URL, struct _tds__SetIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetIPAddressFilter(struct soap*, const char *URL, struct _tds__SetIPAddressFilter*);
    soap_POST_recv__tds__SetIPAddressFilter(struct soap*, struct _tds__SetIPAddressFilter*);
    @endcode

  - <tds:SetIPAddressFilterResponse> @ref _tds__SetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilterResponse(struct soap*, struct _tds__SetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilterResponse(struct soap*, struct _tds__SetIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__SetIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__SetIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__SetIPAddressFilterResponse*);
    soap_POST_recv__tds__SetIPAddressFilterResponse(struct soap*, struct _tds__SetIPAddressFilterResponse*);
    @endcode

  - <tds:AddIPAddressFilter> @ref _tds__AddIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilter(struct soap*, struct _tds__AddIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilter(struct soap*, struct _tds__AddIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddIPAddressFilter(struct soap*, const char *URL, struct _tds__AddIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddIPAddressFilter(struct soap*, const char *URL, struct _tds__AddIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddIPAddressFilter(struct soap*, const char *URL, struct _tds__AddIPAddressFilter*);
    soap_POST_recv__tds__AddIPAddressFilter(struct soap*, struct _tds__AddIPAddressFilter*);
    @endcode

  - <tds:AddIPAddressFilterResponse> @ref _tds__AddIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilterResponse(struct soap*, struct _tds__AddIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilterResponse(struct soap*, struct _tds__AddIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__AddIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__AddIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__AddIPAddressFilterResponse*);
    soap_POST_recv__tds__AddIPAddressFilterResponse(struct soap*, struct _tds__AddIPAddressFilterResponse*);
    @endcode

  - <tds:RemoveIPAddressFilter> @ref _tds__RemoveIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilter(struct soap*, struct _tds__RemoveIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilter(struct soap*, struct _tds__RemoveIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveIPAddressFilter(struct soap*, const char *URL, struct _tds__RemoveIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveIPAddressFilter(struct soap*, const char *URL, struct _tds__RemoveIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveIPAddressFilter(struct soap*, const char *URL, struct _tds__RemoveIPAddressFilter*);
    soap_POST_recv__tds__RemoveIPAddressFilter(struct soap*, struct _tds__RemoveIPAddressFilter*);
    @endcode

  - <tds:RemoveIPAddressFilterResponse> @ref _tds__RemoveIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilterResponse(struct soap*, struct _tds__RemoveIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilterResponse(struct soap*, struct _tds__RemoveIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__RemoveIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__RemoveIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveIPAddressFilterResponse(struct soap*, const char *URL, struct _tds__RemoveIPAddressFilterResponse*);
    soap_POST_recv__tds__RemoveIPAddressFilterResponse(struct soap*, struct _tds__RemoveIPAddressFilterResponse*);
    @endcode

  - <tds:GetAccessPolicy> @ref _tds__GetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicy(struct soap*, struct _tds__GetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicy(struct soap*, struct _tds__GetAccessPolicy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAccessPolicy(struct soap*, const char *URL, struct _tds__GetAccessPolicy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAccessPolicy(struct soap*, const char *URL, struct _tds__GetAccessPolicy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAccessPolicy(struct soap*, const char *URL, struct _tds__GetAccessPolicy*);
    soap_POST_recv__tds__GetAccessPolicy(struct soap*, struct _tds__GetAccessPolicy*);
    @endcode

  - <tds:GetAccessPolicyResponse> @ref _tds__GetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicyResponse(struct soap*, struct _tds__GetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicyResponse(struct soap*, struct _tds__GetAccessPolicyResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAccessPolicyResponse(struct soap*, const char *URL, struct _tds__GetAccessPolicyResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAccessPolicyResponse(struct soap*, const char *URL, struct _tds__GetAccessPolicyResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAccessPolicyResponse(struct soap*, const char *URL, struct _tds__GetAccessPolicyResponse*);
    soap_POST_recv__tds__GetAccessPolicyResponse(struct soap*, struct _tds__GetAccessPolicyResponse*);
    @endcode

  - <tds:SetAccessPolicy> @ref _tds__SetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicy(struct soap*, struct _tds__SetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicy(struct soap*, struct _tds__SetAccessPolicy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetAccessPolicy(struct soap*, const char *URL, struct _tds__SetAccessPolicy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetAccessPolicy(struct soap*, const char *URL, struct _tds__SetAccessPolicy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetAccessPolicy(struct soap*, const char *URL, struct _tds__SetAccessPolicy*);
    soap_POST_recv__tds__SetAccessPolicy(struct soap*, struct _tds__SetAccessPolicy*);
    @endcode

  - <tds:SetAccessPolicyResponse> @ref _tds__SetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicyResponse(struct soap*, struct _tds__SetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicyResponse(struct soap*, struct _tds__SetAccessPolicyResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetAccessPolicyResponse(struct soap*, const char *URL, struct _tds__SetAccessPolicyResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetAccessPolicyResponse(struct soap*, const char *URL, struct _tds__SetAccessPolicyResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetAccessPolicyResponse(struct soap*, const char *URL, struct _tds__SetAccessPolicyResponse*);
    soap_POST_recv__tds__SetAccessPolicyResponse(struct soap*, struct _tds__SetAccessPolicyResponse*);
    @endcode

  - <tds:CreateCertificate> @ref _tds__CreateCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificate(struct soap*, struct _tds__CreateCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificate(struct soap*, struct _tds__CreateCertificate*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateCertificate(struct soap*, const char *URL, struct _tds__CreateCertificate*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateCertificate(struct soap*, const char *URL, struct _tds__CreateCertificate*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateCertificate(struct soap*, const char *URL, struct _tds__CreateCertificate*);
    soap_POST_recv__tds__CreateCertificate(struct soap*, struct _tds__CreateCertificate*);
    @endcode

  - <tds:CreateCertificateResponse> @ref _tds__CreateCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificateResponse(struct soap*, struct _tds__CreateCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificateResponse(struct soap*, struct _tds__CreateCertificateResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateCertificateResponse(struct soap*, const char *URL, struct _tds__CreateCertificateResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateCertificateResponse(struct soap*, const char *URL, struct _tds__CreateCertificateResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateCertificateResponse(struct soap*, const char *URL, struct _tds__CreateCertificateResponse*);
    soap_POST_recv__tds__CreateCertificateResponse(struct soap*, struct _tds__CreateCertificateResponse*);
    @endcode

  - <tds:GetCertificates> @ref _tds__GetCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificates(struct soap*, struct _tds__GetCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificates(struct soap*, struct _tds__GetCertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificates(struct soap*, const char *URL, struct _tds__GetCertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificates(struct soap*, const char *URL, struct _tds__GetCertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificates(struct soap*, const char *URL, struct _tds__GetCertificates*);
    soap_POST_recv__tds__GetCertificates(struct soap*, struct _tds__GetCertificates*);
    @endcode

  - <tds:GetCertificatesResponse> @ref _tds__GetCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesResponse(struct soap*, struct _tds__GetCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesResponse(struct soap*, struct _tds__GetCertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificatesResponse(struct soap*, const char *URL, struct _tds__GetCertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificatesResponse(struct soap*, const char *URL, struct _tds__GetCertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificatesResponse(struct soap*, const char *URL, struct _tds__GetCertificatesResponse*);
    soap_POST_recv__tds__GetCertificatesResponse(struct soap*, struct _tds__GetCertificatesResponse*);
    @endcode

  - <tds:GetCertificatesStatus> @ref _tds__GetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatus(struct soap*, struct _tds__GetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatus(struct soap*, struct _tds__GetCertificatesStatus*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificatesStatus(struct soap*, const char *URL, struct _tds__GetCertificatesStatus*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificatesStatus(struct soap*, const char *URL, struct _tds__GetCertificatesStatus*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificatesStatus(struct soap*, const char *URL, struct _tds__GetCertificatesStatus*);
    soap_POST_recv__tds__GetCertificatesStatus(struct soap*, struct _tds__GetCertificatesStatus*);
    @endcode

  - <tds:GetCertificatesStatusResponse> @ref _tds__GetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatusResponse(struct soap*, struct _tds__GetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatusResponse(struct soap*, struct _tds__GetCertificatesStatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificatesStatusResponse(struct soap*, const char *URL, struct _tds__GetCertificatesStatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificatesStatusResponse(struct soap*, const char *URL, struct _tds__GetCertificatesStatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificatesStatusResponse(struct soap*, const char *URL, struct _tds__GetCertificatesStatusResponse*);
    soap_POST_recv__tds__GetCertificatesStatusResponse(struct soap*, struct _tds__GetCertificatesStatusResponse*);
    @endcode

  - <tds:SetCertificatesStatus> @ref _tds__SetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatus(struct soap*, struct _tds__SetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatus(struct soap*, struct _tds__SetCertificatesStatus*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetCertificatesStatus(struct soap*, const char *URL, struct _tds__SetCertificatesStatus*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetCertificatesStatus(struct soap*, const char *URL, struct _tds__SetCertificatesStatus*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetCertificatesStatus(struct soap*, const char *URL, struct _tds__SetCertificatesStatus*);
    soap_POST_recv__tds__SetCertificatesStatus(struct soap*, struct _tds__SetCertificatesStatus*);
    @endcode

  - <tds:SetCertificatesStatusResponse> @ref _tds__SetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatusResponse(struct soap*, struct _tds__SetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatusResponse(struct soap*, struct _tds__SetCertificatesStatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetCertificatesStatusResponse(struct soap*, const char *URL, struct _tds__SetCertificatesStatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetCertificatesStatusResponse(struct soap*, const char *URL, struct _tds__SetCertificatesStatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetCertificatesStatusResponse(struct soap*, const char *URL, struct _tds__SetCertificatesStatusResponse*);
    soap_POST_recv__tds__SetCertificatesStatusResponse(struct soap*, struct _tds__SetCertificatesStatusResponse*);
    @endcode

  - <tds:DeleteCertificates> @ref _tds__DeleteCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificates(struct soap*, struct _tds__DeleteCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificates(struct soap*, struct _tds__DeleteCertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteCertificates(struct soap*, const char *URL, struct _tds__DeleteCertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteCertificates(struct soap*, const char *URL, struct _tds__DeleteCertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteCertificates(struct soap*, const char *URL, struct _tds__DeleteCertificates*);
    soap_POST_recv__tds__DeleteCertificates(struct soap*, struct _tds__DeleteCertificates*);
    @endcode

  - <tds:DeleteCertificatesResponse> @ref _tds__DeleteCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificatesResponse(struct soap*, struct _tds__DeleteCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificatesResponse(struct soap*, struct _tds__DeleteCertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteCertificatesResponse(struct soap*, const char *URL, struct _tds__DeleteCertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteCertificatesResponse(struct soap*, const char *URL, struct _tds__DeleteCertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteCertificatesResponse(struct soap*, const char *URL, struct _tds__DeleteCertificatesResponse*);
    soap_POST_recv__tds__DeleteCertificatesResponse(struct soap*, struct _tds__DeleteCertificatesResponse*);
    @endcode

  - <tds:GetPkcs10Request> @ref _tds__GetPkcs10Request
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10Request(struct soap*, struct _tds__GetPkcs10Request*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10Request(struct soap*, struct _tds__GetPkcs10Request*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPkcs10Request(struct soap*, const char *URL, struct _tds__GetPkcs10Request*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPkcs10Request(struct soap*, const char *URL, struct _tds__GetPkcs10Request*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPkcs10Request(struct soap*, const char *URL, struct _tds__GetPkcs10Request*);
    soap_POST_recv__tds__GetPkcs10Request(struct soap*, struct _tds__GetPkcs10Request*);
    @endcode

  - <tds:GetPkcs10RequestResponse> @ref _tds__GetPkcs10RequestResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10RequestResponse(struct soap*, struct _tds__GetPkcs10RequestResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10RequestResponse(struct soap*, struct _tds__GetPkcs10RequestResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPkcs10RequestResponse(struct soap*, const char *URL, struct _tds__GetPkcs10RequestResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPkcs10RequestResponse(struct soap*, const char *URL, struct _tds__GetPkcs10RequestResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPkcs10RequestResponse(struct soap*, const char *URL, struct _tds__GetPkcs10RequestResponse*);
    soap_POST_recv__tds__GetPkcs10RequestResponse(struct soap*, struct _tds__GetPkcs10RequestResponse*);
    @endcode

  - <tds:LoadCertificates> @ref _tds__LoadCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificates(struct soap*, struct _tds__LoadCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificates(struct soap*, struct _tds__LoadCertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificates(struct soap*, const char *URL, struct _tds__LoadCertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificates(struct soap*, const char *URL, struct _tds__LoadCertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificates(struct soap*, const char *URL, struct _tds__LoadCertificates*);
    soap_POST_recv__tds__LoadCertificates(struct soap*, struct _tds__LoadCertificates*);
    @endcode

  - <tds:LoadCertificatesResponse> @ref _tds__LoadCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificatesResponse(struct soap*, struct _tds__LoadCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificatesResponse(struct soap*, struct _tds__LoadCertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificatesResponse(struct soap*, const char *URL, struct _tds__LoadCertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificatesResponse(struct soap*, const char *URL, struct _tds__LoadCertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificatesResponse(struct soap*, const char *URL, struct _tds__LoadCertificatesResponse*);
    soap_POST_recv__tds__LoadCertificatesResponse(struct soap*, struct _tds__LoadCertificatesResponse*);
    @endcode

  - <tds:GetClientCertificateMode> @ref _tds__GetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateMode(struct soap*, struct _tds__GetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateMode(struct soap*, struct _tds__GetClientCertificateMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetClientCertificateMode(struct soap*, const char *URL, struct _tds__GetClientCertificateMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetClientCertificateMode(struct soap*, const char *URL, struct _tds__GetClientCertificateMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetClientCertificateMode(struct soap*, const char *URL, struct _tds__GetClientCertificateMode*);
    soap_POST_recv__tds__GetClientCertificateMode(struct soap*, struct _tds__GetClientCertificateMode*);
    @endcode

  - <tds:GetClientCertificateModeResponse> @ref _tds__GetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateModeResponse(struct soap*, struct _tds__GetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateModeResponse(struct soap*, struct _tds__GetClientCertificateModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetClientCertificateModeResponse(struct soap*, const char *URL, struct _tds__GetClientCertificateModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetClientCertificateModeResponse(struct soap*, const char *URL, struct _tds__GetClientCertificateModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetClientCertificateModeResponse(struct soap*, const char *URL, struct _tds__GetClientCertificateModeResponse*);
    soap_POST_recv__tds__GetClientCertificateModeResponse(struct soap*, struct _tds__GetClientCertificateModeResponse*);
    @endcode

  - <tds:SetClientCertificateMode> @ref _tds__SetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateMode(struct soap*, struct _tds__SetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateMode(struct soap*, struct _tds__SetClientCertificateMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetClientCertificateMode(struct soap*, const char *URL, struct _tds__SetClientCertificateMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetClientCertificateMode(struct soap*, const char *URL, struct _tds__SetClientCertificateMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetClientCertificateMode(struct soap*, const char *URL, struct _tds__SetClientCertificateMode*);
    soap_POST_recv__tds__SetClientCertificateMode(struct soap*, struct _tds__SetClientCertificateMode*);
    @endcode

  - <tds:SetClientCertificateModeResponse> @ref _tds__SetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateModeResponse(struct soap*, struct _tds__SetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateModeResponse(struct soap*, struct _tds__SetClientCertificateModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetClientCertificateModeResponse(struct soap*, const char *URL, struct _tds__SetClientCertificateModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetClientCertificateModeResponse(struct soap*, const char *URL, struct _tds__SetClientCertificateModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetClientCertificateModeResponse(struct soap*, const char *URL, struct _tds__SetClientCertificateModeResponse*);
    soap_POST_recv__tds__SetClientCertificateModeResponse(struct soap*, struct _tds__SetClientCertificateModeResponse*);
    @endcode

  - <tds:GetCACertificates> @ref _tds__GetCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificates(struct soap*, struct _tds__GetCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificates(struct soap*, struct _tds__GetCACertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCACertificates(struct soap*, const char *URL, struct _tds__GetCACertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCACertificates(struct soap*, const char *URL, struct _tds__GetCACertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCACertificates(struct soap*, const char *URL, struct _tds__GetCACertificates*);
    soap_POST_recv__tds__GetCACertificates(struct soap*, struct _tds__GetCACertificates*);
    @endcode

  - <tds:GetCACertificatesResponse> @ref _tds__GetCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificatesResponse(struct soap*, struct _tds__GetCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificatesResponse(struct soap*, struct _tds__GetCACertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCACertificatesResponse(struct soap*, const char *URL, struct _tds__GetCACertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCACertificatesResponse(struct soap*, const char *URL, struct _tds__GetCACertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCACertificatesResponse(struct soap*, const char *URL, struct _tds__GetCACertificatesResponse*);
    soap_POST_recv__tds__GetCACertificatesResponse(struct soap*, struct _tds__GetCACertificatesResponse*);
    @endcode

  - <tds:LoadCertificateWithPrivateKey> @ref _tds__LoadCertificateWithPrivateKey
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKey(struct soap*, struct _tds__LoadCertificateWithPrivateKey*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKey(struct soap*, struct _tds__LoadCertificateWithPrivateKey*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificateWithPrivateKey(struct soap*, const char *URL, struct _tds__LoadCertificateWithPrivateKey*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificateWithPrivateKey(struct soap*, const char *URL, struct _tds__LoadCertificateWithPrivateKey*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificateWithPrivateKey(struct soap*, const char *URL, struct _tds__LoadCertificateWithPrivateKey*);
    soap_POST_recv__tds__LoadCertificateWithPrivateKey(struct soap*, struct _tds__LoadCertificateWithPrivateKey*);
    @endcode

  - <tds:LoadCertificateWithPrivateKeyResponse> @ref _tds__LoadCertificateWithPrivateKeyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char *URL, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char *URL, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char *URL, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    soap_POST_recv__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, struct _tds__LoadCertificateWithPrivateKeyResponse*);
    @endcode

  - <tds:GetCertificateInformation> @ref _tds__GetCertificateInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformation(struct soap*, struct _tds__GetCertificateInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformation(struct soap*, struct _tds__GetCertificateInformation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificateInformation(struct soap*, const char *URL, struct _tds__GetCertificateInformation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificateInformation(struct soap*, const char *URL, struct _tds__GetCertificateInformation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificateInformation(struct soap*, const char *URL, struct _tds__GetCertificateInformation*);
    soap_POST_recv__tds__GetCertificateInformation(struct soap*, struct _tds__GetCertificateInformation*);
    @endcode

  - <tds:GetCertificateInformationResponse> @ref _tds__GetCertificateInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformationResponse(struct soap*, struct _tds__GetCertificateInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformationResponse(struct soap*, struct _tds__GetCertificateInformationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificateInformationResponse(struct soap*, const char *URL, struct _tds__GetCertificateInformationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificateInformationResponse(struct soap*, const char *URL, struct _tds__GetCertificateInformationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificateInformationResponse(struct soap*, const char *URL, struct _tds__GetCertificateInformationResponse*);
    soap_POST_recv__tds__GetCertificateInformationResponse(struct soap*, struct _tds__GetCertificateInformationResponse*);
    @endcode

  - <tds:LoadCACertificates> @ref _tds__LoadCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificates(struct soap*, struct _tds__LoadCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificates(struct soap*, struct _tds__LoadCACertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCACertificates(struct soap*, const char *URL, struct _tds__LoadCACertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCACertificates(struct soap*, const char *URL, struct _tds__LoadCACertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCACertificates(struct soap*, const char *URL, struct _tds__LoadCACertificates*);
    soap_POST_recv__tds__LoadCACertificates(struct soap*, struct _tds__LoadCACertificates*);
    @endcode

  - <tds:LoadCACertificatesResponse> @ref _tds__LoadCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificatesResponse(struct soap*, struct _tds__LoadCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificatesResponse(struct soap*, struct _tds__LoadCACertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCACertificatesResponse(struct soap*, const char *URL, struct _tds__LoadCACertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCACertificatesResponse(struct soap*, const char *URL, struct _tds__LoadCACertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCACertificatesResponse(struct soap*, const char *URL, struct _tds__LoadCACertificatesResponse*);
    soap_POST_recv__tds__LoadCACertificatesResponse(struct soap*, struct _tds__LoadCACertificatesResponse*);
    @endcode

  - <tds:CreateDot1XConfiguration> @ref _tds__CreateDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfiguration(struct soap*, struct _tds__CreateDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfiguration(struct soap*, struct _tds__CreateDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateDot1XConfiguration(struct soap*, const char *URL, struct _tds__CreateDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateDot1XConfiguration(struct soap*, const char *URL, struct _tds__CreateDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateDot1XConfiguration(struct soap*, const char *URL, struct _tds__CreateDot1XConfiguration*);
    soap_POST_recv__tds__CreateDot1XConfiguration(struct soap*, struct _tds__CreateDot1XConfiguration*);
    @endcode

  - <tds:CreateDot1XConfigurationResponse> @ref _tds__CreateDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfigurationResponse(struct soap*, struct _tds__CreateDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfigurationResponse(struct soap*, struct _tds__CreateDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__CreateDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__CreateDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__CreateDot1XConfigurationResponse*);
    soap_POST_recv__tds__CreateDot1XConfigurationResponse(struct soap*, struct _tds__CreateDot1XConfigurationResponse*);
    @endcode

  - <tds:SetDot1XConfiguration> @ref _tds__SetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfiguration(struct soap*, struct _tds__SetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfiguration(struct soap*, struct _tds__SetDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDot1XConfiguration(struct soap*, const char *URL, struct _tds__SetDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDot1XConfiguration(struct soap*, const char *URL, struct _tds__SetDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDot1XConfiguration(struct soap*, const char *URL, struct _tds__SetDot1XConfiguration*);
    soap_POST_recv__tds__SetDot1XConfiguration(struct soap*, struct _tds__SetDot1XConfiguration*);
    @endcode

  - <tds:SetDot1XConfigurationResponse> @ref _tds__SetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfigurationResponse(struct soap*, struct _tds__SetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfigurationResponse(struct soap*, struct _tds__SetDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__SetDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__SetDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__SetDot1XConfigurationResponse*);
    soap_POST_recv__tds__SetDot1XConfigurationResponse(struct soap*, struct _tds__SetDot1XConfigurationResponse*);
    @endcode

  - <tds:GetDot1XConfiguration> @ref _tds__GetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfiguration(struct soap*, struct _tds__GetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfiguration(struct soap*, struct _tds__GetDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfiguration(struct soap*, const char *URL, struct _tds__GetDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfiguration(struct soap*, const char *URL, struct _tds__GetDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfiguration(struct soap*, const char *URL, struct _tds__GetDot1XConfiguration*);
    soap_POST_recv__tds__GetDot1XConfiguration(struct soap*, struct _tds__GetDot1XConfiguration*);
    @endcode

  - <tds:GetDot1XConfigurationResponse> @ref _tds__GetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationResponse(struct soap*, struct _tds__GetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationResponse(struct soap*, struct _tds__GetDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__GetDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__GetDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__GetDot1XConfigurationResponse*);
    soap_POST_recv__tds__GetDot1XConfigurationResponse(struct soap*, struct _tds__GetDot1XConfigurationResponse*);
    @endcode

  - <tds:GetDot1XConfigurations> @ref _tds__GetDot1XConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurations(struct soap*, struct _tds__GetDot1XConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurations(struct soap*, struct _tds__GetDot1XConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfigurations(struct soap*, const char *URL, struct _tds__GetDot1XConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfigurations(struct soap*, const char *URL, struct _tds__GetDot1XConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfigurations(struct soap*, const char *URL, struct _tds__GetDot1XConfigurations*);
    soap_POST_recv__tds__GetDot1XConfigurations(struct soap*, struct _tds__GetDot1XConfigurations*);
    @endcode

  - <tds:GetDot1XConfigurationsResponse> @ref _tds__GetDot1XConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationsResponse(struct soap*, struct _tds__GetDot1XConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationsResponse(struct soap*, struct _tds__GetDot1XConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfigurationsResponse(struct soap*, const char *URL, struct _tds__GetDot1XConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfigurationsResponse(struct soap*, const char *URL, struct _tds__GetDot1XConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfigurationsResponse(struct soap*, const char *URL, struct _tds__GetDot1XConfigurationsResponse*);
    soap_POST_recv__tds__GetDot1XConfigurationsResponse(struct soap*, struct _tds__GetDot1XConfigurationsResponse*);
    @endcode

  - <tds:DeleteDot1XConfiguration> @ref _tds__DeleteDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfiguration(struct soap*, struct _tds__DeleteDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfiguration(struct soap*, struct _tds__DeleteDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteDot1XConfiguration(struct soap*, const char *URL, struct _tds__DeleteDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteDot1XConfiguration(struct soap*, const char *URL, struct _tds__DeleteDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteDot1XConfiguration(struct soap*, const char *URL, struct _tds__DeleteDot1XConfiguration*);
    soap_POST_recv__tds__DeleteDot1XConfiguration(struct soap*, struct _tds__DeleteDot1XConfiguration*);
    @endcode

  - <tds:DeleteDot1XConfigurationResponse> @ref _tds__DeleteDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfigurationResponse(struct soap*, struct _tds__DeleteDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfigurationResponse(struct soap*, struct _tds__DeleteDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__DeleteDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__DeleteDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteDot1XConfigurationResponse(struct soap*, const char *URL, struct _tds__DeleteDot1XConfigurationResponse*);
    soap_POST_recv__tds__DeleteDot1XConfigurationResponse(struct soap*, struct _tds__DeleteDot1XConfigurationResponse*);
    @endcode

  - <tds:GetRelayOutputs> @ref _tds__GetRelayOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputs(struct soap*, struct _tds__GetRelayOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputs(struct soap*, struct _tds__GetRelayOutputs*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRelayOutputs(struct soap*, const char *URL, struct _tds__GetRelayOutputs*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRelayOutputs(struct soap*, const char *URL, struct _tds__GetRelayOutputs*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRelayOutputs(struct soap*, const char *URL, struct _tds__GetRelayOutputs*);
    soap_POST_recv__tds__GetRelayOutputs(struct soap*, struct _tds__GetRelayOutputs*);
    @endcode

  - <tds:GetRelayOutputsResponse> @ref _tds__GetRelayOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputsResponse(struct soap*, struct _tds__GetRelayOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputsResponse(struct soap*, struct _tds__GetRelayOutputsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRelayOutputsResponse(struct soap*, const char *URL, struct _tds__GetRelayOutputsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRelayOutputsResponse(struct soap*, const char *URL, struct _tds__GetRelayOutputsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRelayOutputsResponse(struct soap*, const char *URL, struct _tds__GetRelayOutputsResponse*);
    soap_POST_recv__tds__GetRelayOutputsResponse(struct soap*, struct _tds__GetRelayOutputsResponse*);
    @endcode

  - <tds:SetRelayOutputSettings> @ref _tds__SetRelayOutputSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettings(struct soap*, struct _tds__SetRelayOutputSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettings(struct soap*, struct _tds__SetRelayOutputSettings*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputSettings(struct soap*, const char *URL, struct _tds__SetRelayOutputSettings*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputSettings(struct soap*, const char *URL, struct _tds__SetRelayOutputSettings*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputSettings(struct soap*, const char *URL, struct _tds__SetRelayOutputSettings*);
    soap_POST_recv__tds__SetRelayOutputSettings(struct soap*, struct _tds__SetRelayOutputSettings*);
    @endcode

  - <tds:SetRelayOutputSettingsResponse> @ref _tds__SetRelayOutputSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettingsResponse(struct soap*, struct _tds__SetRelayOutputSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettingsResponse(struct soap*, struct _tds__SetRelayOutputSettingsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputSettingsResponse(struct soap*, const char *URL, struct _tds__SetRelayOutputSettingsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputSettingsResponse(struct soap*, const char *URL, struct _tds__SetRelayOutputSettingsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputSettingsResponse(struct soap*, const char *URL, struct _tds__SetRelayOutputSettingsResponse*);
    soap_POST_recv__tds__SetRelayOutputSettingsResponse(struct soap*, struct _tds__SetRelayOutputSettingsResponse*);
    @endcode

  - <tds:SetRelayOutputState> @ref _tds__SetRelayOutputState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputState(struct soap*, struct _tds__SetRelayOutputState*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputState(struct soap*, struct _tds__SetRelayOutputState*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputState(struct soap*, const char *URL, struct _tds__SetRelayOutputState*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputState(struct soap*, const char *URL, struct _tds__SetRelayOutputState*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputState(struct soap*, const char *URL, struct _tds__SetRelayOutputState*);
    soap_POST_recv__tds__SetRelayOutputState(struct soap*, struct _tds__SetRelayOutputState*);
    @endcode

  - <tds:SetRelayOutputStateResponse> @ref _tds__SetRelayOutputStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputStateResponse(struct soap*, struct _tds__SetRelayOutputStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputStateResponse(struct soap*, struct _tds__SetRelayOutputStateResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputStateResponse(struct soap*, const char *URL, struct _tds__SetRelayOutputStateResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputStateResponse(struct soap*, const char *URL, struct _tds__SetRelayOutputStateResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputStateResponse(struct soap*, const char *URL, struct _tds__SetRelayOutputStateResponse*);
    soap_POST_recv__tds__SetRelayOutputStateResponse(struct soap*, struct _tds__SetRelayOutputStateResponse*);
    @endcode

  - <tds:SendAuxiliaryCommand> @ref _tds__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommand(struct soap*, struct _tds__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommand(struct soap*, struct _tds__SendAuxiliaryCommand*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SendAuxiliaryCommand(struct soap*, const char *URL, struct _tds__SendAuxiliaryCommand*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SendAuxiliaryCommand(struct soap*, const char *URL, struct _tds__SendAuxiliaryCommand*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SendAuxiliaryCommand(struct soap*, const char *URL, struct _tds__SendAuxiliaryCommand*);
    soap_POST_recv__tds__SendAuxiliaryCommand(struct soap*, struct _tds__SendAuxiliaryCommand*);
    @endcode

  - <tds:SendAuxiliaryCommandResponse> @ref _tds__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommandResponse(struct soap*, struct _tds__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommandResponse(struct soap*, struct _tds__SendAuxiliaryCommandResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SendAuxiliaryCommandResponse(struct soap*, const char *URL, struct _tds__SendAuxiliaryCommandResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SendAuxiliaryCommandResponse(struct soap*, const char *URL, struct _tds__SendAuxiliaryCommandResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SendAuxiliaryCommandResponse(struct soap*, const char *URL, struct _tds__SendAuxiliaryCommandResponse*);
    soap_POST_recv__tds__SendAuxiliaryCommandResponse(struct soap*, struct _tds__SendAuxiliaryCommandResponse*);
    @endcode

  - <tds:GetDot11Capabilities> @ref _tds__GetDot11Capabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Capabilities(struct soap*, struct _tds__GetDot11Capabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Capabilities(struct soap*, struct _tds__GetDot11Capabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11Capabilities(struct soap*, const char *URL, struct _tds__GetDot11Capabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11Capabilities(struct soap*, const char *URL, struct _tds__GetDot11Capabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11Capabilities(struct soap*, const char *URL, struct _tds__GetDot11Capabilities*);
    soap_POST_recv__tds__GetDot11Capabilities(struct soap*, struct _tds__GetDot11Capabilities*);
    @endcode

  - <tds:GetDot11CapabilitiesResponse> @ref _tds__GetDot11CapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11CapabilitiesResponse(struct soap*, struct _tds__GetDot11CapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11CapabilitiesResponse(struct soap*, struct _tds__GetDot11CapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11CapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetDot11CapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11CapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetDot11CapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11CapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetDot11CapabilitiesResponse*);
    soap_POST_recv__tds__GetDot11CapabilitiesResponse(struct soap*, struct _tds__GetDot11CapabilitiesResponse*);
    @endcode

  - <tds:GetDot11Status> @ref _tds__GetDot11Status
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Status(struct soap*, struct _tds__GetDot11Status*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Status(struct soap*, struct _tds__GetDot11Status*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11Status(struct soap*, const char *URL, struct _tds__GetDot11Status*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11Status(struct soap*, const char *URL, struct _tds__GetDot11Status*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11Status(struct soap*, const char *URL, struct _tds__GetDot11Status*);
    soap_POST_recv__tds__GetDot11Status(struct soap*, struct _tds__GetDot11Status*);
    @endcode

  - <tds:GetDot11StatusResponse> @ref _tds__GetDot11StatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11StatusResponse(struct soap*, struct _tds__GetDot11StatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11StatusResponse(struct soap*, struct _tds__GetDot11StatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11StatusResponse(struct soap*, const char *URL, struct _tds__GetDot11StatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11StatusResponse(struct soap*, const char *URL, struct _tds__GetDot11StatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11StatusResponse(struct soap*, const char *URL, struct _tds__GetDot11StatusResponse*);
    soap_POST_recv__tds__GetDot11StatusResponse(struct soap*, struct _tds__GetDot11StatusResponse*);
    @endcode

  - <tds:ScanAvailableDot11Networks> @ref _tds__ScanAvailableDot11Networks
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11Networks(struct soap*, struct _tds__ScanAvailableDot11Networks*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11Networks(struct soap*, struct _tds__ScanAvailableDot11Networks*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__ScanAvailableDot11Networks(struct soap*, const char *URL, struct _tds__ScanAvailableDot11Networks*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__ScanAvailableDot11Networks(struct soap*, const char *URL, struct _tds__ScanAvailableDot11Networks*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__ScanAvailableDot11Networks(struct soap*, const char *URL, struct _tds__ScanAvailableDot11Networks*);
    soap_POST_recv__tds__ScanAvailableDot11Networks(struct soap*, struct _tds__ScanAvailableDot11Networks*);
    @endcode

  - <tds:ScanAvailableDot11NetworksResponse> @ref _tds__ScanAvailableDot11NetworksResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11NetworksResponse(struct soap*, struct _tds__ScanAvailableDot11NetworksResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11NetworksResponse(struct soap*, struct _tds__ScanAvailableDot11NetworksResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char *URL, struct _tds__ScanAvailableDot11NetworksResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char *URL, struct _tds__ScanAvailableDot11NetworksResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char *URL, struct _tds__ScanAvailableDot11NetworksResponse*);
    soap_POST_recv__tds__ScanAvailableDot11NetworksResponse(struct soap*, struct _tds__ScanAvailableDot11NetworksResponse*);
    @endcode

  - <tds:GetSystemUris> @ref _tds__GetSystemUris
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUris(struct soap*, struct _tds__GetSystemUris*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUris(struct soap*, struct _tds__GetSystemUris*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemUris(struct soap*, const char *URL, struct _tds__GetSystemUris*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemUris(struct soap*, const char *URL, struct _tds__GetSystemUris*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemUris(struct soap*, const char *URL, struct _tds__GetSystemUris*);
    soap_POST_recv__tds__GetSystemUris(struct soap*, struct _tds__GetSystemUris*);
    @endcode

  - <tds:GetSystemUrisResponse> @ref _tds__GetSystemUrisResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUrisResponse(struct soap*, struct _tds__GetSystemUrisResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUrisResponse(struct soap*, struct _tds__GetSystemUrisResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemUrisResponse(struct soap*, const char *URL, struct _tds__GetSystemUrisResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemUrisResponse(struct soap*, const char *URL, struct _tds__GetSystemUrisResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemUrisResponse(struct soap*, const char *URL, struct _tds__GetSystemUrisResponse*);
    soap_POST_recv__tds__GetSystemUrisResponse(struct soap*, struct _tds__GetSystemUrisResponse*);
    @endcode

  - <tds:StartFirmwareUpgrade> @ref _tds__StartFirmwareUpgrade
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgrade(struct soap*, struct _tds__StartFirmwareUpgrade*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgrade(struct soap*, struct _tds__StartFirmwareUpgrade*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartFirmwareUpgrade(struct soap*, const char *URL, struct _tds__StartFirmwareUpgrade*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartFirmwareUpgrade(struct soap*, const char *URL, struct _tds__StartFirmwareUpgrade*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartFirmwareUpgrade(struct soap*, const char *URL, struct _tds__StartFirmwareUpgrade*);
    soap_POST_recv__tds__StartFirmwareUpgrade(struct soap*, struct _tds__StartFirmwareUpgrade*);
    @endcode

  - <tds:StartFirmwareUpgradeResponse> @ref _tds__StartFirmwareUpgradeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgradeResponse(struct soap*, struct _tds__StartFirmwareUpgradeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgradeResponse(struct soap*, struct _tds__StartFirmwareUpgradeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartFirmwareUpgradeResponse(struct soap*, const char *URL, struct _tds__StartFirmwareUpgradeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartFirmwareUpgradeResponse(struct soap*, const char *URL, struct _tds__StartFirmwareUpgradeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartFirmwareUpgradeResponse(struct soap*, const char *URL, struct _tds__StartFirmwareUpgradeResponse*);
    soap_POST_recv__tds__StartFirmwareUpgradeResponse(struct soap*, struct _tds__StartFirmwareUpgradeResponse*);
    @endcode

  - <tds:StartSystemRestore> @ref _tds__StartSystemRestore
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestore(struct soap*, struct _tds__StartSystemRestore*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestore(struct soap*, struct _tds__StartSystemRestore*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartSystemRestore(struct soap*, const char *URL, struct _tds__StartSystemRestore*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartSystemRestore(struct soap*, const char *URL, struct _tds__StartSystemRestore*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartSystemRestore(struct soap*, const char *URL, struct _tds__StartSystemRestore*);
    soap_POST_recv__tds__StartSystemRestore(struct soap*, struct _tds__StartSystemRestore*);
    @endcode

  - <tds:StartSystemRestoreResponse> @ref _tds__StartSystemRestoreResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestoreResponse(struct soap*, struct _tds__StartSystemRestoreResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestoreResponse(struct soap*, struct _tds__StartSystemRestoreResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartSystemRestoreResponse(struct soap*, const char *URL, struct _tds__StartSystemRestoreResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartSystemRestoreResponse(struct soap*, const char *URL, struct _tds__StartSystemRestoreResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartSystemRestoreResponse(struct soap*, const char *URL, struct _tds__StartSystemRestoreResponse*);
    soap_POST_recv__tds__StartSystemRestoreResponse(struct soap*, struct _tds__StartSystemRestoreResponse*);
    @endcode

  - <tds:GetStorageConfigurations> @ref _tds__GetStorageConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurations(struct soap*, struct _tds__GetStorageConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurations(struct soap*, struct _tds__GetStorageConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfigurations(struct soap*, const char *URL, struct _tds__GetStorageConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfigurations(struct soap*, const char *URL, struct _tds__GetStorageConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfigurations(struct soap*, const char *URL, struct _tds__GetStorageConfigurations*);
    soap_POST_recv__tds__GetStorageConfigurations(struct soap*, struct _tds__GetStorageConfigurations*);
    @endcode

  - <tds:GetStorageConfigurationsResponse> @ref _tds__GetStorageConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurationsResponse(struct soap*, struct _tds__GetStorageConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurationsResponse(struct soap*, struct _tds__GetStorageConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfigurationsResponse(struct soap*, const char *URL, struct _tds__GetStorageConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfigurationsResponse(struct soap*, const char *URL, struct _tds__GetStorageConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfigurationsResponse(struct soap*, const char *URL, struct _tds__GetStorageConfigurationsResponse*);
    soap_POST_recv__tds__GetStorageConfigurationsResponse(struct soap*, struct _tds__GetStorageConfigurationsResponse*);
    @endcode

  - <tds:CreateStorageConfiguration> @ref _tds__CreateStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateStorageConfiguration(struct soap*, struct _tds__CreateStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateStorageConfiguration(struct soap*, struct _tds__CreateStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateStorageConfiguration(struct soap*, const char *URL, struct _tds__CreateStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateStorageConfiguration(struct soap*, const char *URL, struct _tds__CreateStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateStorageConfiguration(struct soap*, const char *URL, struct _tds__CreateStorageConfiguration*);
    soap_POST_recv__tds__CreateStorageConfiguration(struct soap*, struct _tds__CreateStorageConfiguration*);
    @endcode

  - <tds:CreateStorageConfigurationResponse> @ref _tds__CreateStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateStorageConfigurationResponse(struct soap*, struct _tds__CreateStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateStorageConfigurationResponse(struct soap*, struct _tds__CreateStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__CreateStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__CreateStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__CreateStorageConfigurationResponse*);
    soap_POST_recv__tds__CreateStorageConfigurationResponse(struct soap*, struct _tds__CreateStorageConfigurationResponse*);
    @endcode

  - <tds:GetStorageConfiguration> @ref _tds__GetStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfiguration(struct soap*, struct _tds__GetStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfiguration(struct soap*, struct _tds__GetStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfiguration(struct soap*, const char *URL, struct _tds__GetStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfiguration(struct soap*, const char *URL, struct _tds__GetStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfiguration(struct soap*, const char *URL, struct _tds__GetStorageConfiguration*);
    soap_POST_recv__tds__GetStorageConfiguration(struct soap*, struct _tds__GetStorageConfiguration*);
    @endcode

  - <tds:GetStorageConfigurationResponse> @ref _tds__GetStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurationResponse(struct soap*, struct _tds__GetStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurationResponse(struct soap*, struct _tds__GetStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__GetStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__GetStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__GetStorageConfigurationResponse*);
    soap_POST_recv__tds__GetStorageConfigurationResponse(struct soap*, struct _tds__GetStorageConfigurationResponse*);
    @endcode

  - <tds:SetStorageConfiguration> @ref _tds__SetStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetStorageConfiguration(struct soap*, struct _tds__SetStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetStorageConfiguration(struct soap*, struct _tds__SetStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetStorageConfiguration(struct soap*, const char *URL, struct _tds__SetStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetStorageConfiguration(struct soap*, const char *URL, struct _tds__SetStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetStorageConfiguration(struct soap*, const char *URL, struct _tds__SetStorageConfiguration*);
    soap_POST_recv__tds__SetStorageConfiguration(struct soap*, struct _tds__SetStorageConfiguration*);
    @endcode

  - <tds:SetStorageConfigurationResponse> @ref _tds__SetStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetStorageConfigurationResponse(struct soap*, struct _tds__SetStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetStorageConfigurationResponse(struct soap*, struct _tds__SetStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__SetStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__SetStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__SetStorageConfigurationResponse*);
    soap_POST_recv__tds__SetStorageConfigurationResponse(struct soap*, struct _tds__SetStorageConfigurationResponse*);
    @endcode

  - <tds:DeleteStorageConfiguration> @ref _tds__DeleteStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteStorageConfiguration(struct soap*, struct _tds__DeleteStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteStorageConfiguration(struct soap*, struct _tds__DeleteStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteStorageConfiguration(struct soap*, const char *URL, struct _tds__DeleteStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteStorageConfiguration(struct soap*, const char *URL, struct _tds__DeleteStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteStorageConfiguration(struct soap*, const char *URL, struct _tds__DeleteStorageConfiguration*);
    soap_POST_recv__tds__DeleteStorageConfiguration(struct soap*, struct _tds__DeleteStorageConfiguration*);
    @endcode

  - <tds:DeleteStorageConfigurationResponse> @ref _tds__DeleteStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteStorageConfigurationResponse(struct soap*, struct _tds__DeleteStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteStorageConfigurationResponse(struct soap*, struct _tds__DeleteStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__DeleteStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__DeleteStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteStorageConfigurationResponse(struct soap*, const char *URL, struct _tds__DeleteStorageConfigurationResponse*);
    soap_POST_recv__tds__DeleteStorageConfigurationResponse(struct soap*, struct _tds__DeleteStorageConfigurationResponse*);
    @endcode

  - <tds:GetGeoLocation> @ref _tds__GetGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetGeoLocation(struct soap*, struct _tds__GetGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetGeoLocation(struct soap*, struct _tds__GetGeoLocation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetGeoLocation(struct soap*, const char *URL, struct _tds__GetGeoLocation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetGeoLocation(struct soap*, const char *URL, struct _tds__GetGeoLocation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetGeoLocation(struct soap*, const char *URL, struct _tds__GetGeoLocation*);
    soap_POST_recv__tds__GetGeoLocation(struct soap*, struct _tds__GetGeoLocation*);
    @endcode

  - <tds:GetGeoLocationResponse> @ref _tds__GetGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetGeoLocationResponse(struct soap*, struct _tds__GetGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetGeoLocationResponse(struct soap*, struct _tds__GetGeoLocationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetGeoLocationResponse(struct soap*, const char *URL, struct _tds__GetGeoLocationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetGeoLocationResponse(struct soap*, const char *URL, struct _tds__GetGeoLocationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetGeoLocationResponse(struct soap*, const char *URL, struct _tds__GetGeoLocationResponse*);
    soap_POST_recv__tds__GetGeoLocationResponse(struct soap*, struct _tds__GetGeoLocationResponse*);
    @endcode

  - <tds:SetGeoLocation> @ref _tds__SetGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetGeoLocation(struct soap*, struct _tds__SetGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetGeoLocation(struct soap*, struct _tds__SetGeoLocation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetGeoLocation(struct soap*, const char *URL, struct _tds__SetGeoLocation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetGeoLocation(struct soap*, const char *URL, struct _tds__SetGeoLocation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetGeoLocation(struct soap*, const char *URL, struct _tds__SetGeoLocation*);
    soap_POST_recv__tds__SetGeoLocation(struct soap*, struct _tds__SetGeoLocation*);
    @endcode

  - <tds:SetGeoLocationResponse> @ref _tds__SetGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetGeoLocationResponse(struct soap*, struct _tds__SetGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetGeoLocationResponse(struct soap*, struct _tds__SetGeoLocationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetGeoLocationResponse(struct soap*, const char *URL, struct _tds__SetGeoLocationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetGeoLocationResponse(struct soap*, const char *URL, struct _tds__SetGeoLocationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetGeoLocationResponse(struct soap*, const char *URL, struct _tds__SetGeoLocationResponse*);
    soap_POST_recv__tds__SetGeoLocationResponse(struct soap*, struct _tds__SetGeoLocationResponse*);
    @endcode

  - <tds:DeleteGeoLocation> @ref _tds__DeleteGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteGeoLocation(struct soap*, struct _tds__DeleteGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteGeoLocation(struct soap*, struct _tds__DeleteGeoLocation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteGeoLocation(struct soap*, const char *URL, struct _tds__DeleteGeoLocation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteGeoLocation(struct soap*, const char *URL, struct _tds__DeleteGeoLocation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteGeoLocation(struct soap*, const char *URL, struct _tds__DeleteGeoLocation*);
    soap_POST_recv__tds__DeleteGeoLocation(struct soap*, struct _tds__DeleteGeoLocation*);
    @endcode

  - <tds:DeleteGeoLocationResponse> @ref _tds__DeleteGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteGeoLocationResponse(struct soap*, struct _tds__DeleteGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteGeoLocationResponse(struct soap*, struct _tds__DeleteGeoLocationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteGeoLocationResponse(struct soap*, const char *URL, struct _tds__DeleteGeoLocationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteGeoLocationResponse(struct soap*, const char *URL, struct _tds__DeleteGeoLocationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteGeoLocationResponse(struct soap*, const char *URL, struct _tds__DeleteGeoLocationResponse*);
    soap_POST_recv__tds__DeleteGeoLocationResponse(struct soap*, struct _tds__DeleteGeoLocationResponse*);
    @endcode

*/

/**

@section tt Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <tt:StringItems> (use wsdl2h option -g to auto-generate type _tt__StringItems)

  - <tt:StringList> (use wsdl2h option -g to auto-generate type _tt__StringList)

  - <tt:IntRange> (use wsdl2h option -g to auto-generate type _tt__IntRange)

  - <tt:IntList> (use wsdl2h option -g to auto-generate type _tt__IntList)

  - <tt:FloatRange> (use wsdl2h option -g to auto-generate type _tt__FloatRange)

  - <tt:FloatList> (use wsdl2h option -g to auto-generate type _tt__FloatList)

  - <tt:DurationRange> (use wsdl2h option -g to auto-generate type _tt__DurationRange)

  - <tt:IntRectangleRange> (use wsdl2h option -g to auto-generate type _tt__IntRectangleRange)

  - <tt:VideoSourceConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoSourceConfiguration)

  - <tt:AudioSourceConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioSourceConfiguration)

  - <tt:VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoEncoderConfiguration)

  - <tt:AudioEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioEncoderConfiguration)

  - <tt:VideoAnalyticsConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoAnalyticsConfiguration)

  - <tt:PTZConfiguration> (use wsdl2h option -g to auto-generate type _tt__PTZConfiguration)

  - <tt:MetadataConfiguration> (use wsdl2h option -g to auto-generate type _tt__MetadataConfiguration)

  - <tt:AudioOutputConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioOutputConfiguration)

  - <tt:AudioDecoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioDecoderConfiguration)

  - <tt:Message> (use wsdl2h option -g to auto-generate type _tt__Message)

  - <tt:Polyline> (use wsdl2h option -g to auto-generate type _tt__Polyline)

  - <tt:PolygonOptions> (use wsdl2h option -g to auto-generate type _tt__PolygonOptions)

  - <tt:Polygon> (use wsdl2h option -g to auto-generate type _tt__Polygon)

*/

/**

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <wsnt:TopicExpression> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpression)

  - <wsnt:FixedTopicSet> (use wsdl2h option -g to auto-generate type _wsnt__FixedTopicSet)

  - <wsnt:TopicExpressionDialect> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialect)

  - <wsnt:NotificationProducerRP> (use wsdl2h option -g to auto-generate type _wsnt__NotificationProducerRP)

  - <wsnt:ConsumerReference> (use wsdl2h option -g to auto-generate type _wsnt__ConsumerReference)

  - <wsnt:Filter> (use wsdl2h option -g to auto-generate type _wsnt__Filter)

  - <wsnt:SubscriptionPolicy> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionPolicy)

  - <wsnt:CreationTime> (use wsdl2h option -g to auto-generate type _wsnt__CreationTime)

  - <wsnt:SubscriptionManagerRP> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionManagerRP)

  - <wsnt:SubscriptionReference> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionReference)

  - <wsnt:Topic> (use wsdl2h option -g to auto-generate type _wsnt__Topic)

  - <wsnt:ProducerReference> (use wsdl2h option -g to auto-generate type _wsnt__ProducerReference)

  - <wsnt:NotificationMessage> (use wsdl2h option -g to auto-generate type _wsnt__NotificationMessage)

  - <wsnt:Notify> (use wsdl2h option -g to auto-generate type _wsnt__Notify)

  - <wsnt:CurrentTime> (use wsdl2h option -g to auto-generate type _wsnt__CurrentTime)

  - <wsnt:TerminationTime> (use wsdl2h option -g to auto-generate type _wsnt__TerminationTime)

  - <wsnt:ProducerProperties> (use wsdl2h option -g to auto-generate type _wsnt__ProducerProperties)

  - <wsnt:MessageContent> (use wsdl2h option -g to auto-generate type _wsnt__MessageContent)

  - <wsnt:UseRaw> (use wsdl2h option -g to auto-generate type _wsnt__UseRaw)

  - <wsnt:Subscribe> (use wsdl2h option -g to auto-generate type _wsnt__Subscribe)

  - <wsnt:SubscribeResponse> (use wsdl2h option -g to auto-generate type _wsnt__SubscribeResponse)

  - <wsnt:GetCurrentMessage> (use wsdl2h option -g to auto-generate type _wsnt__GetCurrentMessage)

  - <wsnt:GetCurrentMessageResponse> (use wsdl2h option -g to auto-generate type _wsnt__GetCurrentMessageResponse)

  - <wsnt:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__SubscribeCreationFailedFault)

  - <wsnt:InvalidFilterFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidFilterFault)

  - <wsnt:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialectUnknownFault)

  - <wsnt:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidTopicExpressionFault)

  - <wsnt:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicNotSupportedFault)

  - <wsnt:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate type _wsnt__MultipleTopicsSpecifiedFault)

  - <wsnt:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidProducerPropertiesExpressionFault)

  - <wsnt:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidMessageContentExpressionFault)

  - <wsnt:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnrecognizedPolicyRequestFault)

  - <wsnt:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnsupportedPolicyRequestFault)

  - <wsnt:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__NotifyMessageNotSupportedFault)

  - <wsnt:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableInitialTerminationTimeFault)

  - <wsnt:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate type _wsnt__NoCurrentMessageOnTopicFault)

  - <wsnt:GetMessages> (use wsdl2h option -g to auto-generate type _wsnt__GetMessages)

  - <wsnt:GetMessagesResponse> (use wsdl2h option -g to auto-generate type _wsnt__GetMessagesResponse)

  - <wsnt:DestroyPullPoint> (use wsdl2h option -g to auto-generate type _wsnt__DestroyPullPoint)

  - <wsnt:DestroyPullPointResponse> (use wsdl2h option -g to auto-generate type _wsnt__DestroyPullPointResponse)

  - <wsnt:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToGetMessagesFault)

  - <wsnt:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroyPullPointFault)

  - <wsnt:CreatePullPoint> (use wsdl2h option -g to auto-generate type _wsnt__CreatePullPoint)

  - <wsnt:CreatePullPointResponse> (use wsdl2h option -g to auto-generate type _wsnt__CreatePullPointResponse)

  - <wsnt:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToCreatePullPointFault)

  - <wsnt:Renew> (use wsdl2h option -g to auto-generate type _wsnt__Renew)

  - <wsnt:RenewResponse> (use wsdl2h option -g to auto-generate type _wsnt__RenewResponse)

  - <wsnt:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableTerminationTimeFault)

  - <wsnt:Unsubscribe> (use wsdl2h option -g to auto-generate type _wsnt__Unsubscribe)

  - <wsnt:UnsubscribeResponse> (use wsdl2h option -g to auto-generate type _wsnt__UnsubscribeResponse)

  - <wsnt:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroySubscriptionFault)

  - <wsnt:PauseSubscription> (use wsdl2h option -g to auto-generate type _wsnt__PauseSubscription)

  - <wsnt:PauseSubscriptionResponse> (use wsdl2h option -g to auto-generate type _wsnt__PauseSubscriptionResponse)

  - <wsnt:ResumeSubscription> (use wsdl2h option -g to auto-generate type _wsnt__ResumeSubscription)

  - <wsnt:ResumeSubscriptionResponse> (use wsdl2h option -g to auto-generate type _wsnt__ResumeSubscriptionResponse)

  - <wsnt:PauseFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__PauseFailedFault)

  - <wsnt:ResumeFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__ResumeFailedFault)

*/

/**

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <wsrfbf:BaseFault> (use wsdl2h option -g to auto-generate type _wsrfbf__BaseFault)

*/

/**

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <wstop:TopicNamespace> (use wsdl2h option -g to auto-generate type _wstop__TopicNamespace)

  - <wstop:TopicSet> (use wsdl2h option -g to auto-generate type _wstop__TopicSet)

*/

/**

@section tdn Top-level root elements of schema "http://www.onvif.org/ver10/network/wsdl"

  - <tdn:Hello> (use wsdl2h option -g to auto-generate type _tdn__Hello)

  - <tdn:HelloResponse> (use wsdl2h option -g to auto-generate type _tdn__HelloResponse)

  - <tdn:Probe> (use wsdl2h option -g to auto-generate type _tdn__Probe)

  - <tdn:ProbeResponse> (use wsdl2h option -g to auto-generate type _tdn__ProbeResponse)

  - <tdn:Bye> (use wsdl2h option -g to auto-generate type _tdn__Bye)

  - <tdn:ByeResponse> (use wsdl2h option -g to auto-generate type _tdn__ByeResponse)

*/

/* End of onvif.h */
